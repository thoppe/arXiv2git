{
  "read_at": 1462551636, 
  "description": "Ruby wrapper around the Lateral API", 
  "README.md": "# LateralRecommender\n\n[![Build Status](https://travis-ci.org/lateral/recommender-gem.svg?branch=master)](https://travis-ci.org/lateral/recommender-gem)  ![Gem Version](https://badge.fury.io/rb/lateral_recommender.svg) [![Yard Docs](http://img.shields.io/badge/yard-docs-blue.svg)](http://rubydoc.info/github/lateral/recommender-gem/master)\n\n\nThis is a Ruby wrapper around the [Lateral](https://lateral.io/) [Conceptual text-matching API](https://lateral.io/docs/text-matching). At the moment it only supports [/add](https://lateral.io/docs/text-matching/api-reference#add-document-post), [/recommend-by-text](https://lateral.io/docs/text-matching/api-reference#recommend-by-text-post), [/recommend-by-id](https://lateral.io/docs/text-matching/api-reference#recommend-by-id-post) and our [pre-populated recommenders](https://lateral.io/docs/text-matching/pre-populated-recommenders). You can find the full API reference [here](https://lateral.io/docs/text-matching/api-reference).\n\n## Installation\n\nAdd this line to your application's Gemfile:\n\n```ruby\ngem 'lateral_recommender'\n```\n\nAnd then execute:\n\n\t$ bundle install\n\n## Usage\n\n### Get an API key\n\nAn API key is required in order to use our API. To do this go to our [docs page](https://lateral.io/docs) and click the 'Get Access' button in the top right. Choose the 'Conceptual text-matcher' API and you'll get emailed details of how to get your key.\n\n### Use the API\n\nInitialize `LateralRecommender` with your API key by running:\n\n```ruby\napi = LateralRecommender::API.new YOUR_API_KEY\n```\n\n#### Add a document\n\nTo add a document to the API call:\n\n```ruby\napi.add document_id: 'document_id', text: 'document text'\n```\n\nPlease be aware that if you don't send enough meaningful text the API will return an error. So please ensure there is at least 100 or so words in the document you're adding.\n\n#### Recommend by text\n\nTo get recommendations for some text, use `recommend_by_text`:\n\n```ruby\napi.recommend_by_text 'document text'\n```\n\n#### Recommend by ID\n\nTo get recommendations for a document that's in the API, use `recommend_by_id`:\n\n```ruby\napi.recommend_by_id 'document_id'\n```\nThis returns an array of Hashes containing a `document_id` and `distance`.\n\n#### Pre-populated recommenders\n\nIf you don't want to insert your own documents to the API, you can query one of our pre-populated recommenders:\n\n* **[arXiv](https://lateral.io/docs/text-matching/pre-populated-recommenders#arxiv)** - 1M+ academic papers in Physics, Mathematics and Computer Science (updated daily)\n* **[News](https://lateral.io/docs/text-matching/pre-populated-recommenders#news)** - 250,000+ curated news articles (updated every 15mins)\n* **[PubMed](https://lateral.io/docs/text-matching/pre-populated-recommenders#pubmed)** - 6M+ medical journals (from before July 2014)\n* **[SEC Data](https://lateral.io/docs/text-matching/pre-populated-recommenders#sec-data)** - 6,000+ yearly financial reports / 10-K filings (from 2014)\n* **[Wikipedia](https://lateral.io/docs/text-matching/pre-populated-recommenders#wikipedia)** - 463,000 Wikipedia pages (which had 20+ page views in 2013)\n\nTo use one of these, initialize `LateralRecommender` with a second argument containing the corpus:\n\n```ruby\napi = LateralRecommender::API.new YOUR_API_KEY, 'news'\n```\n\nThe available values are `arxiv`, `news`, `pubmed`, `sec` or `wikipedia`. These allow you to query the recommender using `recommend_by_text` or `recommend_by_id` without the need for adding your own documents. By text:\n\n```ruby\napi.recommend_by_text 'document text'\n```\n\nOr with a document ID:\n\n```ruby\napi.recommend_by_id 'arxiv-http://arxiv.org/abs/1403.2165'\n```\n\nNote: For the SEC data, you need to set a collections array:\n\n```ruby\napi.recommend_by_text 'document text', collections: '[\"item1a\"]'\n```\n\nRead the [Pre-populated-recommenders documentation](https://lateral.io/docs/text-matching/pre-populated-recommenders#top) for more.\n\n## Contributing\n\n1. Fork it ( https://github.com/lateral/recommender-gem/fork )\n2. Create `spec/env_vars.rb` file containing  `ENV['API_KEY'] = 'YOUR_KEY'`\n3. Create your feature branch (`git checkout -b my-new-feature`)\n4. Commit your changes (`git commit -am 'Add some feature'`)\n5. Push to the branch (`git push origin my-new-feature`)\n6. Create a new Pull Request\n\n### Testing\n\nTo test the gem, run `bundle exec rspec`. Note: your API key must be un-used.\n", 
  "id": 29690121
}