{
  "id": 25817842, 
  "read_at": 1462510589, 
  "README.rst": "If you use this project please give credit by citing:\n\n    Immanuel Bayer (2015): fastFM: A Library for Factorization Machines http://arxiv.org/abs/1505.00641\n\n\n\nfastFM: A Library for Factorization Machines\n============================================\n\n.. image:: https://travis-ci.org/ibayer/fastFM.svg?branch=master\n   :target: https://travis-ci.org/ibayer/fastFM\n   \n   \n.. image:: https://img.shields.io/badge/platform-OSX|Linux-lightgrey.svg\n  :target: https://travis-ci.org/ibayer/fastFM\n  \n.. image:: https://img.shields.io/pypi/l/Django.svg   \n   :target: https://travis-ci.org/ibayer/fastFM\n\nThis repository allows you to use Factorization Machines in **Python** (2.7 & 3.x) with the well known **scikit-learn API**.\nAll performence critical code as been written in C and wrapped with Cython. fastFM provides\nstochastic gradient descent (SGD) and coordinate descent (CD) optimization routines as well as Markov Chain Monte Carlo (MCMC) for Bayesian inference.\nThe solvers can be used for regression, classification and ranking problems. Detailed usage instructions can be found in the `online documentation  <http://ibayer.github.io/fastFM>`_ and on `arXiv <http://arxiv.org/abs/1505.00641>`_.\n\nUsage\n-----\n.. code-block:: python\n\n    from fastFM import als\n    fm = als.FMRegression(n_iter=1000, init_stdev=0.1, rank=2, l2_reg_w=0.1, l2_reg_V=0.5)\n    fm.fit(X_train, y_train)\n    y_pred = fm.predict(X_test)\n\n\nTutorials and other information are available `here <http://arxiv.org/abs/1505.00641>`_.\nThe C code is available as `subrepository <https://github.com/ibayer/fastFM-core>`_ and provides\na stand alone command line interface. If you have still **questions** after reading the documentation please open a issue at github.\n\n+----------------+------------------+-----------------------------+\n| Task           | Solver           | Loss                        |\n+================+==================+=============================+\n| Regression     | als, mcmc, sgd   | Square Loss                 |\n+----------------+------------------+-----------------------------+\n| Classification | als, mcmc, sgd   | Probit(Map), Probit, Sigmoid|\n+----------------+------------------+-----------------------------+\n| Ranking        | sgd              | BPR                         |\n+----------------+------------------+-----------------------------+\n*Supported solvers and tasks*\n\nInstallation\n------------\n\n**binary install (64bit only)**\n\n``pip install fastFM``\n\n**source install**\n\n*Please make sure, that Python and OS bit version agree, e.g. 32bit Python on 64bit OS won't work.*\n\n.. code-block:: bash\n\n    # Install cblas and python-dev header (Linux only).\n    # - cblas can be installed with libatlas-base-dev or libopenblas-dev (Ubuntu)\n    $ sudo apt-get install python-dev libopenblas-dev\n\n    # Clone the repro including submodules (or clone + `git submodule update --init --recursive`)\n    $ git clone --recursive https://github.com/ibayer/fastFM.git\n\n    # Enter the root directory\n    $ cd fastFM\n\n    # Install Python dependencies (Cython>=0.22, numpy, pandas, scipy, scikit-learn)\n    $ pip install -r ./requirements.txt\n\n    # Compile the C extension.\n    $ make\n\n    # Install fastFM\n    $ pip install .\n\n\nTests\n-----\n\nThe Python tests (``pip install nose``) can be run with:\n``nosetests fastFM/fastFM/tests``\n\nPlease refere to the fastFM-core README for instruction on how to run the C tests at ``fastFM/fastFM-core/src/tests``.\n\nContribution\n------------\n\n* Star this repository: keeps contributors motivated\n* Open a issue: report bugs or suggest improvements\n* Fix errors in the documentation: small changes matter\n* Contribute code\n\n**Contributions are very wellcome!** Since this project lives on github we reommend\nto open a pull request (PR) for code contributions as early as possible. This is the\nfastest way to get feedback and allows `Travis CI <https://travis-ci.org/ibayer/fastFM>`_ to run checks on your changes.\n\nMost information you need to setup your **development environment** can be learned by adapting the great instructions on https://github.com/scikit-learn/scikit-learn/blob/master/CONTRIBUTING.md . Please ensure that your contribution conforms to the `PEP8 <http://www.python.org/dev/peps/pep-0008/>`_ Coding Style and includes unit tests where appropriate. More valuable guidelines that apply to fastFM can be found at http://scikit-learn.org/stable/developers/contributing.html#coding-guidelines .\n\n\n**Contributors**\n\n* altimin\n* bdaskalov\n* chezou\n* macks22\n* takuti\n* ibayer\n\nLicense: BSD\n------------\n", 
  "description": " fastFM: A Library for Factorization Machines"
}