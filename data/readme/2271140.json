{
  "id": 2271140, 
  "read_at": 1462552193, 
  "README.rst": "Purpose\n*******\n\n*tapir* contains programs to estimate and plot phylogenetic informativeness for\nlarge datasets.\n\n\nCiting tapir\n************\n\nWhen using tapir, please cite:\n\n- Faircloth BC, Chang J, Alfaro ME: *TAPIR* enables high throughput analysis of\n  phylogenetic informativeness. `arXiv:1202.1215 <http://arxiv.org/abs/1202.1215>`_\n\n- Townsend JP: Profiling phylogenetic informativeness. Systematic Biol. 2007,\n  56:222-231.\n\n- Pond SLK, Frost SDW, Muse SV: HyPhy: hypothesis testing using phylogenies.\n  Bioinformatics 2005, 21:676-679.\n\nDependencies\n************\n\n- hyphy2 (please download [`osx <http://s3.faircloth-lab.org/packages/hyphy2.osx.gz>`_ or `linux <http://s3.faircloth-lab.org/packages/hyphy2.linux.gz>`_] or build a **single-threaded** hyphy2)\n- Python 2.7\n- numpy\n- scipy\n- dendropy\n\nInstallation\n*************\n\nFor **ALL** platforms, you must download a hyphy binary for your platform (osx\nor linux) and place that within your $PATH.  To install the other dependencies\n(numpy, scipy), you may need to install a Fortran compiler on linux/osx, which\nis a dependency of numpy and scipy.\n\nLinux\n------\n\nInstall hyphy::\n\n    wget http://s3.faircloth-lab.org/packages/hyphy2.linux.gz\n    gunzip hyphy2.*.gz\n    chmod 0700 hyphy2.*\n    mv hyphy2.* ~/Bin/hyphy2\n\nOn linux (ubuntu/debian), use::\n\n    apt-get install gfortran libatlas-base-dev liblapack-dev\n\nInstall tapir and dependencies, which include numpy and scipy (the\nreason we installed the dependencies above)::\n\n    pip install tapir\n\nTo plot results, you will also need to::\n\n    apt-get install r-base r-base-dev\n    pip install rpy2\n\nOSX\n---\n\nInstall hyphy::\n\n    wget http://s3.faircloth-lab.org/packages/hyphy2.osx.gz\n    gunzip hyphy2.*.gz\n    chmod 0700 hyphy2.*\n    mv hyphy2.* ~/Bin/hyphy2\n\nIt is easiest just to install the `scipy superpack\n<http://stronginference.com/scipy-superpack/>`_.  This will install the\ndependencies that tapir needs.  After installing the superpack, using\npip, install tapir::\n\n    pip install tapir\n\nAlternatively, you can simply try to install tapir using::\n\n    pip install tapir\n\nTo plot results, you need to `install R\n<http://cran.r-project.org/bin/macosx/>`_ and then install rpy2::\n\n    pip install rpy2\n\n\nOther OSs\n----------\n\nDownload the source for hyphy from `<http://www.datam0nk3y.org/hyphy/doku.php?id=start>`_\nand compile a **single-threaded** version.\n\nInstall `numpy <http://numpy.scipy.org>`_, `scipy <http://scipy.org>`_,\nand `dendropy <http://packages.python.org/DendroPy/>`_ for your\nplatform.  Alternatively, you can try::\n\n    pip install tapir\n\nWhich may install the necessary dependencies.  Alternatively, install the \ndependenceis manually, and then::\n\n    wget http://pypi.python.org/packages/source/t/tapir/tapir-1.0.tar.gz\n    tar -xzvf tapir-1.0.tar.gz\n    cd tapir*\n    python setup.py build\n    python setup.py test\n    python setup.py install\n\n\nTesting\n*******\n\nIf you didn't run the tests using `python setup.py test` above, you can also::\n\n    import tapir\n    tapir.test()\n\nUse\n***\nTo run::\n\n    python tapir_compute.py Input_Folder_of_Nexus_Files/ Input.tree \\\n        --output Output_Directory \\\n        --intervals=32-42,88-98,95-105,164-174 \\\n        --times=37,93,100,170 \\\n        --multiprocessing\n\n`--multiprocessing` is optional, without it, each locus will be run\nconsecutively.\n\nIf you have already run the above and saved results to your output\nfolder (see below), you can use the pre-existing site-rate records\nrather than estimating those again with::\n\n     python tapir_compute.py Input_Folder_of_Site_Rate_JSON_Files/ Input.tree \\\n        --output Output_Directory \\\n        --intervals=32-42,88-98,95-105,164-174 \\\n        --times=37,93,100,170 \\\n        --multiprocessing \\\n        --site-rates\n\nResults\n*******\n\ntapir writes results to a `sqlite <http://www.sqlite.org/>`_ database in the\noutput directory of your choosing.  This directory also holds site rate\nfiles in `JSON <http://www.json.org/>`_ format for each locus passed\nthrough `tapir_compute.py`.\n\nYou can access the results in the database as follows.  For more examples,\nincluding plotting, see the \n`documentation <http://faircloth-lab.github.com/tapir/>`_\n\n- crank up sqlite::\n\n    sqlite3  Output_Directory/phylogenetic-informativeness.sqlite\n\n- get integral data for all epochs::\n\n    select locus, interval, pi from loci, interval where loci.id = interval.id\n\n- get integral data for a specific epoch::\n\n    select locus, interval, pi from loci, interval \n    where interval = '95-105' and loci.id = interval.id;\n\n- get the count of loci having max(PI) at different epochs::\n\n    create temporary table max as select id, max(pi) as max from interval group by id;\n\n    create temporary table t as select interval.id, interval, max from interval, max \n    where interval.pi = max.max;\n\n    select interval, count(*) from t group by interval;\n\nPlotting Results\n****************\n\ntapir contains plotting scripts to help you plot data within a results database\nand compare data between different databases.  tapir uses RPY and R to\ndo this.  You can also plot data directly in R.  Until we finish the\ndocumentation, please see the \n`wiki <https://github.com/faircloth-lab/tapir/wiki/getting-data-from-the-database(s)>`_ \nfor examples.\n\nAcknowledgements\n****************\n\nBCF thanks SP Hubbell, PA Gowaty, RT Brumfield, TC Glenn, NG Crawford,\nJE McCormack, and M Reasel. JHLC and MEA thank J Eastman and J Brown for\nthoughtful comments about PI. We thank Francesc Lopez-Giraldez and\nJeffrey Townsend for providing us with a copy of their web-application\nsource code and helpful discussion.\n", 
  "description": "Tally Approximations of Phylogenetic Informativeness Rapidly (TAPIR)"
}