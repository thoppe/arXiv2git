{
  "read_at": 1462550130, 
  "description": "A python library to deal with scientific papers.", 
  "README.md": "libBMC\n======\n\n## Presentation\n\nA generic Python library to manage bibliography and play with scientific\npapers.\n\n\n_Note_: This library is written for Python 3 and may not work with Python 2.\nThis is not a major priority for me, but if anyone needed to make it work with\nPython 2 and want to make a PR, I will happily merge it :)\n\n\n## Dependencies\n\nPython dependencies are listed in the `requirements.txt` file at the root of\nthis repo, and can be installed with `pip install -r requirements.txt`.\n\n\nExternal dependencies are [OpenDeTeX](https://code.google.com/p/opendetex/)\n(an improved version of DeTeX) and the `pdftotext` and `djvutxt` programs.\n\n\nOpenDeTeX is available as a Git submodule in the `libbmc/external` folder. If\nyou do not have it installed system-wide, you can use the following steps to\nbuild it in this repo and the library will use it:\n\n* `git submodule init; git submodule update` to initialize the Git submodules.\n* `cd libbmc/external/opendetex; make` to build OpenDeTeX (see `INSTALL` file\n  in the same folder for more info, you will need `make`, `gcc` and `flex` to\n  build it).\n\nOpenDeTeX is used to get references from a `.bbl` file (or directly from arXiv\nas it uses the same pipeline).\n\n\n`pdftotext` and `djvutxt` should be available in the packages of your\ndistribution and should be installed systemwide. Both are used to extract\nidentifiers from papers PDF files.\n\n\nIf you plan on using the `libbmc.citations.pdf` functions, you should also\ninstall the matching software (`CERMINE`, `Grobid` or `pdf-extract`). See the\ndocstrings of those functions for more infos on this particular point.\n\n\n## Installation\n\nEither use `pip install libbmc` or download the ZIP archive from this repo and\ninstall it manually using `python setup.py install`.\n\n\n## Running unittests\n\nJust run\n```\nnosetests --with-doctest\n```\n\nat the root of the Git repository to run the unittests.\n\n\n## Building the doc\n\nJust run\n\n```\ncd docs\nmake html\n```\n\nDocumentation will be generated in the `docs/build/html` folder.\n\n\n## Note on `__valid_identifiers__`\n\n`libbmc` exposes a `__valid_identifiers__` list, containing the valid\nidentifier types. These are those exposing the same function as `doi` or\n`isbn` modules, in particular the extraction from a string and BibTeX\nfetching functions.\n\nIf you write additional modules for others repositories, you can include them\nin the `__valid_identifiers__` list, as long as they provide these functions.\n\nThis list is especially useful for the `libbmc.papers.identifiers` module,\nwhich is using it to loop through all the available identifier types, to fetch\nfor them in the paper and retrieve BibTeX from it.\n\nYou can also write a specific citation extraction module for this repository\nin `libbmc/citations/repositories/{REPOSITORY}.py`.\n\n\n## License\n\nThis code is licensed under an MIT license.\n\n\n## Acknowledgements\n\nThanks a lot to the following authors and programs for helping in building\nthis lib:\n\n* Dominika Tkaczyk, Pawel Szostek, Mateusz Fedoryszak, Piotr Jan Dendek and\nLukasz Bolikowski.\nCERMINE: automatic extraction of structured metadata from scientific\nliterature.\nIn International Journal on Document Analysis and Recognition (IJDAR), 2015,\nvol. 18, no. 4, pp. 317-335, doi: 10.1007/s10032-015-0249-8.\nhttps://github.com/CeON/CERMINE\n\n* https://github.com/CrossRef/pdfextract\n\n* https://github.com/kermitt2/grobid\n\n* https://github.com/sciunto-org/python-bibtexparser\n\n* http://djvu.sourceforge.net/doc/man/djvutxt.html\n\n* http://www.foolabs.com/xpdf/home.html\n\n* https://code.google.com/p/opendetex/\n\n* https://github.com/nathangrigg/arxiv2bib/\n\n* https://github.com/xlcnd/isbnlib\n\n* https://github.com/Anorov/PySocks\n\n* http://docs.python-requests.org/en/latest/#\n", 
  "id": 48655984
}