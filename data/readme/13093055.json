{
  "read_at": 1462549913, 
  "description": "cuda visualisation & gamification experiment", 
  "README.md": "cuMagic\n=======\n\ncuda visualisation and gamification experiment\n\nTo compile this project download CUDA SDK and put the folder into ...\\C\\src\\ directory\n\n\nThis demo was inspired by Escapist article I hate magic by Robert Rath (http://www.escapistmagazine.com/articles/view/columns/criticalintel/10302-I-Hate-Magic)  and continuous game of life (http://arxiv.org/abs/1111.1567) by Stephan Rafler\nThis is attempt to show how GPGPU could be used to model magic as different physics.\nThe demo run at 70 fps at laptop with  GF GTX 670M. With some tradeoffs it can be made run much faster and live enough GPGPU resource for some interesting AI.\n\nThe concepts of the game: Player and AI controls elements and laws of magic.\nElements:\nBasic elements\nThe main elements are red and blue. The elements reside on the grey background. Red concentrate on light spots and blue on dark spots. Player control basic element by changing background - moving or jumping gery spiral disk (form) Disk can be dragged by mouse or jumpe-moved by mouse click. After sharp move or jump disk disappear and take time to restore (for player only, not AI)\nAttack elements.\nAttack elements are yellow for player and green for AI. They propagate in viral manner. Player create them by choosing yellow (green for AI) circle and clicking on the game field.\nShield elements\nMagenta for player and Jade for AI\nThose are kind of vortices which swirl around basic elements and can convert attack elements into itself. They can be harmful for their owner though if used without care. Player create them by choosing magenta (green for AI) ring and clicking on the game field.\nSuppressive defence elements:\nOrange field suppress green, violet suppress yellow, they also suppress each over. \nLaws:\nLow give player and AI some control over conversion of elements.\nTo invoke low click on the two connected hexagramm. in the column.\nLeft hexagram and right colors are interacting element, connecting line color is the result of interaction. If right hex is black law create resulting element on the boundary of the first element - first element emitting middle element.\nIf connecting element is black law negate previous low with right and left elements.\n\nLaws and attack/defense elements available to player and ai are stored in files stackHum.txt and stackAI.txt\nline BLACK BLACK YELLOW correspond to yellow circle in the column - its not a low but attack element invoked by clicking on it and place in the field. Same for other \n\" BLACK BLACK _color_ \" lines\nAvailable lines for player\n\n_color_  mean any color:\n\n _color_  BLACK _color_ \n\nRED ORANGE BLACK\n \nYELLOW  RED BLACK\n\nYELLOW ORANGE BLACK\n \nORANGE RED BLACK\n \nRED MAGNETA BLACK\n \nBLACK BLACK YELLOW\n\nBLACK BLACK MAGNETA\n\n\nfor AI:\n\n _color_  BLACK _color_ \n\nGREEN VIOLET BLACK\n \nBLUE VIOLET BLACK\n\nBLUE JADE BLACK\n\nVIOLET BLUE BLACK\n\nGREEN BLUE BLACK\n\nBLACK BLACK JADE\n\nBLACK BLACK GREEN\n \ncuph_ai_off.exe - AI turned off, switch between green, yellow, Magenta, Jade is by mouse wheel scroll.\nPress 'p' to pause\n", 
  "id": 13093055
}