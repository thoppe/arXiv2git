{
  "README": "NuCraft is a Python project used by the IceCube neutrino observatory. https://icecube.wisc.edu/\n\nIts main use is to calculate neutrino oscillation probabilities, by directly solving Schrodinger's equation numerically.\nIt was one of the main focal points of the initial IceCube proposal.\n\nWe heavily modify this code, in order to be able to extract probabilities for neutrinos from a Core Collapse supernova in our Galaxy.\nThe data is used in my Undergraduate Thesis at the Aristotle University of Thessaloniki.\n\n\n================================================================================\n   nuCraft: Calculation of oscillation probabilities of atmospheric neutrinos   \n================================================================================\n\nWelcome to nuCraft!\n\nNuCraft is a Python project for the calculation of neutrino oscillation\nprobabilities, with an emphasis on atmospheric neutrinos. For more detailed\ninformation and the most recent version, check out the official homepage:\n   \n   http://nucraft.hepforge.org\n   \nAs this is purely Python, installation is not necessary; you can just import\nthe project and get started.\nDocumentation can be found in the docstrings, with some additional explanations\nin inline comments.\nA paper describing details of the implementation has been submitted to Computer\nPhysics Communications for publication, with a preprint available at\n   \n   http://arxiv.org/abs/1409.1387.\n   \nIf any questions remain, please contact\n   \n   mwallraff#physik.rwth-aachen.de\n\n\n\n External dependencies:\n------------------------\n\nNuCraft heavily relies on NumPy and SciPy. It has been tested with several\nversions of NumPy, beginning at 1.5.1, and SciPy, beginning at 0.8.0. It is\npossible that it will work well with earlier versions of both packages.\nNuCraft is compatible with both Python 2 (2.6+) and Python 3 (tested with 3.3).\nIt will not work with versions earlier than 2.6 without modifications, but it\nmight work with earlier versions of Python 3.\n\nThe example script example-standAlone.py also relies on matplotlib for plotting,\nand it uses TeX inside matplotlib so that dvipng needs to be installed (optional\nrequirement of matplotlib).\n\n\n\n Program Structure:\n--------------------\n\nThe structure of nuCraft is fairly easy. The project consists of two classes,\nNuCraft and EarthModel. For usage, an instance of NuCraft has to be created with\na set of oscillation parameters, which optionally accepts an instance of\nEarthModel at creation for custom Earth density profiles (see next section), a\ncustom value of the depth of the detector below the ground, and a custom value\nfor the production height of the neutrino in the atmosphere that is only used if\nadvanced handling of the atmosphere is disabled later on.\nFor actual calculations, nuCraft has the two methods CalcWeights and\nCalcWeightsLegacy. For the detailed difference between them, have a look at the\npaper; in the mean time, do not use the legacy version, it is almost always\nworse.\nCalcWeights is the only method that should be relevant for normal users. It\naccepts the actual particle quantities relevant for oscillations and returns the\noscillation probabilities. For supported input formats and parameters, please\nhave a look at the docstrings, or see the example script.\n\n\n\n Using non-standard Earth models:\n----------------------------------\n\nThe default Earth model used by nuCraft is the Preliminary Reference Earth Model\nPREM (http://dx.doi.org/10.1016/0031-9201(81)90046-7), which is usually loaded\nout of the dictionary 'models' in the class EarthModel. If you want to use other\ndensity models, you can either add them to that dictionary, or you can load them\nform a text file. The example file EarthModelPrem.txt is shipped with nuCraft as\na template.\nData from files is read in through the ast.literal_eval method. It works\nsimilar to the built-in eval function, but is designed to be inherently safe.\nNonetheless, a check has been kept in place to raise an exception if there are\nany underscores in the input file, as all known non-trivial exploits of the\nstandard eval function require double underscores. If you encounter this\nexception, chances are good that there is merily an underscore in the comments;\nremove it, and everything should work.\n\nIf you want to use nuCraft for reactor neutrino experiments or other not\nspherically symmetric mass density distributions, you have to do some simple\nmodifications to the code:\n\nFirst, you have create a suitable Earth model for your needs. In case of reactor\nneutrinos, you might want to use a matter profile that does not depend on the\ndistance to the center of Earth, but on the travelled distance. In that case,\nsubstitute profX with an array containing distances, profY with corresponding\nmatter densities, and set EarthModel.y to (0.4957, 0.4957, 0.4957) (assuming\nthat the neutrino travelled only through mantle and crust).\nNow, EarthModel.profInt is not a function of radius anymore, so go to lines 582\nto 586 and substitute profInt(r) by profInt(l).\nSimilarly, you can modify EarthModel such that EarthModel.profInt depends on\nmultiple parameters, e.g., radius and zenith angle, and modify the same lines to\ncall it correctly.\nFor reactor neutrinos, don't forget to turn the atmospheric handling to 0 (fixed\naltitude) and set NuCraft.detectorDepth and NuCraft.atmHeight to 0.\nAlternatively, you can modify NuCraft.InteractionAlt to model the neutrino\nproduction region inside the reactor to smear out very-short-baseline effects.\n\nFeel free to write a mail if you need assistance.\n\n\n\n List of files:\n----------------\n\n- README\n  this file\n- RELEASE_NOTES\n  comprehensive changelog\n- NuCraft.py\n  actual nuCraft source code, containing the classes NuCraft and EarthModel\n- EarthModelPrem.txt\n  example/template for files to be read in by the EarthModel class\n- example-standAlone.py\n  example script demonstrating the usage of nuCraft by reproducing a plot from\n  the Akhmedov/Rassaque/Smirnov paper arxiv:1205.7071; can also be used as test\n- __init__.py\n  package initiation file, required to facilitate proper importing\n\n\n", 
  "read_at": 1462548469, 
  "description": "", 
  "id": 56238236
}