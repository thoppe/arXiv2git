{
  "read_at": 1462552316, 
  "description": "DPPnet: Image Question Answering using Convolutional Neural Network  with Dynamic Parameter Prediction", 
  "README.md": "## DPPnet: Image Question Answering using Convolutional Neural Network with Dynamic Parameter Prediction\n\nCreated by [Hyeonwoo Noh](http://cvlab.postech.ac.kr/~hyeonwoonoh/), [Paul Hongsuck Seo](https://sites.google.com/site/paulhseo/) and [Bohyung Han](http://cvlab.postech.ac.kr/~bhhan/) at [POSTECH cvlab](http://cvlab.postech.ac.kr/lab/)\n\nProject page: [http://cvlab.postech.ac.kr/research/dppnet/]\n\n### Introduction\n\nDPPnet is state-of-the-art Image Question Answering algorithm using dynamic parameter prediction to handle various types of questions.\n\nDetailed description of the system will be provided by our technical report [arXiv tech report](http://arxiv.org/abs/1511.05756)\n\n### Citation\n\nIf you're using this code in a publication, please cite our papers.\n\n    @article{noh2015image,\n      title={Image Question Answering using Convolutional Neural Network with Dynamic Parameter Prediction},\n      author={Noh, Hyeonwoo and Seo, Paul Hongsuck and Han, Bohyung},\n      journal={arXiv preprint arXiv:1511.05756},\n      year={2015}\n    }\n\n### Licence\n\nThis software is for research purpose only.\nCheck LICENSE file for details.\n\n### System Requirements\n\n  * This software is tested on Ubuntu 14.04 LTS (64bit).\n  * At least 12GB gpu memory is required (NVIDIA tital-x gpu is used for training).\n\n### Dependencies\n\n  * torch [https://github.com/torch/distro]\n  * loadcaffe [https://github.com/szagoruyko/loadcaffe]\n  * xxhash [install: luarocks install xxhash]\n\n### Setup\n\nRun \"setup.sh\" for setting up.\n\n### Testing\n\nScripts for testing is in \"006\\_test\\_DPPnet\". Use following commands for testing.\n  0. Run ./gen\\_simulinks.sh\n  0. Run th vqa\\_test.lua\n  0. Results will be saved in \"006\\_test\\_DPPnet/save\\_result\\_vqa\\_test/results/\"\n\n### Training\n\nFollowing steps are required for training.\n  0. Train DPPnet with fixed cnn feature (004\\_train\\_DPPnet\\_fixed\\_cnn)\n  0. Finetune CNN from the model trained in the previous step (005\\_train\\_DPPnet\\_finetune\\_cnn)\n\n### Directories\n  * 001\\_porting\\_VQA\\_data: porting VQA data for torch implementation\n  * 002\\_extract\\_image\\_features: extracting VGG16 features from MSCOCO\n  * 003\\_skipthoughts\\_porting: porting model parameters for [skipthoughts](https://github.com/ryankiros/skip-thoughts)\n  * 004\\_train\\_DPPnet\\_fixed\\_cnn: training DPPnet with extracted feature\n  * 005\\_train\\_DPPnet\\_finetune\\_cnn: fine-tuning cnn from model trained 004\n  * cache: We cache loaded vqa questions ans vocabularies to reduce the time for loading\n  * data: data used for training / testing\n  * model: trained model parameters, model definitions, layer implementations\n  * utils: utilities (loading training data, loading models ...)\n\n\n\n", 
  "id": 49819831
}