{
  "read_at": 1462556977, 
  "readme.org": "#+TITLE: bibslurp.el --- retrieve BibTeX entries from NASA ADS\n\n=bibslurp= provides an easy way to find BibTeX entries from the [[http://adswww.harvard.edu/][NASA\nADS]] server and to copy them into your local database.  All from within\nemacs!\n\nWe have tried to make bibslurp as simple and as unobtrusive as\npossible, with advanced features available when you need them.  We\nhope you like the interface!\n\n* Example usage:\n  1. add an entry to a bibtex buffer:\n     #+BEGIN_EXAMPLE\n     M-x bibslurp-query-ads RET ^Quataert 2008 RET\n     #+END_EXAMPLE\n\n     Type the corresponding number and hit =RET=:\n     #+BEGIN_EXAMPLE\n     1 RET\n     q\n     C-y\n     #+END_EXAMPLE\n\n     Alternatively, you can navigate to the abstract you want with the\n     =n= and =p= keys, or search in the buffer with =s= or =r=, and\n     then press\n     #+BEGIN_EXAMPLE\n     RET\n     q\n     C-y\n     #+END_EXAMPLE\n\n\n* Description:\n  Creating a BibTeX file is one of the more tedious aspects of writing\n  a paper.  The NASA ADS system (http://adswww.harvard.edu/) helps a\n  lot by making bibliography data available and easy to find, but\n  there's still the matter of copying and pasting it into your local\n  database.  Since I find that process annoying, I wrote =BibSlurp=, a\n  set of emacs functions to speed it along.\n\n  BibSlurp enables you to query nasa ads without leaving emacs.  As an\n  example, typing =M-x bibslurp-query-ads RET white rees RET= brings up\n  the following buffer: (the search string is sent directly to ADS, so\n  things like =^white rees= or =^white 1978= will also work as\n  expected.)\n\n  #+ATTR_HTML: alt=\"search-results\" title=\"search-results\" width=\"602\" height=\"856\"\n  [[file:images/search-results.png]]\n\n  Let's say I want to add the second paper to my =.bib= database.  All I have to\n  do is hit =2 RET= (or simply =RET= if point is on that entry).  After waiting\n  for the appropriate files to download, =BibSlurp= responds with the message\n  =saved bibtex entry to kill ring=.\n\n  #+ATTR_HTML: alt=\"saved-to-kill-ring\" title=\"saved-to-kill-ring\" width=\"432\" height=\"295\" class=\"pad bottom left\"\n  [[file:images/saved-to-kill-ring.png]]\n\n  From here, hitting =q= takes me back to my =.bib= file, where I can\n  yank the entry with =C-y=: (note that bibslurp automatically\n  generates a label for the entry)\n\n  #+ATTR_HTML: alt=\"yanked-entry\" title=\"yanked-entry\" width=\"602\" height=\"466\"\n  [[file:images/yanked-entry.png]]\n\n  If I'm not sure which paper I want, I can pull up the abstract by hitting =2\n  a= (or simply =a= if point is already on the wanted abstract).  From there,\n  =q= takes me back to the search results.\n\n  #+ATTR_HTML: alt=\"abstract-view\" title=\"abstract-view\" width=\"602\" height=\"466\"\n  [[file:images/abstract-view.png]]\n\n** Advanced search\n   You can turn to the ADS advanced search interface, akin to\n   http://adsabs.harvard.edu/abstract_service.html, either by pressing =C-c C-c=\n   after having issued =bibslurp-query-ads=, or directly with =M-x\n   bibslurp-query-ads-advanced-search RET=.  This pulls up a buffer\n   like this:\n   #+ATTR_HTML: alt=\"advanced-search\" title=\"advanced-search\" width=\"629\" height=\"686\"\n   [[file:images/advanced-search.png]]\n\n   Here you can fill the wanted search fields (authors, publication\n   date, objects, title, abstract) and specify combination logics, and\n   then send the query either with =C-c C-c= or by pressing the button\n   =Send Query=.  Use =TAB= to move through fields, and =q= outside an\n   input field to quit the search interface.\n\n** Other features\n   In the ADS search result buffer you can also visit some useful pages related\n   to each entry:\n   - on-line data at other data centers, with =d=\n   - on-line version of the selected article, with =e=\n   - on-line articles in PDF or Postscript, with =f=\n   - lists of objects for the selected abstract in the NED database, with =N=\n   - lists of objects for the selected abstract in the SIMBAD database, with =S=\n   - on-line pre-print version of the article in the arXiv database, with =x=\n   For each of these commands, =BibSlurp= will use by default the abstract point\n   is currenly on, but you can specify a different abstract by prefixing the\n   command with a number.  For example, =7 x= will fire up your browser to the\n   arXiv version of the seventh abstract in the list.\n\n* Installation:\n  Use package.el. You'll need to add MELPA to your archives:\n\n  #+BEGIN_SRC emacs-lisp\n  (require 'package)\n  (add-to-list 'package-archives\n               '(\"melpa\" . \"https://melpa.org/packages/\") t)\n  #+END_SRC\n\n  Alternatively, you can just save this file and do the standard\n  #+BEGIN_SRC emacs-lisp\n  (add-to-list 'load-path \"/path/to/bibslurp.el\")\n  (require 'bibslurp)\n  #+END_SRC\n\n  Note that =bibslurp= requires the [[https://github.com/magnars/s.el][s]] and [[https://github.com/magnars/dash.el][dash]] libraries.  If you\n  install bibslurp manually, you need to make sure you also have\n  these in place.\n\n  You might consider giving it a keybinding, e.g.\n  #+BEGIN_SRC emacs-lisp\n  (global-set-key (kbd \"C-x M-b\") 'bibslurp-query-ads)\n  #+END_SRC\n\n* License\n Copyright (C) 2013-2015 authors\n\n written by Mike McCourt and Mose Giordano\n\n license: [[https://gnu.org/licenses/gpl-3.0.txt][GPLv3]]\n\n\n\n* TODO:\n  1. Look into using an xml parser instead of regular expressions\n\n\n# Local Variables:\n# coding: utf-8-unix\n# End:\n", 
  "description": "retrieve BibTeX entries from NASA ADS", 
  "id": 11654416
}