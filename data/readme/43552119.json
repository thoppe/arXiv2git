{
  "read_at": 1462556549, 
  "description": "Julia package mirror.", 
  "README.md": "catalan\n=======\n\n**THIS PACKAGE IS DEPRECATED**: Please use [Combinatorics.jl](https://github.com/jiahao/Combinatorics.jl) instead.\n\nCatalan: a combinatorics library for Julia, focusing mostly (as of now) on enumerative combinatorics and permutations.\nAs overflows are expected even for low values, most of the functions always return `BigInt`, and are marked as such below.\n\nThis library provides the following functions:\n - `bell(n)`: returns the n-th Bell number; always returns a `BigInt`;\n - `catalan(n)`: returns the n-th Catalan number; always returns a `BigInt`;\n - `derangement(n)`/`subfactorial(n)`: returns the number of permutations of n with no fixed points; always returns a `BigInt`;\n - `doublefactorial(n)`: returns the double factorial n!!; always returns a `BigInt`;\n - `fibonacci(n)`: the n-th Fibonacci number; always returns a `BigInt`;\n - `hyperfactorial(n)`: the n-th hyperfactorial, i.e. prod([i^i for i = 2:n]; always returns a `BigInt`;\n - `integer_partitions(n)`: returns a `Vector{Int}` consisting of the partitions of the number `n`.\n - `jacobisymbol(a,b)`: returns the Jacobi symbol (a/b);\n - `lassalle(n)`: returns the nth Lassalle number A<sub>n</sub> defined in [arXiv:1009.4225](http://arxiv.org/abs/1009.4225) ([OEIS A180874](http://oeis.org/A180874)); always returns a `BigInt`;\n - `legendresymbol(a,p)`: returns the Legendre symbol (a/p);\n - `lucas(n)`: the n-th Lucas number; always returns a `BigInt`;\n - `multifactorial(n)`: returns the m-multifactorial n(!^m); always returns a `BigInt`;\n - `multinomial(k...)`: receives a tuple of `k_1, ..., k_n` and calculates the multinomial coefficient `(n k)`, where `n = sum(k)`; returns a `BigInt` only if given a `BigInt`;\n - `primorial(n)`: returns the product of all positive prime numbers <= n; always returns a `BigInt`;\n - `stirlings1(n, k)`: the signed `(n,k)`-th Stirling number of the first kind; returns a `BigInt` only if given a `BigInt`.\n\nYoung diagrams\n--------------\nLimited support for working with Young diagrams is provided.\n\n- `partitionsequence(a)`: computes partition sequence for an integer partition `a`\n- `x = a \\ b` creates the skew diagram for partitions (tuples) `a`, `b`\n- `isrimhook(x)`: checks if skew diagram `x` is a rim hook\n- `leglength(x)`: computes leg length of rim hook `x`\n- `character(a, b)`: computes character the partition `b` in the `a`th irrep of Sn\n", 
  "id": 43552119
}