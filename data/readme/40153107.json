{
  "read_at": 1462544995, 
  "description": "Python codes for reproducing the results on the MNIST dataset in the paper \"Distributional Smoothing with Virtual Adversarial Training\"", 
  "README.md": "# Virtual Adversarial training (VAT) implemented with Theano\nPython codes for reproducing the results in the paper \"Distributional Smoothing with Virtual Adversarial Training\" http://arxiv.org/abs/1507.00677v7\n\n## Required libraries\npython 2.7, numpy 1.9, theano 0.7.0, docopt 0.6.2\n\n\n## Examples for synthetic dataset\n### Model's contours on synthetic datasets with different regularization methods (Fig.3,4 in our paper)\n```\n./vis_model_contours.sh\n```\nThe coutour images will be saved in ` ./figure `.\n\n## Examples for MNIST dataset\n\n#### Download mnist.pkl\n```\ncd dataset\n./download_mnist.sh\n```\n\n###VAT in supervised learning for MNIST dataset \n```\npython train_mnist_sup.py --cost_type=VAT_finite_diff --epsilon=2.1 --layer_sizes=784-1200-600-300-150-10 --save_filename=<filename>\n```\n###VAT in semi-supervised learning for MNIST dataset (with 100 labeled samples)\n```\npython train_mnist_semisup.py --cost_type=VAT_finite_diff --epsilon=0.3 --layer_sizes=784-1200-1200-10 --save_filename=<filename>\n```\nAfter training, the trained classifer will be saved with `<filename> ` in ` ./trained_model `.\n\nYou can obtain the test error of the trained classifier saved with `<filename> ` by the following command:\n```\npython test_mnist.py --load_filename=<filename>\n```\n.\n\nIf you find bug or problem, please report it! \n\nI also implemented virtual adversarial training with Chainer(http://chainer.org/).\nThe codes are also available on github https://github.com/takerum/vat_chainer/.\n\n", 
  "id": 40153107
}