{
  "read_at": 1462547633, 
  "description": "", 
  "README.md": "# README #\n\n## Installing Autotune ##\n\n`Autotune` and its dependent libraries can be downloaded and installed by\ncalling `make install` from within the `autotune` directory. \n\nThis procedure will download and install `Blossom V` a software library\nwritten by Vladimir Kolmogorov and required by `Autotune`. Please take careful\nnote of the license of this software as outlined in `blossomv/LICENSE.TXT`\nafter installation. Research using `Autotune` and therefore `Blossom V` must\ncite `Blossom V` in any publications, and commercial use is forbidden without\nconsent. Please email `vnk@ist.ac.at` with issues regarding licensing of\n`Blossom V`.\n\n### Building Autotune ###\n\nTo build (make) `Autotune`, `Blossom V`, and the example files:\n\n    cd ./autotune;\n    make install;\n\nNow you can run any of the examples from the directory:\n\n    autotune/ex/bin\n\n### Complete Installation Instructions ###\n\n    git clone git@github.com:adamcw/autotune.git;\n    cd ./autotune;\n    make install;\n\n__NOTE:__ This process may fail when trying to install the Python dependencies.\nSee 'Known Issues' below for more information should this occur, and/or follow\non screen instructions.\n\n## Running the Example ##\n\n    cd ./process;\n    ./run.py --input example_runs.json;\n\n__NOTE:__ For instructions on the use of `run.py` and other pieces of the\nprocessing pipeline, please read: ./process/README.md\n\n## Potential Issues ##\n\n### Incorrect Compiler ###\n\nBy default the script will try and use `g++` if the environment variable CXX is\nnot set. If there are build issues, you can try and build using a specific\nversion of `gcc` by modifying your environment to export `$CXX`. If using bash,\nedit your `.bashrc` or `.bash_profile` to include:\n\n    export CXX=g++;\n\n__NOTE:__ On OSX the default value for CXX may be `clang` (`c++`) rather than\n`gcc` (`g++`). As the script will look at CXX before any other value, be sure\nto use this line to ensure `gcc` is being used.\n\n### No Python / Incorrect Version of Python ###\n\nThe processing pipeline (process directory) requires Python 2.7. If this is not\navailable, the installation of the processing pipeline will fail.\n\n### Python Package Installer (pip) Not Available ###\n\nIf you have Python but the python package installer, `pip`, is not installed.\nThen you will need to install `pip`, or use a virtualenv (virtual environment).\nSee below for this case.\n\n### Insufficient Privliages to Install/Use pip ###\n\nIf this is required `make install` will suggest using `make virtualenv`. Run\nthis command. If it fails due to `virtualenv` not being installed on your\nsystem, then it will suggest using `make virtualenv_install`. Once a virtualenv\n(virtual environment) is created via this process, onscreen instructions will\nbe provided as to its use. \n\n__Detailed instructions on virtual environments, their creation, and their usage\nare available in ./process/README.md with relevant sections listed below__\n\n- Installation \n- Creating a Virtual Environment\n- Using a Virtual Environment\n\n## What's in Autotune? ##\n\n`Autotune` is comprised of three modules. \n\n- The `Autotune` libraries known as `libautotune`. This contains the following libraries:\n    - `match` (A wrapper for the Blossom V matching library)\n    - `depolar` (Depolarizing Quantum Computer)\n    - `qc` (Quantum Computer)\n    - `bfs` (Breadth First Search)\n    - `bheap` (Binary Heap)\n    - `cdllist` (Circular Double-Linked List)\n    - `dllist` (Double-Linked List)\n    - `hash_table` (A Hash Table)\n    - `llist` (Linked List)\n    - `memory` (Memory functions)\n    - `my_time` (Timing functions)\n    - `polyestimate` (A library for estimating logical error rates given a\n        database of pre-simulated results)\n    - `random` (A Mersenne Prime Twister random number generator library)\n- The `tools` that make use of `Autotune`. Exist as advanced examples that\n  provide a useful function beyond demonstrating what `Autotune` can do.\n    - `polyestimate` (A tool for estimating logical error rates given a\n        database of pre-simulated results)\n- Examples of the use of the `Autotune` library This contains the following examples:\n    - `ex1` (The use of `Autotune` to implement the Surface Code on a\n        solid-state quantum computer)\n    - `ex2` (The use of `Autotune` to implement the Topological Cluster State\n      with qubit loss)\n- Processing scripts for generating graphs based on the output of `Autotune`\n\n## Building Autotune ##\n\n- You can install/compile all of Autotune using:\n\n    make install;\n\nYou can compile `libautotune` on its own:\n\n    make libautotune;\n\nYou can compile `blossomv` on its own:\n\n    make blossomv;\n\nYou can compile the examples on their own (though require `libautotune` and\n  `blossomv` to be compiled first)\n\n    make ex;\n\nYou can compile just the processing pipeline:\n\n    make process;\n\nYou can compile `libautotune` and the examples `ex` at the same time (helpful if\n  modifying `libautotune` and examples simultaneously through development):\n\n    make autotune;\n\nYou can compile all targets at once:\n\n    make all;\n\n## Processing Autotune ##\n\n    For more information on processing the output of `Autotune` into a\n    summarised format or graph please read the associated `README.md`.\n\n    See: process/README.md\n\n## Polyestimate Tool ##\n\n    See: tools/polyestimate/README.md\n\n    Austin G. Fowler. \n    \"Polyestimate: instantaneous open source surface code analysis\"\n    Awaiting Publication (2013)\n    Note: arXiv:1307.0689, http://topqec.com.au/autotune.html\n\n## Topological Cluster State ##\n\n    Adam C. Whiteside, Austin G. Fowler \n    \"Practical Topological Cluster State Quantum Computing Requires Loss Below 1%\"\n    Awaiting Publication (2014)\n    Note: arXiv:1409.4880, http://topqec.com.au/autotune.html\n\n## More Information ##\n\n    See: MANUAL\n\n## Contact ##\n\n    Austin Fowler (afowler@topqec.com.au)\n    Adam Whiteside (awhiteside@topqec.com.au)\n\n## Website ##\n\n    Topological Quantum Error Correction\n    http://www.topqec.com.au\n\n## License ##\n\nCopyright 2013 Austin G. Fowler, Adam C. Whiteside, Angus L. McInnes, Alimohammad Rabbani\n\nThis software cannot be used for commercial purposes, or distributed without\npermission from the author. This software is made available for research use\nonly. Please contact us for alternate licensing arrangements. \n\nYou can cite `Autotune` using the following citation:\n\n    A. Fowler, A. Whiteside, A. McInnes, and A. Rabbani. \n    \"Topological code Autotune.\" Phys. Rev. X 2, 041003 (2012) \n    Note: arXiv:1202.6111, http://topqec.com.au/autotune.html\n\nYou can cite the `Polyestimate` tool using the following citation:\n\n    Austin G. Fowler. \"Polyestimate: instantaneous open source surface code analysis\"\n    Awaiting Publication (2013)\n    Note: arXiv:1307.0689, http://topqec.com.au/autotune.html\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n", 
  "id": 9902752
}