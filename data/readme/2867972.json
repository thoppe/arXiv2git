{
  "read_at": 1462543303, 
  "description": "A heuristic algorithm for the Pure Parsimony Xor Haplotyping problem (PPXH) based on Graph Realization", 
  "README.md": "\n  PPXH-GR\n===========\n\nA heuristic algorithm for the Pure Parsimony Xor Haplotyping problem\n(PPXH) based on Graph Realization.\n\nby [Yuri Pirola](http://bimib.disco.unimib.it/index.php/Pirola_Yuri)\n\n\n------------------------------------------------------------------------\n\n\n\n## Introduction ##\n\nThis program implements a heuristic for the _Pure Parsimony Xor\nHaplotyping_ problem based on a fast algorithm for the _Graph\nRealization_ problem.\n\nThe heuristic is described in the following papers:\n\n* Paola Bonizzoni, Gianluca Della Vedova, Riccardo Dondi, Yuri Pirola,\n  and Romeo Rizzi.\n  **Pure Parsimony Xor Haplotyping**.\n  _IEEE/ACM Transactions on Computational Biology and Bioinformatics_.\n  Vol. 7(4), pp. 598-610 (Oct-Dec, 2010).\n  [link](http://dx.doi.org/10.1109/TCBB.2010.52)\n  [arXiv version](http://arxiv.org/abs/1001.1210)\n* Paola Bonizzoni, Gianluca Della Vedova, Riccardo Dondi, Yuri Pirola,\n  and Romeo Rizzi.\n  **Pure Parsimony Xor Haplotyping**.\n  _Proc. of 5th Int. Symp. Bioinformatics Research and Applications\n  (ISBRA)_.\n  Springer. Vol. 5542, pp. 186-197 (May, 2009).\n  [link](http://dx.doi.org/10.1007/978-3-642-01551-9_19)\n\n\n\n## Download ##\n\nPPXH-GR is currently distributed only on source form.\nPPXH-GR source code is available at the `yp/PPXH-GR` Git repository\nhosted by GitHub.\nThe repository can be explored using the GitHub web interface at\n<https://github.com/yp/PPXH-GR>.\n\nThe latest stable version of PPXH-GR can be downloaded in either\n[.tar.gz](https://github.com/yp/PPXH-GR/tarball/master) or in\n[.zip](https://github.com/yp/PPXH-GR/zipball/master) format.\nPrevious stable releases can be downloaded from\n<https://github.com/yp/PPXH-GR/archives/master>.\n\nIt is also possible to clone the entire repository using the following\ncommand:\n\n    $ git clone git://github.com/yp/PPXH-GR.git\n\nOr, if you have a GitHub account, you can fork the project from the\n[repository web page](https://github.com/yp/PPXH-GR).\n\n\n\n## Dependencies ###\n\nCompilation dependencies:\n\n- [GNU Make](http://www.gnu.org/s/make/)\n- [GNU Scientific Library (GSL)](http://www.gnu.org/s/gsl/)\n\n\nRun-time dependencies:\n\n- [GREAL](http://acgt.cs.tau.ac.il/greal/), a software for the _Graph\n  Realization_ problem.\n  GREAL is only distributed as executable and needs that the following\n  (old) library [`libstdc++-libc6.2-2.so.3`][link] is placed in the working\n  directory\n- Basic Linux/Unix utilities, such as `bash`, `grep`, and `sed`\n\n[link]: http://rpmfind.net/linux/rpm2html/search.php?query=libstdc%2B%2B-libc6.2-2.so.3\n\n\n\n## Compilation ###\n\nThe program can be compiled by issuing the command at the command\nprompt:\n\n    $ make all\n\nThe resulting executable, `ppxh-gr`, can then be copied (if necessary)\nin some other folder.\n\n\n\n## Usage ##\n\nThe program takes as input a genotype matrix and returns a haplotype\nmatrix that explains the given genotype matrix.\nThe command line is as follow:\n\n    $ ./ppxh-gr -f FILENAME [-r N]\n\nwhere `FILENAME` indicates the name of the file containing the genotype\nmatrix, and `N` indicates the number of solutions that PPXH-GR computes\n(default: `10`).\n\nPlease note that the following files must be placed in the working\ndirectory:\n\n- `exec-gr.sh` (supplied with PPXH-GR)\n- `grealLinux`\n- `libstdc++-libc6.2-2.so.3`\n\n\nThe input genotype matrix is described as a sequence of _n_ rows\n(representing the genotypes of the _n_ individuals) each one containing\nexactly _m_ characters (representing the alleles at the _m_ SNPs/loci\nover which the xor-genotypes are defined).\nEach character is either `0`/`1` (indicating an homozygous locus) or `2`\n(indicating an heterozygous locus).\nPlease refer to the file `genot-matrix-test.txt` for an example of a\nsimple 7x4 genotype matrix.\n\n\n\n### Computing the haplotype resolutions ###\n\nThe Python script `hapmat2resolution.py` provides a simple way to\npost-process the output computed by `PPXH-GR` in order to obtain all the\npossible pairs of computed haplotypes that solve each xor-genotype.\n\n`hapmat2resolution.py` has two mandatory arguments:\n\n- `--input` (`-i`), which specifies the file containing the input\n  xor-genotype matrix;\n- `--output` (`-o`), which specifies the file containing the output\n  computed by `PPXH-GR`.\n\nThe optional flag `--verbose` (`-v`) increases the verbosity of the log.\n\n`hapmat2resolution.py` extracts a most parsimonious haplotype matrix\n(ties are broken randomly) and uses it to compute the pairs of\nhaplotypes which solve each xor-genotype.\n\nThe output of `hapmat2resolution.py` is a [JSON](http://json.org/)\nobject with the following properties:\n\n- `xor-genotypes`, an array of the input xor-genotypes (not necessarily\n  in the same order of file `--input`);\n- `haplotypes`, an array of the output haplotypes of the most\n  parsimonious haplotype matrix;\n- `resolutions`, an array of objects each one with the following\n  properties:\n  * `xor-genotype-id`, the identifier of the current xor-genotype\n    (w.r.t. property `xor-genotypes` of the first-level object);\n  * `xor-genotype-str`, the string representation of the current\n    xor-genotype;\n  * `haplotype-pairs`, an array of objects with the following\n    properties:\n      + `haplotype1-id`, the identifier of the first haplotype in the\n        pair that solves the current xor-genotype (w.r.t. property\n        `haplotypes` of the first-level object);\n      + `haplotype1-str`, the string representation of the first\n        haplotype;\n      + `haplotype2-id`, the identifier of the second haplotype in the\n        pair that solves the current xor-genotype (w.r.t. property\n        `haplotypes` of the first-level object);\n      + `haplotype2-str`, the string representation of the second\n        haplotype.\n\n\n\n## License ##\n\nPPXH-GR is released under the terms of the GNU General Public License\n(GPL) as published by the Free Software Foundation, either version 3 of\nthe License, or (at your option) any later version.\n\nPPXH-GR is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.\nSee the GNU General Public License for more details.\n\nPlease refer to file `COPYING` or to the\n[GNU website](http://www.gnu.org/licenses/) for a copy of the GNU\nGeneral Public License.\n\n\n\n## Contacts ##\n\nPlease contact *Yuri Pirola* for additional information.  \nE-mail:   <yuri.pirola@gmail.com>  \nWeb page: <http://bimib.disco.unimib.it/index.php/Pirola_Yuri>\n", 
  "id": 2867972
}