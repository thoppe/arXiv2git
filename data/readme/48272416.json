{
  "read_at": 1462550016, 
  "description": "Convolutional Recurrent Neural Network (CRNN) for image-based sequence recognition.", 
  "README.md": "Convolutional Recurrent Neural Network\n======================================\n\nThis software implements the Convolutional Recurrent Neural Network (CRNN), a combination of CNN, RNN and CTC loss for image-based sequence recognition tasks, such as scene text recognition and OCR. For details, please refer to our paper http://arxiv.org/abs/1507.05717.\n\n\nBuild\n-----\n\nThe software has only been tested on Ubuntu 14.04 (x64). CUDA-enabled GPUs are required. To build the project, first install the latest versions of [Torch7](http://torch.ch), [fblualib](https://github.com/facebook/fblualib) and LMDB. Please follow their installation instructions respectively. On Ubuntu, lmdb can be installed by ``apt-get install liblmdb-dev``.\n\nTo build the project, go to ``src/`` and execute ``sh build_cpp.sh`` to build the C++ code. If successful, a file named ``libcrnn.so`` should be produced in the ``src/`` directory.\n\n\nRun demo\n--------\n\nA demo program can be found in ``src/demo.lua``. Before running the demo, download a pretrained model from [here](https://www.dropbox.com/s/tx6cnzkpg99iryi/crnn_demo_model.t7?dl=0). Put the downloaded model file ``crnn_demo_model.t7`` into directory ``model/crnn_demo/``. Then launch the demo by:\n\n    th demo.lua\n\nThe demo reads an example image and recognizes its text content.\n\nExample image:\n![Example Image](./data/demo.png)\n\nExpected output:\n\n    Loading model...\n    Model loaded from ../model/crnn_demo/model.t7\n    Recognized text: available (raw: a-----v--a-i-l-a-bb-l-e---)\n\n\nUse pretrained model\n--------------------\n\nThe pretrained model can be used for lexicon-free and lexicon-based recognition tasks. Refer to the functions ``recognizeImageLexiconFree`` and ``recognizeImageWithLexicion`` in file ``utilities.lua`` for details.\n\n\nTrain a new model\n-----------------\n\nFollow the following steps to train a new model on your own dataset.\n\n  1. Create a new LMDB dataset. A python program is provided in ``tool/create_dataset.py``. Refer to the function ``createDataset`` for details.\n  2. Create model directory under ``model/``. For example, ``model/foo_model``. Then create \n   configuraton file ``config.lua`` under the model directory. You can copy ``model/crnn_demo/config.lua`` and do modifications.\n  3. Go to ``src/`` and execute ``th main_train.lua ../models/foo_model/``. Model snapshots and logging file will be saved into the model directory.\n\n\nCitation\n--------\n\nPlease cite the following paper if you are using the code/model in your research paper.\n\n    @article{ShiBY15,\n      author    = {Baoguang Shi and\n                   Xiang Bai and\n                   Cong Yao},\n      title     = {An End-to-End Trainable Neural Network for Image-based Sequence Recognition\n                   and Its Application to Scene Text Recognition},\n      journal   = {CoRR},\n      volume    = {abs/1507.05717},\n      year      = {2015}\n    }\n\n\nAcknowledgements\n----------------\n\nThe authors would like to thank the developers of Torch7, TH++, [lmdb-lua-ffi](https://github.com/calind/lmdb-lua-ffi) and [char-rnn](https://github.com/karpathy/char-rnn).\n\nPlease let me know if you encounter any issues.\n", 
  "id": 48272416
}