{
  "README": "The PoisFFT library solves the Poisson equation on a uniform Cartesian grid \nusing the Fast Fourier Transform. It calls the library FFTW3 and (if MPI is used) \nalso PFFT.\n\nThe description is available in article\n\n  Vladimir Fuka: PoisFFT - a free parallel fast Poisson solver, Applied Mathematics and Computation, 2015\n\n  available online: http://dx.doi.org/10.1016/j.amc.2015.03.011 \n  preprint: http://arxiv.org/abs/1409.8116\n\nPlease cite this article when using the library for your research.\n\n\nThe Poisson equation used is\n\n    \\Delta \\phi = b\n \n where `\\phi` and `b` are functions of 1, 2 or 3 spatial dimensions.\n\n\n \n \n \n \nFor instruction how to use the API after installation see `usage_Fortran.txt`,\n`usage_C.txt` and `usage_C++`.\n\n\n\nFor examples see `testpoisson.f90`, `testpoisson.c` and `testpoisson.cc`.\n\n\n\n\n\n\nThe installation is done using SConstruct, a Python based build environment, if you do not have it, you must install it first. \n\nFor compiling the library use\n\n    scons\n\nor \n\n    scons mpi=yes\n\nin the `src` directory.\n\nFor compiling of the test programs add `test` after the above command.\n\nIf you use other compilers than GCC (gfortran, gcc, g++), add argument comp, i.e.,\n\n    scons comp=intel\n\nor\n\n    scons comp=sun\n\nFor other compilers you will have to add the options in the `SConstruct` file.\n\nIf you want to disable OpenMP, use\n\n    scons openmp=no\n\nWith MPI it is disabled automatically, but can be explicitly enabled by\n\n    scons mpi=yes openmp=yes\n\nfor hybrid MPI/OpenMP parallelization.\n\n\n", 
  "read_at": 1462547308, 
  "description": "Free parallel fast Poisson solver. Requires FFTW3 and optionally PFFT.", 
  "id": 20865308
}