{
  "read_at": 1462552119, 
  "description": "", 
  "README.md": "Based mostly on the excellent lectures on [Algorithms: Design and Analysis, Part 1](https://class.coursera.org/algo-007/) from Coursera.\n\n#Review List\n\n* Divide and Conquer\n  - Merge Sort & Inversions\n  - Complexity Notation - O, omega, theta and small-o\n  - Strassens Matrix Multiplication Algorithm\n  - Closest-Pair (optional)\n  - Master Method\n\n* Quicksort\n  - Probability Review - Sample Spaces, Events, Random Variables, Expected Value, Linearity of Expectations\n  - Partition Algorithm - invariant, correctness, running time\n  - Choosing a good pivot\n  - Quicksort with Randomized Pivot\n  - Proof of Quicksort average running time\n  - Any comparison-based sort takes n log n\n* Selection\n  - Randomized Selection avg O(n)\n  - Deterministic Selection\n* Graphs\n  - Graphs - Basic definitions\n  - Graphs - Karger's Minimum Cut Algorithm\n  - Probability Review   - Conditional Probability\n  - MinCut optimizations for randomized algorithms\n  - Shortest Path\n  - Topological Sort\n  - SCC - Kosaraju's algorithm\n  - Djikstra's Algorithm\n\n#TODO\nConvert to rst - maths equations cleanup\nTheory Problems summary\nReview Problem Sets\nClean up Code\n\nInversions - try common approach\nStrassens Algo - write code\nClosest-Pair\nQuicksort Pivot Partition proof by induction\nQuicksort - prove that 25-75 split will result in O(n log n performance)\nQuicksort - read formal proof\nQuicksort with repeated elements\nQuicksort randomized\nLeighman-Leighton notes on maths for compscience\nGraph Algorithms - adapt for disconnected graphs\nProof of BFS being shortest distance\nProof that SCCs form a DAG\nProof that BST min/max/delete/pred/succ/size functionality\nRB Trees - rotation implementation\nAVL Trees\nSplay Trees - self-adjusting trees\nB-Trees / B+ Trees\nRead up hash tables in Algorithm book\nUniversal Hashing optional videos\nUniversal Hashing number theory proof\nBloom Filter implementation\nBloom filter k,b derivation\n\n\nFamily Tree Visualization - http://vis.berkeley.edu/courses/cs294-10-sp10/wiki/images/f/f2/Family_Tree_Visualization_-_Final_Paper.pdf\n[Structure of the Web](http://www.cis.upenn.edu/~mkearns/teaching/NetworkedLife/broder.pdf)\nSmall World Property - Core exhibits this. Six degrees of separation. http://en.wikipedia.org/wiki/Small-world_experiment - Milgram's experiments\nNetworks, Crowds and Markets - Easley & Kreinberg\n[Purely functional data structures](http://www.cs.cmu.edu/~rwh/theses/okasaki.pdf)\nAmortization of algorithms\n\nhttps://www.youtube.com/watch?v=pNhBQJN44YQ\nhttp://www.slideshare.net/vkostyukov/purely-functional-data-structures-in-scala-26175521\nhttps://reprog.wordpress.com/2010/05/25/how-slow-are-functional-implementations-of-quicksort/\nhttp://www.informit.com/articles/printerfriendly/1407357\nhttp://arxiv.org/pdf/1312.4666.pdf\n\n\n\n", 
  "id": 30182408
}