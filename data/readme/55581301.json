{
  "read_at": 1462547699, 
  "description": "Implementation of http://arxiv.org/abs/1505.00521", 
  "readme.md": "# An Implementation of the RL Neural Turing Machine\n\n## Action Space\n\n|Operator|Corresponding Action|\n|--------|--------------------|\n|`>`|Moves on to the next character on the input string|\n|`,`|Directly outputs the input character to output|\n|`+`|Reads the input character into the external LIFO memory|\n|`.`|Pushes out a character from external memory, or nothing if the external memory is empty|\n\n## Implemented Tasks\n\n|Task|Syntax|Output|Description|\n|----|------|------|-----------|\n|Copy|`c2345`|`2345`|Copies the input number directly to the output string|\n|Reverse|`r124nnn`|`421`|Reverses the input number. Needs the end-of-line character `n` to be provided as our NTM takes one time step for each input character|\n|Skip|`s123`|`23`|Copies the input number while omitting the first character|\n\n## Usage\n\nThis implementation uses a feed-forward NTM in order to force the machine to use its external memory with the reverse task. After loading/training a model, the `runtm(model,inputstring)` function can be called to utilize the machine. The `runtm` function returns an output string interpreted by the model. If you want to see the actions taken by the NTM agent, you can use the `ntmactions(model,inputstring)` function instead.\n\n## Example Trained Models\n\n* `traineddata/shortntm.jld` contains the NTM model trained with reinforcre algorithm\n * contains 196 parameters\n * this model is able to do the copy and reverse tasks with short lengths(2) in most inputs\n* `traineddata/perfect.jld` contains the NTM model trained directly\n * contains 196 parameters\n * this model is able to do the copy, skip and reverse tasks with any length (tested up to 100 length string in copy task)", 
  "id": 55581301
}