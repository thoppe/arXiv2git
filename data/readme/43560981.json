{
  "read_at": 1462556452, 
  "description": "Julia package mirror.", 
  "README.md": "JuMP\n====\n#### Julia for Mathematical Programming\n\nJuMP is a domain-specific modeling language for **[mathematical programming]**\nembedded in **[Julia]**. It currently supports a number of open-source and\ncommercial solvers ([Bonmin], [Cbc], [Clp], [Couenne], [CPLEX], [ECOS], [GLPK],\n[Gurobi], [Ipopt], [KNITRO], [MOSEK], [NLopt], [SCS]) for a variety of problem classes, including\n**[linear programming]**, **[(mixed) integer programming]**,\n**[second-order conic programming]**, **[semidefinite programming]**, and **[nonlinear programming]**.\n\n[mathematical programming]: http://en.wikipedia.org/wiki/Mathematical_optimization\n[Julia]: http://julialang.org/\n[Bonmin]: https://projects.coin-or.org/Bonmin\n[Couenne]: https://projects.coin-or.org/Couenne\n[Clp]: https://projects.coin-or.org/Clp\n[Cbc]: https://projects.coin-or.org/Cbc\n[ECOS]: https://github.com/ifa-ethz/ecos\n[GLPK]: http://www.gnu.org/software/glpk/\n[Gurobi]: http://www.gurobi.com/\n[MOSEK]: http://mosek.com/\n[CPLEX]: http://www-01.ibm.com/software/commerce/optimization/cplex-optimizer/\n[Ipopt]: https://projects.coin-or.org/Ipopt\n[KNITRO]: http://www.ziena.com/knitro.htm\n[NLopt]: http://ab-initio.mit.edu/wiki/index.php/NLopt\n[SCS]: https://github.com/cvxgrp/scs\n[linear programming]: http://en.wikipedia.org/wiki/Linear_programming\n[(mixed) integer programming]: http://en.wikipedia.org/wiki/Integer_programming\n[second-order conic programming]: http://en.wikipedia.org/wiki/Second-order_cone_programming\n[semidefinite programming]: https://en.wikipedia.org/wiki/Semidefinite_programming\n[nonlinear programming]: http://en.wikipedia.org/wiki/Nonlinear_programming\n\nJuMP makes it easy to specify and **solve optimization problems without expert knowledge**, yet at the same time allows experts to implement advanced algorithmic techniques such as exploiting efficient hot-starts in linear programming or using callbacks to interact with branch-and-bound solvers. JuMP is also **fast** - benchmarking has shown that it can create problems at similar speeds to special-purpose commercial tools such as AMPL while maintaining the expressiveness of a generic high-level programming language. JuMP can be easily embedded in complex work flows including simulations and web servers.\n\nOur documentation includes an installation guide, quick-start guide, and reference manual. The **[juliaopt-notebooks]** repository contains a small but growing collection of contributed examples. Submissions are welcome!\n\n[juliaopt-notebooks]: https://github.com/JuliaOpt/juliaopt-notebooks\n\n**Latest Release**: 0.12.2 (via ``Pkg.add``)\n  * [Documentation](http://www.juliaopt.org/JuMP.jl/0.12/)\n  * [Examples](https://github.com/JuliaOpt/JuMP.jl/tree/release-0.12/examples)\n  * Testing status:\n    * TravisCI: [![Build Status](https://travis-ci.org/JuliaOpt/JuMP.jl.svg?branch=release-0.12)](https://travis-ci.org/JuliaOpt/JuMP.jl)\n    * PackageEvaluator:\n      [![JuMP](http://pkg.julialang.org/badges/JuMP_0.3.svg)](http://pkg.julialang.org/?pkg=JuMP&ver=0.3)\n      [![JuMP](http://pkg.julialang.org/badges/JuMP_0.4.svg)](http://pkg.julialang.org/?pkg=JuMP&ver=0.4)\n\n\n**Development version**:\n  * [Documentation](https://jump.readthedocs.org/en/latest)\n  * [Examples](https://github.com/JuliaOpt/JuMP.jl/tree/master/examples)\n  * Testing status:\n    * TravisCI: [![Build Status](https://travis-ci.org/JuliaOpt/JuMP.jl.svg?branch=master)](https://travis-ci.org/JuliaOpt/JuMP.jl)\n    * Test coverage:\n      [![Coverage Status](https://coveralls.io/repos/JuliaOpt/JuMP.jl/badge.svg?branch=master)](https://coveralls.io/r/JuliaOpt/JuMP.jl?branch=master)\n      [![codecov.io](http://codecov.io/github/JuliaOpt/JuMP.jl/coverage.svg?branch=master)](http://codecov.io/github/JuliaOpt/JuMP.jl?branch=master)\n  * Changes: see [NEWS](https://github.com/JuliaOpt/JuMP.jl/tree/master/NEWS.md)\n\n\n## Installation\n\nJuMP can be installed through the Julia package manager:\n\n```julia\njulia> Pkg.add(\"JuMP\")\n```\n\nFor full installation instructions, including how to install solvers, see the documentation linked above.\n\n\n## Supported problem classes\n\nMathematical programming encompasses a large variety of problem classes.\nWe list below what is currently supported. See the documentation for more information.\n\n**Objective types**\n\n* Linear\n* Convex Quadratic\n* Nonlinear (convex and nonconvex)\n\n**Constraint types**\n\n* Linear\n* Convex Quadratic\n* Second-order Conic\n* Semidefinite\n* Nonlinear (convex and nonconvex)\n\n**Variable types**\n\n* Continuous\n* Integer-valued\n* Semicontinuous\n* Semi-integer\n\n\n## Bug reports and support\n\nPlease report any issues via the Github **[issue tracker]**. All types of issues are welcome and encouraged; this includes bug reports, documentation typos, feature requests, etc. The **[julia-opt]** mailing list is appropriate for general discussion, including \"how do I do this?\" questions.\n\n[issue tracker]: https://github.com/JuliaOpt/JuMP.jl/issues\n[julia-opt]: https://groups.google.com/forum/#!forum/julia-opt\n\n\n## Citing JuMP\n\nIf you find JuMP useful in your work, we kindly request that you cite the following [paper](http://dx.doi.org/10.1287/ijoc.2014.0623):\n\n    @article{LubinDunningIJOC,\n    author = {Miles Lubin and Iain Dunning},\n    title = {Computing in Operations Research Using Julia},\n    journal = {INFORMS Journal on Computing},\n    volume = {27},\n    number = {2},\n    pages = {238-248},\n    year = {2015},\n    doi = {10.1287/ijoc.2014.0623},\n    URL = {http://dx.doi.org/10.1287/ijoc.2014.0623}\n    }\n\nA preprint of this paper is freely available on [arXiv](http://arxiv.org/abs/1312.1431).\n\nIf you use the nonlinear or conic optimization functionality of JuMP, please cite the following [preprint](http://arxiv.org/abs/1508.01982) which describes the methods implemented in JuMP. You may cite it as:\n\n    @article{DunningHuchetteLubin2015,\n    title = {{JuMP}: {A} modeling language for mathematical optimization},\n    author = {Iain Dunning and Joey Huchette and Miles Lubin},\n    journal = {arXiv:1508.01982 [math.OC]},\n    year = {2015},\n    url = {http://arxiv.org/abs/1508.01982}\n    }\n", 
  "id": 43560981
}