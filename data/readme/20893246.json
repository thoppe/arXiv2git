{
  "read_at": 1462547402, 
  "description": "A Python library for computing matching and independence polynomials", 
  "README.md": "hobj\n====\n\nA Python library for computing matching and independence polynomials\n\n\nWebsite: https://github.com/pernici/hobj\n\nAuthor: Mario Pernici <mario.pernici@gmail.com>\n        INFN - Sezione di Milano, Italy\n\nhobj is free software released under the New BSD License (see the\nLICENSE file for details)\n\nDependences\n===========\n\nThere are no dependences.\n\nOne can use gmpy setting GMP = 1 in src/domains.py,\nbut usually the pure Python version is faster\n(dup_permanental_minor_poly(m, QQ) is faster with gmpy).\n\n\nUsage\n=====\n\nUse python from the directory src, or add the path to it using\n\n    >>> import sys\n    >>> sys.path.append('path_to_hobj/src')\n\nExamples:\n\n    >>> from hobj import dup_permanental_minor_poly\n    >>> from domains import ZZ\n    >>> m = [[i*j if abs(i-j) < 6 else 0 for i in range(20)] for j in range(20)]\n    >>> sum(dup_permanental_minor_poly(m, ZZ))\n    11936810897247956264161397956481650508142206788L\n    >>> dup_permanental_minor_poly(m, ZZ, 1)\n    11936810897247956264161397956481650508142206788L\n\n    >>> from hobj import dup_matching_generating_poly, dup_independence_poly\n    >>> from graphs_gen import dict_fuller\n    >>> d = dict_fuller(60)\n    >>> dup_matching_generating_poly(d, val=1)\n    1417036634543488\n    >>> dup_independence_poly(d, val=1)\n    217727997152\n\nIt can be used in Sage:\n\n    sage: from hobj import dup_matching_generating_poly\n    sage: g = graphs.PetersenGraph()\n    sage: d = g.to_dictionary()\n    sage: g.matching_polynomial()\n    x^10 - 15*x^8 + 75*x^6 - 145*x^4 + 90*x^2 - 6\n    sage: dup_matching_generating_poly(d)\n    [6, 90, 145, 75, 15, 1]\n\n\nNotes\n=====\n\nThe code is organized in a way to be easily included in SymPy.\nThe low-level representation of SymPy univariate polynomials is used;\nthe code in src/densearith.py is taken from SymPy.\n\nEventually hobj.py will appear in a Pull Request for inclusion in SymPy.\n\n\nCredits\n=======\n\nThanks to Paolo Butera:\nthis module has been written in preparation of the article\n\nP. Butera, M. Pernici\n``Sums of permanental minors using Grassmann algebra''\nhttp://arxiv.org/abs/1406.5337\n\n", 
  "id": 20893246
}