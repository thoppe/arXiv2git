{
  "read_at": 1462549137, 
  "description": "an R program, short of Filter by highly ranked gene for Support Vector Machine, for microarray classification.", 
  "README.md": "fNet\n====\n\nan R program, short of Filter by highly ranked gene for Support Vector Machine, for microarray classification. \nR program and Supplment meterial for \"Yupeng Cun, Holger Frohlich (2012) Integrating Prior Knowledge Into Prognostic Biomarker Discovery Based on Network Structure. arXiv:1212.3214 \"\n\nFrSVM is the short of Filter by highly ranked gene for Support Vector Mchine. Download source codes here.  FrSVM is a feature selection algorithm which integrates protein-protein interaction network information into gene selection for prognostic biomarker discovery. \n\nHow to run FrSVM:\n\n1. Geting gene expression profiles (GEP), PPi Network.\n\n##############################################\n# Geing GEP\n#----------------------------------------------------------------------------------\nlibrary(GEOquery) \na = getGEO(\"GSExxxxx\", destdir=\"/home/YOURPATH/\")\n## Normalized the GEP by limma\nx= t(normalizeBetweenArrays(exprs(a), method=\"quantile\") )\n## defien your classes labes, y, as a factor\ny= facotr(\"Two Class\")\n\n##############################################\n# mapping probest IDs to Entrez IDs\n# take hgu133a paltform as example\n#---------------------------------------------------------------------------------\nlibrary('hgu133a.db')\nmapped.probes<-mappedkeys(hgu133aENTREZID)\nrefseq<-as.list(hgu133aENTREZID[mapped.probes])\ntimes<-sapply(refseq, length)\nmapping <- data.frame(probesetID=rep(names(refseq),times=times), graphID=unlist(refseq),row.names=NULL, stringsAsFactors=FALSE)\nmapping<- unique(mapping)\n\n##############################################\n# Summarize probests to genes of x by limma\n# ad.ppi: Adjacencen matrix of PPI network\n#---------------------------------------------------------------------------------\nGsub=ad.ppi\nmapping <- mapping[mapping[,'probesetID'] %in% colnames(x),]\nint <- intersect(rownames(Gsub), mapping[,\"graphID\"])\nxn.m=xn.m[,mapping$probesetID]\n   \nindex = intersect(mapping[,'probesetID'],colnames(xn.m))    \nx <- x[,index]\ncolnames(xn.m) <- map2entrez[index]\nex.sum = t(avereps(t(xn.m), ID=map2entrez[index]))   \n\nint= intersect(int, colnames(ex.sum))\nex.sum=ex.sum[,int]         ## GEP which matched to PPI network\nGsub=Gsub[int,int]            ## PPI network which matched to GEP\n\n\n2.  Run FrSVM program\n##################################################\n# You need install for flowing packages for run FrSVM.R programs:\n#    library(ROCR)\n#    library(Matrix)\n#    library(kernlab)\n#\n## If you want to running parallelly, you also need  to load:\n#    library(multicore)\n#  \n## Here is an expale for 5 times 10-folds Cross-Validtaion\nsource(\"../FrSVM.R\")\nres <- frSVM.cv(x=ex.sum, y=y, folds=10,Gsub=Gsub, repeats=5, parallel = FALSE, cores = 2, DEBUG=TRUE,d=0.5,top.uper=0.95,top.lower=0.9)\n## the AUC values for 5*10-folds CV\nAUC= res$auc\n", 
  "id": 8561151
}