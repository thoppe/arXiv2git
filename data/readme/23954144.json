{
  "read_at": 1462558497, 
  "description": "Programmable Abstraction of Datapath", 
  "README.md": "What it is\n=======\n\nProgrammable Abstraction of Datapath (PAD) which will help you build new data plane protocols headers and actions into OpenFlow GNU-Linux software switch based on xDPd/ROFL software. A new data plane protocols are specified using P4 language [1].\n\n[1] Programming Protocol-Independent Packet Processors, http://arxiv.org/abs/1312.1719\n\nLimitations\n========\n\nIt is PAD v0.1 for xDPd/ROFL and thus:\n\n - OpenFlow v1.2 is only supported (OF match and action extensions are used for manipulation of new headers)\n - Currently you can add a new header just after Ethernet header\n - A new header can be composed of any amount of 1-, 2- and 4- bytes fields\n - Only header add/remove actions are provided (support for P4 specification of actions declarations is currently very weak)\n\nRequirements\n==========\n\n- ROFL libraries installed [2]\n- xDPd libraries installed [3]\n- Python v2.7\n- pyparsing library [4]\n\n[2] http://www.roflibs.org/, https://github.com/bisdn/rofl-core\n\n[3] http://www.xdpd.org/, https://github.com/bisdn/xdpd\n\n[4] http://pyparsing.wikispaces.com/\n\nHow to configure \n=============\n\nDownload ROFL, xDPd and PAD projects:\n\n    git clone https://github.com/bisdn/rofl-core.git\n    git clone https://github.com/bisdn/xdpd.git\n    git clone https://github.com/fp7-alien/pad\n    \nCurrently PAD support only master-0.3 branch of both xDPd and ROFL thus you must switch to that branches:\n   \n    cd rofl-core\n    git checkout master-0.3\n    cd ../xdpd\n    git checkout master-0.3\n\nEdit xDPd/ROFL generator config file and provide current locations of ROFL and xDPd projects:\n\n    cd ../pad/xdpd_gnu_linux_v03_gen\n    nano config.py \n\nBefore futher configuration of ROFL and xDPd, firstly, it is required to generate example extension for ROFL and xDPd project (it will allow for correct configuration of ROFL and xDPd): \n\n    cd ../\n    python pad.py\n\nContinue configuration of both ROFL and xDPd accordingly their manuals:\n\n    cd ../rofl-core\n    ./autogen.sh\n    cd build\n    ../configure\n    \n    cd ../../xdpd\n    ./autogen.sh\n    cd build\n    ../configure\n\nRight now you are able to import pad library into your own program and generate your own extensions in xDPd and ROFL.\n\nUsage\n====\n\n    ###### your_module.py #####\n    \n    import pad\n    \n    ethernet_hrd = \"\"\"\n            header ethernet {\n                fields {\n                    dst_addr : 48;\n                    src_addr : 48;\n                    ethertype : 16;\n                }\n            }\n            parser start {\n                ethernet;\n              }\n              parser ethernet {\n                switch(ethertype) { \n                  case 0x9100: ictp;\n                }\n              }\n    \"\"\"\n    ictp_hdr = \"\"\"\n            header ictp {   \n                fields {\n                  nid : 32; \n                  csn : 32;   \n                }\n              }\n    \"\"\"\n    push_ictp = \"\"\"\n            action push_ictp {\n                add_header(ictp, sizeof(ethernet));\n            }\n    \"\"\"\n    pop_ictp = \"\"\"\n            action pop_ictp {\n                remove_header(ictp, sizeof(ethernet));\n            }\n    \"\"\"\n    add_protocol(\"Ethernet\", ethernet_hrd)\n    add_protocol(\"ICTP\", ictp_hdr)\n    add_function(\"push_ictp\", push_ictp)\n    add_function(\"pop_ictp\", pop_ictp)   \n    \n    of_extensions_ids = commit_configuration()\n\n\nAuthorship\n========\n(c) Copyright PSNC 2014\nDamian Parniewicz<damian.parniewicz (at) gmail.com>\n\nFunded by EU ICT ALIEN project, http://www.fp7-alien.eu/\n\nSee also\n========\n* ONF, OF-PI (A Protocol Independent Layer), http://www.layer123.com/download&doc=ONF-OF-PI__A_Protocol_Independent_Layer_for_OpenFlow_v1-1\n", 
  "id": 23954144
}