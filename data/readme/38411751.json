{
  "README": "# Ephemeral Trees\nThe `ephemeral_trees` project implements a treap data structure using\ntimestamps for the heap which allows efficient removal of expired entries.\n\nThe implementation is derived from the pseudo-code presented in the paper:\n\n\tEfficient Management of Short-Lived Data\n\tAlbrecht Schmidt and Christian S. Jensen\n\tFebruary 1, 2008\n\thttp://arxiv.org/abs/cs/0505038\n\n## Build\nPort the `ephemeral_trees` application to your environment:\n\n\t$ aclocal; autoheader; autoconf; automake --add-missing\n\t$ ./configure\n\nBuild the `ephemeral_trees` application and documentation:\n\n\t$ make\n\n## Test\nTest the `ephemeral_trees` application:\n\n\t$ make check\n\n## Install\nInstall the `ephemeral_trees` application:\n\n\t$ make install\n\n## License\nEverything here is distributed under a BSD 2-clause license.\n", 
  "read_at": 1462546311, 
  "description": "Efficient management of ephemeral data in Erlang.", 
  "README.md": "# Ephemeral Trees\nThe `ephemeral_trees` project implements a treap data structure using\ntimestamps for the heap which allows efficient removal of expired entries.\n\nThe implementation is derived from the pseudo-code presented in the paper:\n\n\tEfficient Management of Short-Lived Data\n\tAlbrecht Schmidt and Christian S. Jensen\n\tFebruary 1, 2008\n\thttp://arxiv.org/abs/cs/0505038\n\n## Build\nPort the `ephemeral_trees` application to your environment:\n\n\t$ aclocal; autoheader; autoconf; automake --add-missing\n\t$ ./configure\n\nBuild the `ephemeral_trees` application and documentation:\n\n\t$ make\n\n## Test\nTest the `ephemeral_trees` application:\n\n\t$ make check\n\n## Install\nInstall the `ephemeral_trees` application:\n\n\t$ make install\n\n## License\nEverything here is distributed under a BSD 2-clause license.\n", 
  "id": 38411751
}