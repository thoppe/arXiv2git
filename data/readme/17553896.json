{
  "read_at": 1462553419, 
  "description": "A Julia package for disciplined convex programming", 
  "README.md": "# Convex.jl\n\n[![Build Status](https://travis-ci.org/JuliaOpt/Convex.jl.svg?branch=master)](https://travis-ci.org/JuliaOpt/Convex.jl)\n[![Coverage Status](https://coveralls.io/repos/JuliaOpt/Convex.jl/badge.svg?branch=master)](https://coveralls.io/r/JuliaOpt/Convex.jl?branch=master)\n\n[![Convex](http://pkg.julialang.org/badges/Convex_0.3.svg)](http://pkg.julialang.org/?pkg=Convex&ver=0.3)\n[![Convex](http://pkg.julialang.org/badges/Convex_0.4.svg)](http://pkg.julialang.org/?pkg=Convex&ver=0.4)\n\n**Convex.jl** is a [Julia](http://julialang.org) package for [Disciplined Convex Programming](http://dcp.stanford.edu/). Convex.jl can solve linear programs, mixed-integer linear programs, and DCP-compliant convex programs using a variety of solvers, including [Mosek](https://github.com/JuliaOpt/Mosek.jl), [Gurobi](https://github.com/JuliaOpt/Gurobi.jl), [ECOS](https://github.com/JuliaOpt/ECOS.jl), [SCS](https://github.com/JuliaOpt/SCS.jl), and  [GLPK](https://github.com/JuliaOpt/GLPK.jl), through the [MathProgBase](http://mathprogbasejl.readthedocs.org/en/latest/) interface.\n\n**Installation**: `julia> Pkg.add(\"Convex\")`\n\n- **Detailed documentation and examples** for Convex.jl can be found [here](http://convexjl.readthedocs.org/)\n- If you're running into **bugs or have feature requests**, please use the [Github Issue Tracker](https://github.com/JuliaOpt/Convex.jl/issues>).\n- For usage questions, please contact us via the [JuliaOpt mailing list](https://groups.google.com/forum/#!forum/julia-opt)\n\n## Quick Example\n\nHere's a quick example of code that solves a least-squares problem with inequality constraints\n```julia\n# Let us first make the Convex.jl module available\nusing Convex\n\n# Generate random problem data\nm = 4;  n = 5\nA = randn(m, n); b = randn(m, 1)\n\n# Create a (column vector) variable of size n x 1.\nx = Variable(n)\n\n# The problem is to minimize ||Ax - b||^2 subject to x >= 0\n# This can be done by: minimize(objective, constraints)\nproblem = minimize(sumsquares(A * x - b), [x >= 0])\n\n# Solve the problem by calling solve!\nsolve!(problem)\n\n# Check the status of the problem\nproblem.status # :Optimal, :Infeasible, :Unbounded etc.\n\n# Get the optimal value\nproblem.optval\n```\n\n## More Examples\nA number of examples can be found [here](http://convexjl.readthedocs.org/en/latest/examples.html). \nThe [basic usage notebook](http://nbviewer.ipython.org/github/JuliaOpt/Convex.jl/blob/master/examples/basic_usage.ipynb) gives a simple tutorial on problems that can be solved using Convex.jl\n\n\n## Citing this package\n\nIf you use Convex.jl for published work, we encourage you to cite the software using the following BibTeX citation:\n```\n@article{convexjl,\n title = {Convex Optimization in {J}ulia},\n author ={Udell, Madeleine and Mohan, Karanveer and Zeng, David and Hong, Jenny and Diamond, Steven and Boyd, Stephen},\n year = {2014},\n journal = {SC14 Workshop on High Performance Technical Computing in Dynamic Languages},\n archivePrefix = \"arXiv\",\n eprint = {1410.4821},\n primaryClass = \"math-oc\",\n}\n```\n\n> Convex.jl was previously called CVX.jl.\n", 
  "id": 17553896
}