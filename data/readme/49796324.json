{
  "read_at": 1462552827, 
  "description": "A project to find cliques in a social network.", 
  "README.md": "# CliqueAnalyzer\nThis project represents a proof of concept for an optimal algorithm which solves\nthe deterministic clique problem.  That is, given a network of N nodes, does there\nexist a clique of size Q?\n\nAnalysis on the worst case runtime for such an optimal solution is available here:\n\nhttp://arxiv.org/abs/1601.03619\n\nThe algorithm itself generates all of the combinations \"N choose Q\", where Q\nrepresents the number of members included in the clique.  All cliques of size Q\nmay be iterated via the static method FindCliquesBySize() in CliqueAnalyzer.CliqueSolver.\n\nAn additional method, CliqueAnalyzer.CliqueSolver.FindLargestClique() is available,\nwhich returns the collection of all cliques of maximal size.\n\nFor now, the program is mostly of theoretical importance, as it is a realization of\nthe optimal algorithm described in the publication referenced above.  However,\nthis is an active project and feedback is welcome.\n\nNear term enhancements for this project will include:\n\n1. (feature added) the ability to construct a matrix by adding relationships between nodes\nprogrammatically, rather than relying on a csv file;\n2. (feature added) the ability to search for the largest clique involving a specific node; and\n3. (feature added) the ability to search for the largest clique involving a subnetwork, i.e.\nconstructing a maximal clique from some smaller clique.\n", 
  "id": 49796324
}