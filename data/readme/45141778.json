{
  "read_at": 1462556478, 
  "description": "A Bayesian group factor model with structured sparsity ", 
  "README.md": "# BASS\nThis repository contains the implementation of _BASS_,  a group factor analysis model with Bayesian structured sparsity priors.\nFor details of the model, please see http://arxiv.org/abs/1411.2698. \nThe draft is published on Journal of Machine Learning Research (JMLR).\n\n## License\nThis software is distributed under the terms of the GNU General Public \nLicense as published by the Free Software Foundation, either version 3 \nof the License, or (at your option) any later version.\n\n## JMLR Copyright\nThis source code is supplied \"as is\" without warranty of any kind, \nand its author and the Journal of Machine Learning Research (JMLR) \nand JMLR's publishers and distributors, disclaim any and all warranties, \nincluding but not limited to any implied warranties of merchantability \nand fitness for a particular purpose, and any warranties or non \ninfringement. The user assumes all liability and responsibility for use \nof this source code, and neither the author nor JMLR, nor JMLR's \npublishers and distributors, will be liable for damages of any kind \nresulting from its use. Without limiting the generality of the foregoing, \nneither the author, nor JMLR, nor JMLR's publishers and distributors, \nwarrant that the source code will be error-free, will operate without \ninterruption, or will meet the needs of the user.\n\n\n# Introduction\n_BASS_ stands for Bayesian group factor Analysis with Structured Sparsity priors.\nIt extends traditional factor analysis model to _m_ coupled observation matrices (views).\n\nBASS could be used to estimate both covariance specific to each observation matrix \nand shared variation across any subset of observations. \nApplications of BASS to construct condition specific gene co-expression networks and to\nfind shared topics among different classes of documents have been demonstrated in the paper.\n\n\n# About the folders\n* _simData_ contains simulation data sets used in the original paper.\n* _code_ contains all source code of implementation.\n* _output_ contains the output files/folders after running BASS.\n\n## Code\n### Compilation\nBASS is implemented using C++. Use Makefile to compile the source code to an executable file. \nIt requires installation of GNU Scientific Library (GSL). \nMake sure the library has been installed in your OS and \nthe path has been correctly specified in _Makefile_.\n\n### Running\nShell script _runBASS.sh_ provides an example of running BASS with simulation data set \"Yn100sim5.sim\".\nIt generates following commands\n> ./main -y ../simData/Yn100sim5.sim -sep space -k 15 \n  > -v 10 -p1 50 -p2 50 -p3 50 -p4 50 -p5 50 -p6 50 -p7 50 -p8 50 -p9 50 -p10 50\n  > -n 100 -iter 20000 -step 50 -mcmc 0 -px 20 \n  > -output ../output/MCMC0PX20ik15n100\n\nExplanation of arguments:\n* -y: joint data matrix file (p by n) with variables (features) are represented by row and subjects are in column\n* -sep: how the data are separated. arguments: \"space\" \"tab\"\n* -k: initial number of latent factors\n* -v: number of observations (views)\n* -p1 up to -pv: the dimension of each observation\n* -n: number of subjects\n* -iter: maximum iteration allowed\n* -step: number of steps to store parameters\n* -mcmc: number of MCMC steps\n* -px: number of PX-EM steps\n* -output: output directory\n\n### Analyzing results\nR script _analyze.R_ provides an example of analyzing outputs of BASS.\n\n### Acknowledgement\nThe source code _RngStream.cpp_, _RngStream.h_ and *gig_par.cpp*, *gig_par.h* are downloaded from\nhttp://jonaswallin.github.io/articles/2013/07/simulation-of-gig-distribution/ to draw samples from generalized inverse Gaussian distribution. \n", 
  "id": 45141778
}