{
  "read_at": 1462546940, 
  "description": "Look Ahead Hamiltonian Monte Carlo", 
  "README.md": "Look Ahead Hamiltonian Monte Carlo\n==================================\n\nImplements Look Ahead Hamiltonian Monte Carlo (LAHMC) and standard Hamiltonian Monte Carlo (HMC) in both Python and MATLAB.\n\nLAHMC is described in the paper:<br>\n> Sohl-Dickstein, Jascha and Mudigonda, Mayur and DeWeese, Michael R.<br>\n> Hamiltonian Monte Carlo Without Detailed Balance.<br>\n> International Conference on Machine Learning. 2014<br>\n> http://arxiv.org/abs/1409.5191\n\n## Example Python Code\n\nThe following code draws samples from an isotropic Gaussian distribution using LAHMC.\n\n```python\nfrom LAHMC import LAHMC\nimport numpy as np\n\n# Define the energy function and gradient\ndef E(X, sigma=1.):\n    \"\"\" Energy function for isotropic Gaussian \"\"\"\n    return np.sum(X**2, axis=0).reshape((1,-1))/2./sigma**2\ndef dEdX(X, sigma=1.):\n    \"\"\" Energy function gradient for isotropic Gaussian \"\"\"\n    return X/sigma**2\n\n# Initialize the sample locations -- 2 dimensions, 100 particles\nXinit = np.random.randn(2,100)\n\n# initialize the sampler.\nsampler = LAHMC(Xinit, E, dEdX, epsilon=0.1, beta=0.1, kwargs={'sigma':0.1})\n# perform 10 sampling steps for all 100 particles\nX = sampler.sample(num_steps = 10)\n# perform another 10 sampling steps\nX = sampler.sample(num_steps = 10)\n```\n\nMore detailed documentation, and additional options, can be found in **python/LAHMC.py**\n\n## Example MATLAB Code\n\nThe following code draws samples from an isotropic Gaussian distribution using LAHMC.\n\n```MATLAB\n% opts holds all parameters which will be passed to the sampler\nopts = [];\nopts.epsilon = 0.1;\nopts.beta = 0.1;\n% number of sampling steps\nopts.T = 10;\n% energy function and gradient\nopts.E = @E_gauss;\nopts.dEdX = @dEdX_gauss;\n\n% state will hold the particle positions and velocities between\n% sampler calls, as well as counters for the number of transitions\n% and function evaluations\nstate = []\n\n% Initialize sample locations -- 2 dimensions, 100 particles\nopts.Xinit = randn(2,100);\n% Gaussian coupling matrix expected by E_gauss and dEdX_gauss\nJ = eye(2)*100;\n\n% perform 10 sampling steps for all 100 particles\n[X, state] = LAHMC(opts, state, J);\n% perform another 10 sampling steps\n[X, state] = LAHMC(opts, state, J);\n```\n\nMore detailed documentation, and additional options, can be found in **matlab/LAHMC.m**.\n\n## Reproduce Figure from the Paper\n\nCode reproducing Figure 2 and Table 1 of the paper, and demonstrating usage of the sampler, can be found in **python/generate_figure_2.py** and **matlab/generate_figure_2.m**.  The exact plots appearing in the paper were generated using the MATLAB version of the code.\n", 
  "id": 15754314
}