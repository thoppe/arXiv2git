{
  "README": "-------\nSummary\n-------\n\nProb-EC (Probabilistic Event Calculus) is a version of the Event Calculus, originally introduced  by Robert Kowalski and Marek Sergot\nin their paper \"A Logic-Based Calculus of Events\", New Generation Computing 4: 67-95. The relevant paper detailing our system will appear in \nthe Special Issue on Probability, Logic and Learning of the Cambridge University Press journal \"Theory and Practice of Logic Programming\" in early 2014. \nA PDF copy of the paper is available at: http://arxiv.org/abs/1204.1851.\n\n------------------------------------------\nContents ((f) for file, (d) for directory)\n------------------------------------------\n\nprob-EC-code(d)\n  |\n  |\n  -----README (f)\n       LICENSE (f)\n       CAVIAR-Full-Evaluation (d)\n       |\n\t\t |\n\t\t ------LTAR-EC (d)\n       |     |\n       |     |\n\t    |\t\t  ----cached-version (d)\n\t\t |\t\t |\t\t|\n\t\t |\t\t |\t\t|\n\t\t |\t\t |\t\t ---- er_crisp_orig_cached.pl (f)\n\t\t |\t\t |\t\t|\t\tcrisp_utils_cached.pl (f)\n\t\t |\t\t |\t\t|\t\tevent_defs_orig_cached.pl (f)\n\t\t |\t\t |\t\t|\t\tec_cached.pl (f)\n       |     |     ----\n\t\t |\t\t | \tnon-cached-version (d)\n\t\t |\t\t |\t\t|\n\t\t |\t\t |\t\t|\n\t\t |\t\t |\t\t ----- er_crisp_orig.pl (f)\n\t\t |\t\t |\t\t|\t\t crisp_utils.pl (f)\n\t\t |\t\t |\t\t|      event_defs_orig.pl (f)\n\t\t |\t\t |\t\t|\t\t ec.pl (f)\n       |     |     -----\n\t\t |\t\t Prob-EC (d)\n       |     |\n\t\t |\t\t |\n\t\t |\t\t  ----cached-version (d)\n\t\t |\t\t |\t\t|\n\t\t |\t\t |\t\t|\n\t\t |\t\t |\t\t ---- er_prob_orig_cached.pl (f)\n\t\t |\t\t |\t\t|\t\tprob_utils_cached.pl (f)\n\t\t |\t\t |\t\t|\t\tprob_event_defs_orig_cached.pl (f)\n\t\t |\t\t |\t\t|\t\tprob_ec_cached.pl (f)\n       |     |      ----\n\t\t |\t\t |\t\tnon-cached-version (d)\n\t\t |\t\t |\t\t|\n\t\t |\t\t |\t\t|\n\t\t |\t\t |\t\t ----- er_prob_orig.pl (f)\n\t\t |\t\t |\t\t|\t\t prob_utils.pl (f)\n\t\t |\t\t |\t\t|      prob_event_defs_orig.pl (f)\n\t\t |\t\t |\t\t|\t\t prob_ec.pl (f)\n       |     |     -----\n\t\t |\t\t-------\n       randomQuerying (d)\n\t\t |\n\t\t |\n\t\t ------ LTAR-EC (d)\n\t\t |\t\t  |\n\t\t |\t\t  |\n\t\t |\t\t  -------- event_defs_orig.pl (f)\n\t\t |\t\t\t\t\t  ec.pl (f)\n\t\t |\t\t  --------\n\t\t |\t\t  Prob-EC (d)\n\t\t |\t\t  |\n\t\t |\t\t  |\n\t\t |\t\t  -------- prob_event_defs_orig.pl (f)\n\t\t |\t\t\t\t\t  prob_ec.pl (f)\n\t\t |\t\t  --------\n\t\t |\t  ------\n       dataset (d)\n\t\t  |\n\t\t  |\n\t\t  | ------ clean-CAVIAR (d)\n\t\t  |         |\n\t\t  |\t      |\t\n\t\t  |\t  \t\t--- 30 CAVIAR videos (30 x d)\n\t \t  | ------ smooth-noise (d)\n\t\t  |\t  \t\t|\n\t\t  |\t  \t\t|\n\t\t  |\t  \t   --- 30 CAVIAR videos with probabilities (30 x d)\n\t\t  | ------ strong-noise (d)\n\t\t  |\t  \t\t|\n\t\t  |\t  \t\t|\n\t\t  |\t  \t\t--- 30 CAVIAR videos with probabilities (30 x d)\n\t\t  |\t  -------\n   \t\t--------\n\t-------\n------\n\n\n-----\nUsage\n-----\nThere are two main functions of the code:\n\n1) Directory \"randomQuerying\" provides the user with the ability to query any video of the CAVIAR dataset for any query of interest.\nThe following example procedure can be used:\n\n\t - Copy the source files from subdirectories LTAR-EC or Prob-EC to the directory corresponding to the video of interest (all CAVIAR videos can be\n\t\tfound in the \"dataset\" directory).\n\t - Go to the subdirectory of interest and run YAP Prolog.\n\t - Load the event definitions file (e.g. ?- consult('prob_event_defs_orig.pl')). ProbLog and the EC engine\n\t\tare both consulted automatically from this file.\n\t - Load the \"AppearanceIndv\" and \"MovementIndv\" files of the video directory (.pl for LTAR-EC queries and .pbl for Prob-EC queries).\n\t\tFor example, for Prob-EC queries on video 02-Walk2, type: ?- consult(['wk2gtAppearenceIndv.pbl', 'wk2gtMovementIndv.pbl']) in the YAP\n\t\tprompt.\n\t - Run a \"holdsAt\" query of interest, e.g. ?- problog_exact(holdsAt(fighting(id2, id1) = true, 1400), Prob, Status) for Prob-EC or\n\t\tholdsAt(leaving_object(id5, id6) = true, 120) for LTAR-EC.\n\t - Exit the YAP prompt at any time with ?- halt or ^C (SIGINT).\n\n2) Directory CAVIAR-Full-Evaluation contains code required to perform a full evaluation of LTAR-EC and Prob-EC over any CAVIAR video. That is,\nit provides the user with the ability to ask all possible holdsAt queries from any video. This will produce a .result text file\nin the current directory. A caching technique has been implemented (CAVIAR-Full-Evaluation/*-EC/cached-version) to speed up this process and is strongly\nrecommended over the non-cached versions, which are mainly provided for consistency with the \"randomQuerying\" directory. The following example procedure \nmay be used:\n\t - As with (1), copy the source files of either Crisp-EC or Prob-EC to the directory of interest and run YAP in that directory.\n\t - Load the \"er\" file, e.g. ?-consult('er_prob_orig_cached.pl'). The rest of the code and ProbLog should be then loaded automatically.\n\t - Use any rule of the er/1 predicate to run a full evaluation of the relevant video, e.g. ?-er('23-Meet_Crowd') will load the required\n\t\t\"AppearanceIndv\" and \"MovementIndv\" files of video 23 and proceed with the evaluation.\n \t - For a full evaluation of the entire CAVIAR dataset, run the query ?- fullCAVIAR. It is strongly recommended that this query is run in a separate \n\t\tshell \"screen\", because it is rather time-consuming.\n\t - Exit the YAP prompt at any time with ?- halt or ^C (SIGINT).\n\n-----\nNotes\n-----\n\n1) A gamma distribution with mean value 4.0 was used to produce the probabilities for the noisy versions of CAVIAR.\nNoisy versions with probabilities corresponding to different gamma mean values are available upon request.\n2) Total size of the full code (with datasets included) is 198.2 MB.\n\n---------------------\nSystem Compatibility\n---------------------\n\nThe code has been tested on YAP Prolog 6.2.x on Debian and Ubuntu GNU / Linux (kernel 3.0.0-16-generic and 2.6.35-28-server) x86_64 systems.\n\n-------\nLicense\n-------\n\nPlease refer to the \"LICENSE\" file.\n\n----------------\nQuestions / Bugs\n----------------\n\nPlease send an e-mail at jfilip (at) iit (dot) demokritos (dot) gr for any questions or bug reports.\n", 
  "read_at": 1462550591, 
  "description": "A probabilistic version of the Event Calculus logic programming engine, developed during my time at NCSR \"Demokritos\", Athens, Greece.", 
  "id": 13566847
}