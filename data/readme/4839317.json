{
  "README": "Python-DP-Means-Clustering\n==========================\n\nComparing DP-means and K-means clustering algorithms\n\n\"cluster.py\" has implementations of k-means and dp-means clustering algorithms.\nImplementations were intended to be straight-forward, understandable and give\nfull output for diagnostics, rather than optimized implmentations.\n\nFor more information on the dp-means, see Revisiting k-means: New Algorithms \nvia Bayesian Nonparametrics at http://arxiv.org/abs/1111.0352/\n\nCLUSTERING\n==========\n\n> ./cluster.py -h\nUsage: cluster.py [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -k CLUSTERS, --kmeans-clusters=CLUSTERS\n                        If present, use kmeans with number of clusters\n                        specified\n  -l LAM, --lamda=LAM   If preset, use dpmeans with lambda parameters\n                        specified\n  -x XVAL, --cross-validate=XVAL\n                        Number of records to hold out for cross validations.\n                        Data will be random-ordered for you.\n  -s, --cross-validate-stop\n                        Stop when cross-validation error rises.\n\n> cat input/c3_s20_f2.csv | ./cluster.py -k2\nTolerance reached at step 8\nIterations completed: 8\nFinal error: 2.994711\nelapsed time: 6.582022 ms\n\n> cat input/c3_s20_f2.csv | ./cluster.py -k2\nTolerance reached at step 3\nIterations completed: 3\nFinal error: 2.994711\nelapsed time: 2.923965 ms\n\n> cat input/c3_s20_f2.csv | ./cluster.py -l2\nTolerance reached at step 4\nIterations completed: 4\nFinal error: 0.520926\nelapsed time: 5.388021 ms\n\n> cat input/c3_s20_f2.csv | ./cluster.py -l5\nTolerance reached at step 2\nIterations completed: 2\nFinal error: 2.994711\nelapsed time: 2.490044 ms\n\nTo plot errors for the last run (dp-means in this case), use \"plotResult.r\"\nThis script reads ./output/results.csv and ./output/error.csv.\n\n> ./plotResult.r \nLoading required package: methods\nLoading required package: grid\n       V1               V2                 V3                 V4     cluster\n Min.   :-4.997   Min.   :-4.11117   Min.   :0.000   Iter-0    :65   0:103  \n 1st Qu.:-3.413   1st Qu.:-3.01148   1st Qu.:0.000   Iter-1    :65   1: 90  \n Median :-2.562   Median :-2.34123   Median :2.000   Iter-2    :65   2: 59  \n Mean   :-1.606   Mean   :-1.68030   Mean   :1.918   Iter-3    :65   3: 12  \n 3rd Qu.: 1.425   3rd Qu.:-0.01388   3rd Qu.:4.000   Iter-4    :65   4:126  \n Max.   : 2.224   Max.   : 2.00472   Max.   :4.000   Iter-Final:65          \n       V1          V2        \n Min.   :0   Min.   :0.5209  \n 1st Qu.:1   1st Qu.:0.5209  \n Median :2   Median :0.5388  \n Mean   :2   Mean   :0.6489  \n 3rd Qu.:3   3rd Qu.:0.5777  \n Max.   :4   Max.   :1.0860  \n\nSee training output images created in ./img/iters.png and ./img/error.png\n\nOPTIMAL DP-MEANS\n================\nFinds the optimal value of lambda only from data.\n\ncat input/c4_s300_f2.csv | ./DPopt.py\n\n...\nFinal error: 18.510049\nFinal cross-validation error: 18.223702\nTolerance reached at step 6\nIterations completed: 6\nFinal error: 14.329098\nFinal cross-validation error: 14.262425\nlambda: 5.48775\n  with error: 14.26242\n\nCode holds back 20% of data for training optimization.\n\nThere are no parameters to set unless you anticipate more than the default max\nnumber of clusters (set in code).\n\nCREATE TEST DATA\n================\n> ./createTestData.py -h\nUsage: createTestData.py [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -s SAMPLE, --sample-size=SAMPLE\n                        Sample size per cluster\n  -f FEATURES, --features=FEATURES\n                        Number of features\n  -c CLUSTERS, --clusters=CLUSTERS\n                        Sample size\n  -o OVERLAP, --overlap=OVERLAP\n                        0 - distinct, 1 - scale = sig\n\n> ./createTestData.py -s6 -c1 -f3\n2.80484810546906,-5.107337369680055,1.7687444192348534\n4.045291632153071,-4.955840347993885,1.5936351799326172\n3.503220395140305,-5.008280722637208,1.5695863487866264\n3.2134872837791812,-4.809839458886229,1.3158740999089755\n3.8383496901618197,-4.745260338782687,1.74511375801971\n3.3736868708580805,-5.2559718245077045,1.4113521104252063\n\nCLUSTERING TESTS\n================\n\nExample test run on data set with 3 features, 100 points per cluster, with 4 clusters.\n\n> ./test.py | tee output/test.all.csv | grep -v Inter > output/test.csv\n...\nTolerance reached at step 1\nIterations completed: 1\nFinal error: 0.091798\nTolerance reached at step 1\nIterations completed: 1\nFinal error: 0.091798\nTolerance reached at step 1\nIterations completed: 1\nFinal error: 0.091798\nTolerance reached at step 1\nIterations completed: 1\nFinal error: 0.091798\nTolerance reached at step 1\nIterations completed: 1\nFinal error: 0.091798\nTolerance reached at step 1\nIterations completed: 1\nFinal error: 0.091798\n...\n\n> ./test.py -h\nUsage: test.py [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -f FILE, --file=FILE  Input file name\n  -i ITER, --iterations=ITER\n                        Iterations to use in searching for min error. Default\n                        20.\n\n\nPlot the test results,\n\n> ./plotTest.r \nLoading required package: methods\nLoading required package: grid\n        V1           V2                V3               V4         \n dp-means:12   Min.   : 0.5774   Min.   : 1.046   Min.   :  345.6  \n k-means :12   1st Qu.: 2.7424   1st Qu.: 2.722   1st Qu.: 1438.7  \n               Median : 4.8094   Median : 3.758   Median : 4243.7  \n               Mean   : 5.1264   Mean   : 7.159   Mean   : 4779.7  \n               3rd Qu.: 6.9462   3rd Qu.: 6.242   3rd Qu.: 5946.4  \n               Max.   :12.0000   Max.   :33.695   Max.   :12496.4  \n      method  \n dp-means:12  \n k-means :12  \n\nSee ./img/test_errors.png and ./img/test_times.png for comparative error and times\nfor k-means and dp-means.\n\nNOTE: lambda is chosen based on relevant scale of the data. In this example, the data set\nwas created to fall between -5 and 5, so the range is 10.  The maximum lambda is there 10, \nwhile the smallest lambda could be chosen as the smallest expected cluster size.  \n", 
  "read_at": 1462546840, 
  "description": "DP-means K-means clustering algorithms comparison", 
  "id": 4839317
}