{
  "read_at": 1462826680, 
  "description": "Source code for online object tracking, learning and parsing (TLP)", 
  "README.md": "# AOGTracker \n\n## Reproducing all experimental results in the paper\nTianfu Wu , Yang Lu and Song-Chun Zhu, Online Object Tracking, Learning and Parsing with And-Or Graphs, arXiv 1509.08067, TPAMI (under revision).\n\nSee a demo here: https://www.youtube.com/watch?v=1Ian4qzkNLA\n\nThe code is written by Matt Tianfu Wu (tfwu@stat.ucla.edu). Please feel free to report issues to me. \n\nCopyright (c) 2016, Matt Tianfu Wu\n\nAll rights reserved.\n\nIf you find the code is useful in your projects, please consider to cite the paper\n\n\t@article{AOGTracker,\n\t  author    = {Tianfu Wu and\n\t               Yang Lu and\n\t               Song{-}Chun Zhu},\n\t  title     = {Online Object Tracking, Learning and Parsing with And-Or Graphs},\n\t  journal   = {CoRR},\n\t  volume    = {abs/1509.08067},\n\t  year      = {2015},\n\t  url       = {http://arxiv.org/abs/1509.08067},\n\t  timestamp = {Thu, 01 Oct 2015 14:28:48 +0200},\n\t  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/WuLZ15b},\n\t  bibsource = {dblp computer science bibliography, http://dblp.org}\n\t}\n\n\n## 0. System requirements:\n\n### OS\nWe tested our tracker on Ubuntu 14.04 LTS. Other OS will be supported later on.\n\n### Third-party libraries\nsudo apt-get install build-essential cmake libboost1.55-all-dev libopencv-dev libeigen3-dev  libfftw3-dev graphviz mpich2\n\n###  The TRAX library for VOT\nIt is needed for integrating AOGTracker4VOT into vot-toolkit. Please follow the instrunctions at https://github.com/votchallenge/trax.git.\n\n## 1. Compiling the code\nAssume you put the code at PATH_TO_AOGTracker.\nIt is recommended to build the software in a separate directory. For example\n\n\tcd PATH_TO_AOGTracker\n\tmkdir build\n\tcd build\n\nThen use CMake to generate the necessary Makefiles with different options (e.g., release version with MPI and VOT support), which you can change accordingly \n\t\n\tcmake -DCMAKE_BUILD_TYPE=Release -DRGM_USE_MPI=OFF -DRGM_RUN_VOT=ON ..\n\nThen build the code with\n\n\tmake or make -j 8 (using multithread)\n\nOr, use CMake-gui to do this and use your own favoriate c++ IDE (e.g., Qt creator) to build the code.\n\nAfter compiling, the release/debug version executables (entry or entryd, AOGTracker4VOT or AOGTracker4VOTd) will be put in PATH_TO_AOGTracker/build/bin\n\n## 2. Preparing the Datasets\nTB100/50 is available at http://cvlab.hanyang.ac.kr/tracker_benchmark/. Please download all the data to PATH_TO_TB100 (e.g. /home/your_user_name/Data/TB100/)\nNote that: TB100-occ is provided which specifies omit frame idx in TRE (originally provided by TB-100 authors)\n\nVOT datasets are vailable at http://www.votchallenge.net/. vot-toolkit will download the data automatically.\n\n## 3. Run AOGTracker in the termial\nChange settings in the configuratin xml file, PATH_TO_AOGTracker/config/tracker_config.xml (e.g., specify your data directory, and TB100-occ directory for omitFrameIdxSpecDir, etc)\n\n### Using single workstation (when -DDRGM_USE_MPI=OFF was used in compiling the code)\n\n\tcd PATH_TO_AOGTracker/build/bin\n\t./entry Tracking PATH_TO_AOGTracker/config/tracker_config.xml\n\n### Using a cluster through MPI  (when -DDRGM_USE_MPI=ON was used in compiling the code)\nIf you have mulitple workstations available, please follow https://help.ubuntu.com/community/MpichCluster to set up the cluster.\n\t\n\tcd PATH_TO_AOGTracker/build/bin\n\t/usr/bin/mpiexec.mpich -f machine ./entry Tracking PATH_TO_AOGTracker/config/tracker_config.xml\n\n\tNote: \"machine\" is a txt file specifying the cluster machines, and the executable and data directory should be shared among all cluster machines.\n\n## 4. Generate performance comparison plots in TB-100\nWe provide the matlab scripts. Run PATH_TO_AOGTracker/matlab/PerfCompTB100/GenPerfPlots_TB100.m\n\n## 5. Run AOGTracker4VOT\na) Follow the vot-toolkit tutorial to set up the testing environment using matlab.\n\nb) Modify the configuration.m file by adding to the end: set_global_variable('trax_timeout', 20*60); \n\nc) Modify the tracker_AOGTracker.m, e.g., \n\n\ttracker_label = ['AOGTracker'];\n\n\t> for VOT2013, VOT2014 and VOT2015\n\t\ttracker_command = 'PATH_TO_AOGTracker/build/bin/AOGTracker4VOT PATH_TO_AOGTracker/config/vot_config.xml';\n\n\t> for VOT-TIR2015\n\t\ttracker_command = 'PATH_TO_AOGTracker/build/bin/AOGTracker4VOT PATH_TO_AOGTracker/config/vottir_config.xml';\n\n## 6. Acknowledgement\nIn general, the code is developed with the help from voc-release 5 by Dr. Ross Girshick and Prof. Felzenszwalb. \nThe code for computing HOG features, FFT convolution and LBFGS is adapted from FFLD by Dr. Charles Dubout <http://charles.dubout.ch/en/coding.html>. \nWe are grateful to them for make their codes publicly available.\n", 
  "id": 58232179
}