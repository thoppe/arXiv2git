{
  "read_at": 1462551438, 
  "description": "Decouple and recouple.", 
  "README.md": "# Decouple and Recouple\n\nThis repository contains the software implementation for our paper __A Novel Approach to Higgs Coupling Measurements__ (Cranmer, Kreiss, Lopez-Val, Plehn), [arXiv:1401.0080 \\[hep-ph\\]](http://arxiv.org/abs/1401.0080). It contains tools to apply the discussed methods to new models and contains a Makefile to recreate the plots in the paper.\n\nA demo for the recoupling stage where the effective likelihood and template parametrization are readily provided is at [decoupledDemo](http://github.com/svenkreiss/decoupledDemo).\n\n\n# Install\n\nClone the repository. Then create a `virtualenv` (which usually comes with your python environment or can be insalled) and install this package and all requirements with pip:\n\n```\nvirtualenv venv\nsource venv/bin/activate\npip install -r requirements.txt\n```\n\nFor development and to use the latest versions of all dependencies, use `requirements_dev.txt`.\n\n\n# Running on any model\n\nYou can create your own model and run `decouple` and `recouple` on them. `decouple` takes root files with a RooWorkspace, containing the model as input and produces the effective Likelihood and eta files. `recouple` takes eta files and effective Likelihoods (also from multiple channels to do a combination) and produces coupling results.\n\nExample models are in the module ModelGenerators.\n\nA fully working example that _recouples_ a model that someone else decoupled is implemented in the [decoupledDemo](http://github.com/svenkreiss/decoupledDemo) project.\n\n\n# Creating plots for the paper\n\nRun everything with\n\n```\nmake -j8\n```\n\nThis tells `make` to use parallel builds with 8 jobs in parallel. All profiled effective scans are implemented using the `multiprocessing` python module which will use as many jobs as there are CPUs. So this can lead to 8 make jobs where each runs 8 multiprocessing jobs.\n\nFor finer control, the framework can also be run step-by-step:\n\n1. `make models`: runs the makefile inside the `ModelGenerators` module\n2. `make decouple`: runs Decouple/decouple.py on all the models generated with `ModelGenerators`. For finer control, `make decoupleTwoBin` and `make decoupleAtlasCounting` runs the two sets individually.\n3. `make recouple`: runs Decouple/recouple.py on all decouple outputs. Also here, there are `make recoupleTwoBin` and `make recoupleAtlasCounting`.\n4. `make plots`\n\nThe above chain can be used as a best-practice example to setup your own models. The Makefile is just a guide so that you can see how to run `Decouple/decouple.py` and `Decouple/recouple.py` yourself on your own models.\n\n\n# Related Packages\n\nThis package depends on a few related Python packages that are generally useful. For this package, they are installed automatically by `pip` with the install instructions above.\n\n* [LHCHiggsCouplings](http://github.com/svenkreiss/LHCHiggsCouplings): Interface to cross sections and branching ratios published by the LHC Higgs Cross Section Working Group with interpolation in Higgs mass.\n* [BatchLikelihoodScan](http://github.com/svenkreiss/BatchLikelihoodScan): Powerful tool for likelihood scans and easily runs on batch clusters.\n* [PyROOTUtils](http://github.com/svenkreiss/PyROOTUtils): Collection of useful tools for working with TGraphs and generally plotting with ROOT.\n\n\n# Attribution\n\nPlease cite `K. Cranmer, S. Kreiss, D. Lopez-Val and T. Plehn (2014) <http://arxiv.org/abs/1401.0080>` if you find this code useful in your research.\n\n\n# License\n\nCopyright 2013-2014 Sven Kreiss, Kyle Cranmer\n\n`decouple` is free software made available under the MIT License. For details see\nthe [LICENSE](LICENSE) file.", 
  "id": 15537622
}