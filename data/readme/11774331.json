{
  "read_at": 1462556969, 
  "description": "Remove 8x8-pixel artifacts from JPEGs.", 
  "README.md": "### UnBlock\n\nRemove 8x8-pixel \"blocky\" artifacts from a heavily compressed JPEG image.\n\n### How to build on Ubuntu\n\n`make`\n\n### How to run\n\n`./unblock in.bmp out.bmp`\n\n`./unblock in.png out.png`\n\n### Software used\n\nThis is a wrapper around an algorithm by John Costella.\nHis [webpage](http://johncostella.webs.com/unblock/)\nincludes before-and-after pictures showing the algorithm's effectiveness.\n\nInstead of porting John's C# source code to C/C++,\nI built on Alexander Balakhnin's C port,\nin the context of a [plugin](http://avisynth.org.ru/unblock/unblock.html)\nfor [AviSynth](http://sourceforge.net/projects/avisynth2/),\nbased on John's own 2007 C port of \"the Costella libraries.\"\n\nFiles in .bmp format are read and written by [EasyBMP](http://easybmp.sourceforge.net/),\nfiles in .png format by [libpng](http://www.libpng.org/pub/png/libpng.html).\nWhy not .jpg for a JPEG utility?\nBecause my source images are still frames from mjpeg-format video.\nExtracting frames in a lossless format avoids the further degradation that happens with\n`ffmpeg -i in.avi -vcodec jpg ...`.\n\nThe article\n[Stitched Panoramas from Toy Airborne Video Cameras](http://arxiv.org/abs/1311.6500) (arXiv:1311.6500 [cs.CV])\ndemonstrates an application of this software.  A summary of this article is published in the\n[MIT Technology Review](http://www.technologyreview.com/view/522276/the-future-of-photography-cameras-with-wings-or-rotors/).\n\n### Bugs\n\nAn image whose width is not a multiple of 16 pixels may misbehave.\n", 
  "id": 11774331
}