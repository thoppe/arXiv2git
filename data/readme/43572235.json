{
  "read_at": 1462556097, 
  "description": "a heterogeneous multiGPU level-3 BLAS library", 
  "README.md": "# BLASX\nIt's a heterogeneous multiGPU level-3 BLAS library. This is an alternative to cuBLAS-XT, a commercial licensed multiGPU tiled BLAS. However, BLASX deliveries at least 25% more performance and 200% less communication volume. For detailed information, please refer to our paper @ http://arxiv.org/abs/1510.05041\n\nFor installation, please change the make.inc. Basically, the following varaiables need to be updated:\n<ul>\n<li>\n1. LIBCPUBLAS: please change it to the location of CPU BLAS. OpenBLAS is highly recommended. If you're using Linux, the library extension should be '.so'. I give an OSX verison in the repository make.inc, which follows the dylib extension.\n</li>\n<li>\n2. LIBGPUBLAS: please change it to the location of CUDA on your machine\n</li>\n</ul>\n\nOnce you have configured these two variables, then you're good to go. Simply Make and the library is built in the lib folder.\n\nTo use BLASX:\n<ul>\n<li>\n1. export LD_LIBRARY_PATH to the location of BLASX lib.\n</li>\n<li>\n2. you need to link cuBLAS when use BLASX. There is an example of linkage in the testing folder.\n</li>\n</ul>\nIntegrating BLASX with MATLAB is pretty easy,\n\n<ul>\n</li>\n<li>\n1. open a command line, export BLAS_VERSION=/path/to/BLASX\n</li>\n<li>\n2. init MATLAB from command line, say typing matlab\n</li>\n<li>\n3. that's it, enjoy!!\n</li>\n</ul>\nFor more questions, please open an issue and I will update accordingly. Enjoy!\n\nPlease cite our paper@\n\n@article{wang2015blasx, <br>\n  title={BLASX: A High Performance Level-3 BLAS Library for Heterogeneous Multi-GPU Computing}, <br>\n  author={Wang, Linnan and Wu, Wei and Xu, Zenglin and Xiao, Jianxiong and Yang, Yi}, <br>\n  booktitle={International Conference of Supercomputing}, <br>\n  pages={19--27},<br>\n  year={2016}<br>\n}\n\nLinnan\n\n---ZGEMM routine courtesy to Jan Winkelmann and Paul Springer \n", 
  "id": 43572235
}