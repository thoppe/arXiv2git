{
  "read_at": 1462555749, 
  "description": "A personal project to showcase what I've learned about text classification, natural language processing, and web programming", 
  "README.md": "Candidate Classifier\n======\n\nThis is a small personal project to showcase some of what I've learned about Natural Language processing and web-app design.\n\nThe original inspiration for this project was a workshop paper by Gregoire Mesnil, Tomas Mikolov, Marc'Aurelio and Yoshua Bengio: [Ensemble of Generative and Discriminative Techniques for Sentiment Analysis of Movie Reviews](http://arxiv.org/abs/1412.5335).  The idea of using all of these different techniques together facinated me and I wanted to try it for myself.  The task I have chosen for my project is actually an authorship attribution task, the idea is to take a sentence, or short document and classify it as belonging to onw of the presidential hopefuls.\n \nCurrently, I'm using an ensemble of Multinomial Naive Bayes with a classifier based on an Ngram language model.\n\n\n### Citations:\nThe debate transcriptions were taken from The American Presidency Project: `http://www.presidency.ucsb.edu`.\n\nThe NgramModel class is resurrected from the NLTK project and is mostly functional but still needs some work.\n\nGregoire Mesnil, Tomas Mikolov, Marc'Aurelio and Yoshua Bengio: Ensemble of Generative and Discriminative Techniques for Sentiment Analysis of Movie Reviews; Submitted to the workshop track of ICLR 2015.\n    http://arxiv.org/abs/1412.5335\n\n\n#### TODO:\n- Display some basic stats on the different candidates\n    - Total words\n    - unique words\n    - unique lemmas\n    - common phrases/ngrams/noun chunks/syntactic ngrams?\n    - common entities\n    - pos density\n    - sentence length\n- Site assets\n    - Bootstrap\n    - Candidate pictures\n    - Description of project\n- Create ensemble classifier with:\n    - Naive Bayes (sk-learn?)\n    - doc2vec (gensim + sklearn)\n- Prettify site\n    - Some kind of roulette scroller while it's doing classification...?\n- Show findings and results from all classifiers along with results\n- Keep a list of all queries and show some of the best ones on the site\n- Save/Load for ngram model\n- Go through ngram issues on NLTK git\n\n#### DONE:\n- Process all text to static files\n- Process user input text\n- Copy new debates\n- Basic Flask site with text input and on-screen string output of candidate name\n", 
  "id": 52940538
}