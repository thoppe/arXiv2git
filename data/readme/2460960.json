{
  "id": 2460960, 
  "read_at": 1462551219, 
  "README.rst": "PyMultiNest -- Python interface for MultiNest\n==============================================\n\nThis library provides programmatic access to MultiNest and PyCuba.\n\nWhat is MultiNest?\n-------------------\n\nMultiNest is a program and a sampling technique. As a Bayesian inference technique,\nit allows parameter estimation and model selection. (find out more in the \nMultiNest paper, http://arxiv.org/abs/0809.3437, or in a classic MCMC sampler, \nhttp://apemost.sf.net/ ). Recently, MultiNest added Importance Nested Sampling \n(INS, see http://arxiv.org/abs/1306.2144) which is now also supported.\n\nThe efficient Monte Carlo algorithm for sampling the parameter space is based \non nested sampling and the idea of disjoint multi-dimensional ellipse sampling.\n\nFor the scientific community, where Python is becoming the new lingua franca (luckily),\nI provide an interface to MultiNest.\n\nWhat does PyMultiNest do?\n--------------------------\n\nPyMultiNest \n\n  * provides an easy-to-use interface to MultiNest\n\n  * provides integration with your existing scientific Python code (numpy, scipy)\n\n  * allows you to write Prior & LogLikelihood functions in Python.\n\nPyMultiNest can \n\n  * Plot and visualize MultiNests progress (watch.ProgressWatcher, watch.ProgressPlotter). This is still fairly basic, contributions and ideas are welcome)\n\n  * Easy plotting, visualization and summary of MultiNest results.\n\nThe plotting can be run on existing MultiNest output, and when not using PyMultiNest for running MultiNest.\n\nCode contributions are welcome! Contact me (buchner.johannes [at] gmx.at).\n\nHow can I use MultiNest with Python?\n--------------------------------------------\nLook at the documentation available at http://johannesbuchner.github.com/PyMultiNest/index.html\n\nCiting PyMultiNest\n--------------------------------------------\nSee the documentation at http://johannesbuchner.github.com/PyMultiNest/index.html\n\nWhat is PyAPEMoST?\n--------------------------------------------\nSimilarly to PyMultiNest, it is an access module for a Bayesian inference engine.\nHowever, APEMoST is a Markov Chain Monte Carlo engine. See the `documentation <http://johannesbuchner.github.com/PyMultiNest/pyapemost>`_.\n\nWhat is PyCuba?\n--------------------------------------------\nCuba (http://www.feynarts.de/cuba/, https://github.com/JohannesBuchner/cuba) is a multidimensional numerical integration library for low dimensions. PyCuba allows integration of Python functions, providing an advanced alternative to the basic functions provided in scipy.integrate.\n\nIn the Bayesian sense, it is possible to use Cuba for model selection.\n\nQ: Python callback functions are too slow!\n-------------------------------------------\nIf you really identified that your callback functions are too slow, even\nwhen using the usual tricks (numpy, etc.), you can implement and compile \nthem as C functions.\n\nYou still have the neat python interface (default parameters, etc.), but\nachieve full execution speed, as only native code is executed while\nMultiNest runs.\n\n\n\n", 
  "description": "Pythonic Bayesian inference and visualization for the MultiNest Nested Sampling Algorithm or MCMC."
}