{
  "read_at": 1462549236, 
  "description": "GAP Benchmark Suite", 
  "README.md": "GAP Benchmark Suite [![Build Status](https://travis-ci.org/sbeamer/gapbs.svg)](https://travis-ci.org/sbeamer/gapbs)\n===================\n\nThis is a pre-release version of the reference code for the upcoming [GAP](http://gap.cs.berkeley.edu/) [Benchmark Suite](http://gap.cs.berkeley.edu/benchmark.html). It is designed to be a portable high-performance baseline that only requires a compiler with support for C++11. For parallelism it uses OpenMP, but it can also be compiled to run serially without OpenMP. The details of the benchmark can be found in the [draft specification](http://arxiv.org/abs/1508.03619).\n\nKernels Included\n----------------\n+ Breadth-First Search (BFS)\n+ Single-Source Shortest Paths (SSSP)\n+ PageRank (PR)\n+ Connected Components (CC)\n+ Betweenness Centrality (BC)\n+ Triangle Counting (TC)\n\n\nQuick Start\n-----------\n\nBuild the project:\n\n    $ make\n\nOverride the default C++ compiler:\n\n    $ CXX=g++-4.9 make\n\nTest the build:\n\n    $ make test\n\nRun BFS on 1,024 vertices for 1 iteration:\n\n    $ ./bfs -g 10 -n 1\n\nAdditional command line flags can be found with `-h`\n\n\nGraph Loading\n-------------\n\nAll of the binaries use the same command-line options for loading graphs:\n+ `-g 20` generates a Kronecker graph with 2^20 vertices (Graph500 specifications)\n+ `-u 20` generates a uniform random graph with 2^20 vertices (degree 16)\n+ `-f graph.el` loads graph from file graph.el\n+ `-sf graph.el` symmetrizes graph loaded from file graph.el\n\nThe graph loading infrastructure understands the following formats:\n+ `.el` plain-text edge-list with an edge per line as _node1_ _node2_\n+ `.wel` plain-text weighted edge-list with an edge per line as _node1_ _node2_ _weight_\n+ `.gr` [9th DIMACS Implementation Challenge](http://www.dis.uniroma1.it/challenge9/download.shtml) format\n+ `.graph` Metis format (used in [10th DIMACS Implementation Challenge](http://www.cc.gatech.edu/dimacs10/index.shtml))\n+ `.mtx` [Matrix Market](http://math.nist.gov/MatrixMarket/formats.html) format\n+ `.sg` serialized pre-built graph (use `converter` to make)\n+ `.wsg` weighted serialized pre-built graph (use `converter` to make)\n\n\nFuture Features\n---------------\n\n+ Release integration support for OpenTuner\n+ Scripts to perform official benchmark runs\n\n\n\nHow to Cite\n-----------\n\nPlease cite this code by the benchmark specification:\n\nScott Beamer, Krste Asanovic, David Patterson. [*The GAP Benchmark Suite*](http://arxiv.org/abs/1508.03619). arXiv:1508.03619 [cs.DC], 2015.\n", 
  "id": 37416619
}