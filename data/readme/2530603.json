{
  "README": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!                      !!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!   Welcome to NuLib   !!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!                      !!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nDISCLAIMER:\n-----------\n\nPlease note that the routines provided here come with absolutely no\nwarranty and we are unable to guarantee that we will be able to\nprovide support or help if you run into problems integrating them with\nyour simulation code. If you decide to use the provided routines in\npublished work, it is YOUR responsibility to check their physical\ncorrectness and consistency.\n\nIf you have any questions or have discovered a bug in our routines,\nplease e-mail us at evanoc@tapir.caltech.edu or cott@tapir.caltech.edu\n\nCOPYRIGHT:\n----------\n\nWhile NuLib is open source, its copyright is held by Evan O'Connor and\nChristian Ott. In the absence of suitable open scientific software\nlicenses, we release this version of NuLib to the community under the\nCreative Commons attribution-noncommercial-share alike license:\n\nhttp://creativecommons.org/licenses/by-nc-sa/3.0/us\n\nEssentially, you may use NuLib, but must make reference to our work,\nmust not use NuLib for commercial purposes, and any code including or\nusing our routines or part of them may be made publically available,\nand if so, only under the same license.\n\nIntroduction:\n-------------\n\nThe goal of NuLib is to provide a basic standard set of neutrino\nmatter interaction routines that can be readily incorporated in\nradiation-hydrodynamics codes for physics benchmarking.\n\nNuLib v1.0 includes the basic neutrino emissivities and absorption\nopacities (including pair processes) as well as neutrino-nucleon,\neutrino-nucleus elastic scattering processes and neutrino-electron\ninelastic scattering.  Other inelastic processes will also be\nincluding in future versions.\n\nIf anyone would like to contribute to the development of NuLib please\nlet me know, I'm hosting this on GitHub with this in mind. I am\ncurrently developing a neutrino transport code that will make use of\nall these interactions, that being said it is not finished and since\nI've never done such a task, it may well be the case that methodlogies\nof coding these interactions will change slightly (and have not been\nfully tested) If you have advice on this front please fill me in, I am\nmore than happy to make NuLib as accessible as it needs to be to allow\nothers to benefit from it.\n\nNuLib, in its current form, is used by me to make tables of neutrino\nemissivities, opacities (scattering and absorption), and scattering\nkernels.  It is not yet optimized for on-the-fly calculations of\nquantities.  In fact, the routines are coded in such a way as to be as\nclear and accurate as possble, with little or no regard for\ncomputational speed.  For example, the weak magnitism correction for\nscattering processes is small but many terms long, I do the full\ncalculation.  In the future I hope NuLib will have routines capable of\non the fly calculations, I expect this is necessary if one whats fully\ndifferential cross sections (in energy and angle, as a function of\nenergy).\n\nNuLib v1.0 Neutrino Interactions.\n---------------------------------\n\nEmissivities:\n-------------\n\n1. electron-positron annhilation to \\nu - \\bar{\\nu}. This is currently\ndone two ways.  Both follow Bruenn 1985 and while the first one uses\nBurrows, Reddy, Thompson(2006) as well. The first way is a bit of a\nkludge.  It calculates the emission assuming no final state blocking\nand gets an opacity via Kirchhoff's law.  It is not an appropiate use\nof the law, but it generally gives single neutrino interaction rates\nthat make sense for he-lepon neutrinos.  It doesn't work so well for\nelectron-type neutrinos, but these rates are not expected to be\ndominant for electron-type neutrinos.  The second way is more involved\nfor the user and the correct way.  NuLib can calculate both the\nproduction (via e+e- annihilation) and annihilation (via \\nu-\\bar{\\nu}\nannihilation) kernels (i.e. as a function of the energy of both\nneutrinos).  The user must then make use of these appropiately.  The\ndefault option is 1, for heavy-lepton neutrinos only.\n\n2. Nucleon-Nucleon Bremsstrahlung, this is an approximation used in\nBurrows Reddy, and Thompson (2006) [BRT06].  A full calculation of\nthis reaction would be great! The default is to use this only for\nheavy-lepton neutrinos.\n\nScattering Opacities:\n---------------------\n\nFor the scattering opacities, I list only the base interactions, the\nneutrino type plays a role in the calculations, see the code for a\nfull description of the interaction.  The cross sections all come from\nBRT06 with appropiate corrections (e.g. weak magnetism [has a logical\nflag to turn off if desired])\n\n\n1. neutrino scattering on neutrons\n\n2. neutrino scattering on protons\n\n3. neutrino scattering on heavy nuclei (this includes lots of\ncorrections, see BRT06 and the code for details)\n\n4. neutrino scattering on electrons (elastic, Thomspon, T. PhD)\n\n5. neutrino scattering on alphas\n\nAbsorption Opacities:\n---------------------\n\n1. \\nu_e absorption neutrons: This currently includes a stimulated\nabsorption term as described in BRT06, final\nstate electron blocking and also final state proton blocking.  Weak\nmagnitism, phase space and recoil corrections [optional via flag] are\napplied via Horowitz (2002).\n\n2. \\bar{\\nu}_e absorption protons: This currently includes a\nstimulated absorption term as described in Burrows, Reddy, and\nThompson, final state positorn blocking and also final state neutron\nblocking.  Weak magnitism, phase space and recoil corrections\n[optional via flag] are applied via Horowitz (2002).\n\n3. \\nu_e absorption on heavy nuclei: This follows the simple treatment\nof Bruenn 85 (among others), placing cuts on the cross section based\non the average A and average Z of the nucleus.  Much better treatment\nis desired and someday will be implemented.\n\nNeutrino-Electron Inelastic Scattering Kernels:\n-----------------------------------------------\n\nFor a temperature and electron chemical potential, NuLib calculates\nthe first two terms in a Legendre expansion of the scattering kernels\nfor neutrinos on electrons.  We essentially follow Bruenn 1985 and\nreferences there in.\n\n\nElectron-Capture Rates on Nuclei:\n---------------------------------\n\nChris Sullivan and Evan O'Connor et al. have implemented a new module\nfor microphysical electron-capture rates on nuclei in NuLib. It utilizes the\nformalism discussed in:\n------------------------------------------------------------------------------------\n| Sullivan, C., O'Connor, E., Zegers, R. G. T., Grubb, T., & Austin, S. M. (2015). |\n| The Sensitivity of Core-Collapse Supernovae to Nuclear Electron Capture.         |\n| http://arxiv.org/abs/1508.07348                                                  |\n| Contact: Chris Sullivan <sullivan@nscl.msu.edu>                                  |\n------------------------------------------------------------------------------------\nThe primary calculation is electron-neutrino type emissivities from\nelectron captures on medium-heavy nuclei. These calculations rely on\na library ofelectron-capture rate tables that have been compiled and\nare availableas a part of the weak_rates module (set in the parameters\nfile). In addition, number densities (abundances) and nuclear masses\nare needed for a large set of nuclei. These are calculated via Matthias\nHempel's NSE mass distributions discussed below. To include emissivities\nand opcaities for this interaction, set the corresponding flag in\nrequested_interactions.inc, as well as WEAK_RATES=1 in make.inc. If\nthese routines are utilized in a work, cite the above paper as well the\nfollowing publications from which the weak-rate tables derive:\n--------------------------------------------------------------------------------\n| Fuller, G. M., Fowler, W. A., & Newman, M. J. (1982).                        |\n| Stellar weak interaction rates for intermediate-mass nuclei.                 |\n| II - A = 21 to A = 60. The Astrophysical Journal, 252, 715.                  |\n| http://doi.org/10.1086/159597                                                |\n--------------------------------------------------------------------------------\n| Oda, T., Hino, M., Muto, K., Takahara, M., & Sato, K. (1994).                |\n| Rate Tables for the Weak Processes of sd-Shell Nuclei in Stellar Matter.     |\n| Atomic Data and Nuclear Data Tables, 56(2), 231-403.                         |\n| http://doi.org/10.1006/adnd.1994.1007                                        |\n--------------------------------------------------------------------------------\n| Langanke, K., & Mart\\'{i}nez-Pinedo, G. (2000).                              |\n| Shell-model calculations of stellar weak interaction rates:                  |\n| II. Weak rates for nuclei in the mass range in supernovae environments.      |\n| Nuclear Physics A, 673(1-4), 481-508.                                        |\n| http://doi.org/10.1016/S0375-9474(00)00131-7                                 |\n--------------------------------------------------------------------------------\n| Langanke, K., & Mart\\'{i}nez-Pinedo, G. (2003).                              |\n| Electron capture rates on nuclei and implications for stellar core collapse. |\n| Physical Review Letters 90, 241102.                                          |\n| http://prl.aps.org/abstract/PRL/v90/i24/e241102                              |\n--------------------------------------------------------------------------------\n\n\nSample Executables:\n-------------------\n\nmake_table_example: by default this makes a horribly under resolved\n10x10x10x24 (rho,temp,ye,energy) + (10x10x24*24)\n(temp,eta,energy_in,energy_out) NuLib table in h5 format. The\ncalculations takes abut 1 minute to generate.  The table boundaries,\nand number of data points are changable in the make_table_example.F90\nfile.  To get enough accuracy in the interpolation I expect at least\n10 points per decade in rho, 20 in temperature and 1 for every 0.01 or\n0.02 in ye.  This makes a table ~1GB in size with 24 energy bins.  The\nenergy spacing is changable in nulib.F90, right now it is a 4MeV bin,\nthen a logarithmic spacing starting at 1MeV going to ~300MeV, this may\nnot be the best choice, if you have a better suggestion, let me know,\nor code up a routine to generate good energy spacing and send a pull\nrequest (?).\n\nYou must specify an equation of state, NuLib is set up to read in the\nEOS tables on stellarcollapse.org, the filename is set in\nmake_table_example.F90.  For each EOS you must set the reference mass,\nthis is used to convert the density into a number density for the\nscattering and absorption cross sections.\n\nThe main routine that make_table_example.F90 calls is\nsingle_point_return_all.  This routine takes as input all of the\nequation of state variables and returns the emissivity, absorption\nopacity and scattering opacity for all neutrino species and energies.\nYou also must specify the neutrino scheme, this is what sets the\nnumber of species. Here the comments regarding the different neutrino\nscheme currently available in NuLib, again if you have a request let\nme know, I want to make this as useful as possible.\n\n! many people use different number of species, this is the possible\n! summing scheme NuLib can currently do\n!\n! mytable_neutrino_scheme = 1 (three output species)\n! species #1: electron neutrino             #2 electron antineutrino\n!         #3: muon+tau neutrino+antineutrino\n!\n! neutrino_scheme = 2 (four output species)\n! species #1: electron neutrino             #2 electron antineutrino\n!         #3: muon+tau neutrino             #4 mu and tau antineutrino\n!\n! neutrino_scheme = 3 (six output species)\n! species #1: electron neutrino             #2 electron antineutrino\n!         #3: muon neutrino                 #4 mu antineutrino\n!         #5: tau neutrino                  #6 tau antineutrino\n\nsingle_point_return_all appies Kirchoff's law to the emissivities and\nabsorption cross sections.  This adds an contribution to the\nemissivity from the absorption cross section (and vice-versa).  This\nis explained in BRT06 and explicitly showed in the\nsingle_point_return_all routine. There is a similar routine for the\ninelastic scattering kernels, single_Ipoint_return_all.  This routine\nonly calculates half of the terms, we use symmetry laws to calculate\nthe other half.\n\npoint_example: this program shows examples of how to call the NuLib\nroutines for a single point. Again, the energy spacing is changable in\nnulib.F90, right now it is a 4MeV bin, then a logarithmic spacing\nstarting at 1MeV going to ~300MeV, this may not be the best choice, if\nyou have a better suggestion, let me know, or code up a routine to\ngenerate good energy spacing and send a pull request (?). You must\nspecify an equation of state, NuLib is set up to read in the EOS\ntables on stellarcollapse.org, the filename is set in\npoint_example.F90.  For each EOS you must set the reference mass, this\nis used to convert the density into a number density for the\nscattering and absorption cross sections.\n\nUnlike single_point_return_all, the individual calls to emissivity\n(e.g. return_emissivity_spectra_given_neutrino_scheme) or the cross\nsection routines\n(e.g. return_absorption_opacity_spectra_given_neutrino_scheme) do not\napply Kirchoff's law.\n\nnulibtable_driver: This routine is a driver routine for reading in a\nNuLib table and using a trilinear interpolation (log rho, log temp,\nye) routine to interpolate the emissivities and cross sections to any\nrho,temp,ye. This is extermely useful for transport simulations and\nprevents on the fly calculations of the neutrino interaction terms.\nIt does not currently interpolate in energy, this would be a useful\nfeature to add, it would require slightly adjusting the units of the\nemissivities, in addition to writing a 4th order interpolator.  There\nare several routines available in nulibtable.F90 for accessing the\ntable.  The large number of variables can lead to long times spent in\ninterpolating. I've tried to optimize this but more could be done I'm\nsure.\n\nnulibtable_driver also reads in inelastic kernels and ep-annihilation\nkernels.  two types of symmetries are applied to ensure detailed\nbalence for the inelastic electron scattering.  For the\nep-annihilation, only one symmetry is used, the other, crosses\nneutrino species and it is left to the user if they would like to take\nadvantage of it.\n\nInstallation.\n-------------\n\nIf you are reading this then you are halfway there.  You must set the\nF90 and F90FLAGS compiler variables in the make.inc file in this\ndirectory to point to your Fortran compiler.  Also, you must have HDF5\ncompiled with the _same_ compiler.  This usually means downloading the\nsource from http://www.hdfgroup.org/HDF5/release/obtain5.html,\nconfiguring with your version of:\n\n./configure --enable-fortran FC=ifort --prefix=/Users/evanoc/opt/hdf5-current-ifort12\n\nand then\n\nmake\nmake install\n\nthe HDF5DIR variable in make.inc would then be set to /Users/evanoc/opt/hdf5-current-ifort12\n\nAfter this, a simple make should create three executables in the main\ndirectory, a brief explanation of these is in the section\n`executables' above.\n\nExtras\n------\n\nThere is support in NuLib for using Matthias Hempel's NSE mass\ndistributions available from\nhttp://phys-merger.physik.unibas.ch/~hempel/eos.html.  To enable these\nuse must download his code and tables from his website, place them in\nthe directory src/extra_code_and_tables/ and enable the preprocessor\nflag NUCLEI_HEMPEL.  We use the SFHo table as an example in the code,\nyou can change this by editting nuclei_distribution_helpers.F90\ndirectly.  Please see this file for more details.\n\nA few small changes must be made to xxxx_xxxx_composition_module.f\nas provided by M. Hempel if the weak_rates module (electron-capture\nrates).Primarily a public (non-private) copy of the loaded nuclear\nmasses must be exposed. e.g. for the SFHo EOS, one must add the\nfollowing to the source file:\n---------------------------------------------------\n| double precision, dimension(kmax) :: sfho_mass  |\n|---------------------- & ------------------------|\n| sfho_mass = mass                                |\n---------------------------------------------------\nWe also found that an updated path is needed for the\ncomposition binary included with the module.", 
  "read_at": 1462547477, 
  "description": "open-source neutrino interaction library", 
  "id": 2530603
}