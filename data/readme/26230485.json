{
  "read_at": 1462553776, 
  "description": "Collective Knowledge - small, portable and customizable framework to share artifacts as reusable Python components with JSON API; quickly prototype experimental workflows (such as multi-objective autotuning); automate, crowdsource and reproduce experiments; unify predictive analytics (scikit-learn, R, DNN); enable interactive articles. Demo:", 
  "README.md": "Introduction\r\n============\r\n\r\nCollective Knowledge is our \"swiss knife\" for open, collaborative and reproducible experimentation.\r\nCK is a small, portable and customizable research platform to\r\n* share artifacts as reusable and indexable Python components with unified JSON API and meta information (programs, benchmarks, data sets, tools, predictive models, etc); \r\n* quickly prototype experimental workflows from shared components (such as customizable and multi-objective autotuning for DSL, OpenCL, CUDA, MPI, OpenMP and compiler flags);\r\n* crowdsource experiments across diverse hardware and workloads provided by volunteers, and report \"interesting\" or unexpected behavior;\r\n* unify and abstract access to continuously evolving software across Windows, Linux and Android (tools, programs, libraries);\r\n* use the latest environment for experiments (rather than using quickly outdated virtual images);\r\n* automate, reproduce and crowdsource empirical experiments (using CK JSON-based web services);\r\n* unify access to predictive analytics via unified JSON API and CK web services (scikit-learn, R, DNN, etc);\r\n* enable reproducible and interactive articles. \r\n\r\nProject homepage: \r\n* http://cknowledge.org\r\n* http://cTuning.org\r\n\r\nLicense\r\n=======\r\n* Permissive 3-clause BSD license (see LICENSE.txt file for more details).\r\n\r\nMinimal installation\r\n====================\r\n\r\nThe minimal installation requires:\r\n\r\n* Python >= 2.6 (3.0+ is natively supported) - we suggest Anaconda scientific Python distribution;\r\n* Git command line client.\r\n\r\nOn Ubuntu, you can install these dependencies via\r\n\r\n$ apt-get install python git\r\n\r\nOn Windows, you can download and install these tools from the following sites:\r\n\r\n* Git: https://git-for-windows.github.io\r\n* Minimal Python: https://www.python.org/downloads/windows\r\n* Anaconda scientific Python with all packages: https://www.continuum.io/downloads#_windows\r\n\r\nFor example, you can install shared workflow for collaborative program optimization\r\nwith all related artifacts, and start participating in multi-objective crowdtuning \r\nsimply as following: \r\n\r\n $ git clone https://github.com/ctuning/ck.git ck\r\n\r\n $ export PATH=$PWD/ck/bin:$PATH (on Linux)\r\nor\r\n $ set PATH={CURRENT PATH}\\ck\\bin;%PATH% (on Windows)\r\n\r\n $ ck pull repo:ck-crowdtuning\r\n\r\n $ ck crowdsource experiment (to crowdsource any available experiment scenario on Linux)\r\nor\r\n $ ck crowdtune program --gcc --target_os=mingw-64 (to crowdsource program optimization on Windows via GCC MingW compiler)\r\n\r\nIf you have GCC or LLVM compilers installed, you can start continuously crowd-tune \r\ntheir optimization heuristics in a quiet mode (for example overnight) via\r\n\r\n$ ck crowdtune program --llvm --quiet\r\n\r\n$ ck crowdtune program --gcc --quiet\r\n\r\nThis experimental workflow will be optimizing different shared workloads\r\nfor multiple objectives (execution time, code size, energy, compilation time, etc)\r\nusing all exposed design and optimization knobs, while sending best performing \r\noptimizations to the public CK-based server:\r\n\r\n* http://cTuning.org/crowd-results\r\n* http://cknowledge.org/interactive-report\r\n\r\nCK server will, in turn, perform on-line learning to classify optimization \r\nversus workloads which can be useful for compiler/hardware designers and \r\nperformance engineers (described in more detail in http://arxiv.org/abs/1506.06256 ).\r\n\r\nYou can even participate in collaborative experiments using your Android mobile phone\r\nby installing the following application from the Google Play Store:\r\n\r\n* https://play.google.com/store/apps/details?id=openscience.crowdsource.experiments\r\n\r\nYou can find already shared artifacts and repositories here:\r\n* List of shared repositories: https://github.com/ctuning/ck/wiki/Shared_repos\r\n* List of shared modules: https://github.com/ctuning/ck/wiki/Shared_modules\r\n\r\nPlease check out CK getting started guide and CK wiki for further details:\r\n* https://github.com/ctuning/ck/wiki/Getting_started_guide_basic\r\n* https://github.com/ctuning/ck/wiki\r\n\r\nRelated initiatives\r\n===================\r\n\r\n* Artifact Evaluation for computer systems' conferences: http://cTuning.org/ae\r\n* New publication model with the community-driven public reviewing: http://adapt-workshop.org\r\n\r\n* http://arxiv.org/abs/1506.06256\r\n* http://bit.ly/ck-date16\r\n* http://hal.inria.fr/hal-01054763\r\n\r\nCK-powered projects\r\n===================\r\n* https://github.com/ctuning/ck/wiki/Summary_of_projects\r\n\r\nMotivation\r\n==========\r\n* https://github.com/ctuning/ck/wiki/Motivation\r\n\r\nAuthors\r\n=======\r\n* Grigori Fursin, http://fursin.net\r\n* Anton Lokhmotov, https://www.hipeac.net/~anton\r\n\r\nQuestions/comments/discussions?\r\n===============================\r\nPlease, use our mailing lists:\r\n* Open, collaborative and reproducible R&D including knowledge preservation, sharing and reuse:\r\n  http://groups.google.com/group/collective-knowledge\r\n* Software and hardware multi-objective (performance/energy/accuracy/size/reliability/cost)\r\n  benchmarking, autotuning, crowdtuning and run-time adaptation: http://groups.google.com/group/ctuning-discussions\r\n\r\nPublications\r\n============\r\nConcepts has been described in the following publications:\r\n\r\n* http://arxiv.org/abs/1506.06256 (CPC'15)\r\n* http://bit.ly/ck-date16 (DATE'16)\r\n* http://cknowledge.org/interactive-report\r\n* http://hal.inria.fr/hal-01054763 (Journal of Scientific Programming'14)\r\n* http://arxiv.org/abs/1406.4020 (TRUST'14 @ PLDI'14)\r\n* https://hal.inria.fr/inria-00436029 (GCC Summit'09)\r\n\r\nIf you found CK useful and/or interesting, you are welcome\r\nto reference any of the above publications in your articles\r\nand reports. You can download above references in BibTex \r\nformat here:\r\n\r\n* https://raw.githubusercontent.com/ctuning/ck-guide-images/master/collective-knowledge-refs.bib\r\n\r\nTestimonials and awards\r\n=======================\r\n* ARM and dividiti are using CK to accelerate computer engineering (2016, https://www.hipeac.net/assets/public/publications/newsletter/hipeacinfo45.pdf , page 17)\r\n* HiPEAC technology transfer award (2015, http://www.hipeac.net)\r\n\r\nAcknowledgments\r\n===============\r\n\r\nCK development is coordinated by the non-profit cTuning foundation\r\n(cTuning.org). We would like to thank the EU TETRACOM 609491 project\r\n(www.tetracom.eu) for initial funding and dividiti (www.dividiti.com)\r\nfor continuing support. We are also extremely grateful to all volunteers\r\nfor their valuable feedback and contributions.\r\n", 
  "id": 26230485
}