{
  "read_at": 1462547440, 
  "description": "Density Based Clustering (DeBaCl) Toolbox", 
  "README.md": "DeBaCl: DEnsity-BAsed CLustering\n================================\n[![Travis CI](https://travis-ci.org/CoAxLab/DeBaCl.svg?branch=dev)](https://travis-ci.org/CoAxLab/DeBaCl)\n[![Pending Pull-Requests](http://githubbadges.herokuapp.com/CoAxLab/DeBaCl/pulls)](https://github.com/CoAxLab/DeBaCl/pulls)\n[![Github Issues](http://githubbadges.herokuapp.com/CoAxLab/DeBaCl/issues)](https://github.com/CoAxLab/DeBaCl/issues)\n[![License](http://img.shields.io/:license-bsd-blue.svg)](http://opensource.org/licenses/BSD-3-Clause)\n[![Docs](https://readthedocs.org/projects/debacl/badge/?version=master)](http://debacl.readthedocs.org/en/master/)\n\nDeBaCl is a Python library for **density-based clustering** with **level set trees**.\n\nLevel set trees are a statistically-principled way to represent the topology of\na probability density function. This representation is particularly useful for\nseveral core tasks in statistics:\n\n  - clustering, especially for data with multi-scale clustering behavior\n  - describing data topology\n  - exploratory data analysis\n  - data visualization\n  - anomaly detection\n\nDeBaCl is a Python implementation of the Level Set Tree method, with an\nemphasis on computational speed, algorithmic simplicity, and extensibility.\n\nLicense\n-------\nDeBaCl is available under the 3-clause BSD license.\n\nInstallation\n------------\nDeBaCl is currently compatible with Python 2.7 only. Other versions may work, but *caveat emptor*; at this time DeBaCl is only officially tested on Python 2.7. The package can be downloaded and installed from the [Python package installer](https://pypi.python.org/pypi/debacl/). From a terminal:\n\n```bash\n$ pip install debacl\n```\n\nIt can also be installed by cloning this GitHub repo. This requires updating the Python path to include the cloned repo. On linux, this looks something like:\n\n```bash\n$ git clone https://github.com/CoAxLab/DeBaCl/\n$ export PYTHONPATH='DeBaCl'\n```\n\nDependencies\n------------\nAll of the dependencies are Python packages that can be installed with either conda or pip. DeBaCl 1.0 no longer depends on igraph, which required tricky manual installation.\n\n**Langauges:**\n  - Python 2.7\n  - (coming soon: Python 3.4)\n\n**Required packages:**\n  - numpy\n  - networkx\n  - prettytable\n\n**Strongly recommended packages**\n- matplotlib\n- scipy\n\n**Optional packages**\n- scikit-learn\n\nQuickstart\n----------\n<h4>Construct the level set tree</h4>\n```python\nimport debacl as dcl\nfrom sklearn.datasets import make_moons\n\nX = make_moons(n_samples=100, noise=0.1, random_state=19)[0]\n\ntree = dcl.construct_tree(X, k=10, prune_threshold=10)\nprint tree\n```\n```no-highlight\n+----+-------------+-----------+------------+----------+------+--------+----------+\n| id | start_level | end_level | start_mass | end_mass | size | parent | children |\n+----+-------------+-----------+------------+----------+------+--------+----------+\n| 0  |    0.000    |   0.196   |   0.000    |  0.220   | 100  |  None  |  [1, 2]  |\n| 1  |    0.196    |   0.396   |   0.220    |  0.940   |  37  |   0    |    []    |\n| 2  |    0.196    |   0.488   |   0.220    |  1.000   |  41  |   0    |    []    |\n+----+-------------+-----------+------------+----------+------+--------+----------+\n```\n\n<h4>Plot the level set tree</h4>\nClusters are represented by the vertical line segments in the dendrogram. In this example the vertical axis is plotted on the _density_ scale, so that the lower endpoint of a cluster's branch is at its _start_level_ and the upper endpoint is at its _end_level_ (see the table above), and the length of the branch is the _persistence_ of the cluster.\n```python\nfig = tree.plot(form='density')[0]\nfig.show()\n```\n<!--![Tree figure](docs/readme_tree.png)-->\n<img src=\"docs/readme_tree.png\" height=\"480px\" />\n\n<h4>Query the level set tree for cluster labels</h4>\n```python\nimport matplotlib.pyplot as plt\n\nlabels = tree.get_clusters(method='leaf')  # each leaf node is a cluster\nclusters = X[labels[:, 0], :]\n\nfig, ax = plt.subplots()\nax.scatter(X[:, 0], X[:, 1], c='black', s=40, alpha=0.4)\nax.scatter(clusters[:, 0], clusters[:, 1], c=labels[:, 1], s=80, alpha=0.9,\n           cmap=plt.cm.winter)\nax.set_xlabel('x0')\nax.set_ylabel('x1', rotation=0)\nfig.show()\n```\n<!--![Clusters](docs/readme_clusters.png)-->\n<img src=\"docs/readme_clusters.png\" height=\"480px\" />\n\n\nDocumentation\n-------------\n- [API documentation](http://debacl.readthedocs.org/en/master/)\n- [Example jupyter notebooks](examples) (in progress)\n\nRunning unit tests\n------------------\nFrom the top level of the repo:\n\n```bash\n$ nosetests -s -v debacl/test\n```\n\nReferences\n----------\n- Chaudhuri, K., & Dasgupta, S. (2010). [Rates of Convergence for the Cluster        \n  Tree](http://www.cse.ucsd.edu/sites/cse/files/cse/assets/research/theory/ChaudhuriDasgupta_2010.pdf).\n  In Advances in Neural Information Processing Systems 23 (pp. 343-351). Vancouver, BC.\n\n- Kent, B. P., Rinaldo, A., Yeh, F.-C., & Verstynen, T. (2014). [Mapping\n  Topographic Structure in White Matter Pathways with Level Set \n  Trees](http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0093344#pone-0093344-g009).\n  PLoS ONE.\n\n- Kent, B. P., Rinaldo, A., & Verstynen, T. (2013). [DeBaCl: A Python Package\n  for Interactive DEnsity-BAsed CLustering](http://arxiv.org/abs/1307.8136).\n  arXiv preprint:1307.8136.\n\n- Kent, B.P. (2013). [Level Set Trees for Applied Statistics](http://www.scribd.com/doc/242026196/Level-Set-Trees-for-Applied-Statistics).\n", 
  "id": 6496168
}