{
  "README": "--------------------------------------------------------------------------------\nREADME : EXPRESS\n--------------------------------------------------------------------------------\n\neXpress is a streaming DNA/RNA sequence quantification tool. It has initially \nbeen tested for RNA-Seq transcriptome quantification but can be used in any \napplication where abundances of target sequences need to be estimated from short \nreads sequenced from them.\n\nMore details, installation instructions, and the manual can be found at \nhttp://bio.math.berkeley.edu/eXpress/\n\n--------------------------------------------------------------------------------\nI.   Authors:\n--------------------------------------------------------------------------------\n\nThe methods and algorithms used in eXpress were developed by Adam Roberts and \nLior Pachter. Adam Roberts designed and wrote eXpress. \n\n--------------------------------------------------------------------------------\nII.  Requirements:\n--------------------------------------------------------------------------------\n\neXpress is a standalone tool that requires gcc 4.0 or greater, and runs on Linux \nMacintosh OS X, and Windows.  \n\nIt depends on Boost (http://www.boost.org), \nBamTools (https://github.com/pezmaster31/bamtools),\nZLIB (http://zlib.net/),\nand the Microsoft Visual C++ Runtime Library (Windows only) \n(http://www.microsoft.com/download/en/details.aspx?id=5555).\n\n\n--------------------------------------------------------------------------------\nIII. Learn More (Installation, Manual, etc.):\n--------------------------------------------------------------------------------\n\nInstallation steps, tutorial, manual, documentation, etc. are all available \nthrough the eXpress website:\nhttp://bio.math.berkeley.edu/eXpress/\n\nJoin the user group and mailing list to stay informed of updates and announcements:\nhttp://groups.google.com/group/express-users\n\n--------------------------------------------------------------------------------\nIV.  License:\n--------------------------------------------------------------------------------\n\neXpress is distributed under the Artistic License 2.0.\nCopyright (c) 2011-2013 Adam Roberts and Lior Pachter.\n\nSee included file LICENSE for details.\n\n--------------------------------------------------------------------------------\nV.   Acknowledgements:\n--------------------------------------------------------------------------------\n\n* Cole Trapnell, primary developer of Cufflinks\n* Derek Barnett, author of the BamTools API\n\n--------------------------------------------------------------------------------\nVI.  References:\n--------------------------------------------------------------------------------\n\nRoberts A (2013). Thesis: Ambiguous fragment assignment for high-throughput\nsequencing experiments. EECS Department, University of California, Berkeley.\n\nRoberts A and Pachter L (2012). Streaming fragment assignment for real-time\nanalysis of sequencing experiments. Nature Methods.\n\neXpress builds upon many ideas, including some proposed in the following papers:\n\nTrapnell C, Williams BA, Pertea G, Mortazavi AM, Kwan G, van Baren MJ, \nSalzberg SL, Wold B and Pachter L (2010). Transcript assembly and quantification \nby RNA-Seq reveals unannotated transcripts and isoform switching during cell \ndifferentiation. Nature Biotechnology.\n\nCappe O and Moulines E (2009).  On-line expectation-maximization algorithm for \nlatent data models. Journal of the Royal Statistical Society.\n\nPachter, L (2011). Models for transcript quantification from RNA-Seq. \narXiv:1104.3889v2. \n\nRoberts A, Trapnell C, Donaghey J, Rinn JL and Pachter L (2011). Improving \nRNA-Seq expression estimates by correcting for fragment bias. Genome Biology. \n\nLi B and Dewey C (2011). RSEM: accurate transcript quantification from RNA-Seq \ndata with or without a reference genome. BMC Bioinformatics. \n\n--------------------------------------------------------------------------------\nVII. CONTACT:\n--------------------------------------------------------------------------------\n\nPlease send all questions, comments, and suggestions to ask.xprs@gmail.com.", 
  "read_at": 1462556811, 
  "description": "Streaming fragment assignment and quantification for high-throughput sequencing.", 
  "README.devel.org": "#+TITLE:    Developer's Guide\n#+AUTHOR:   Harold Pimentel\n\n* The build System\n** Running CMake\n   - You should almost always make a separate build tree outside of the main\n     tree. For example, if you have directory 'project' with 'project/src' etc.,\n     you should make a directory outside of project called 'project\\_build'. You\n     should change to the new directory and run CMake there.\n\n        mkdir project\\_build\n        cd project\\_build\n        cmake ../project\n\n** Making projects\n*** Making an Xcode project\n    - Change to your build directory and run:\n\n        cmake -G Xcode ../project\n\n      Your new Xcode project should be in 'project\\_build/project.xcodeproj'\n\n*** Making an Eclipse CDT project\n    - Change to your build directory and run:\n\n        cmake -G \"Eclipse CDT4 - Unix Makefiles\" -D CMAKE_BUILD_TYPE=Debug ../project\n\n      Your new Eclipse CDT project is stored in 'project\\_build/.project'. In\n      Eclipse, go to Import -> General -> Existng Projects into Workspace ->\n      Select root directory and choose the 'project\\_build' directory.\n      \n", 
  "id": 14261886
}