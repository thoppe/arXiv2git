{
  "read_at": 1462549307, 
  "description": "Mixing IBAMR", 
  "README.md": "# MixingIBAMR\n\nDiffusive mixing in binary fluid mixtures in the presence of thermal fluctuations\nAleksandar Donev (donev@courant.nyu.edu), Courant Institute of Mathematical Sciences\nand Boyce Griffith (boyceg@gmail.com), University of North Carolina, Chapel Hill\n\nThis software relies on the IBAMR library (https://github.com/IBAMR) for the fluid dynamics solvers.\n\nThese codes implement numerical methods for simulating giant nonequilibrium fluctuations \nin binary fluid mixtures, as described in a sequence of papers. The primary source is \nthe description of the temporal integrators and tests described in (see doc/MultiscaleIntegrators.pdf)\n\n[1] \"Multiscale temporal integrators for fluctuating hydrodynamics\"\nS. Delong, Y. Sun, B.E. Griffith, E. Vanden-Eijnden and A. Donev\nPhys. Rev. E, 90, 063312, 2014, http://arxiv.org/abs/1410.0240.\n(note: please use the doc or ArXiv file instead of PRE since some equation typos have been fixed)\n\nIn particular, these codes solve either the:\n1) Inertial equations (63,64) in this paper, or\n2) Overdamped (inertia-free) equations (65)\n\nNote: Make sure you are using the correct main*.C (inertial or overdamped) for each input file (see below).\nThe temporal integrators here are modified from the basic IBAMR library because we often need to swap\nthe order in which velocity and concentration are updated. This is done by partially reusing the exisiting\ntemporal integrators in IBAMR, and partially updating them. The result is that setting the correct options\nand understanding their interactions is quite complex even for ourselves.\nIf you want to use or understand this code make sure to read doc/README carefully.\n\nThe spatial discretization, and in particular details about the handling of the stochastic forcing\nin the fluid equation, can be found in:\n\n[2] \"Staggered Schemes for Fluctuating Hydrodynamics\"\nF. Balboa and J. Bell and R. Delgado-Buscalioni and A. Donev and T. G. Fai and B. Griffith and C. Peskin\nSIAM J. Multiscale Modeling and Simulation, 10(4):1369-1408, 2012, http://arxiv.org/abs/1108.5188.\n(but note that this code only implements the incompressible equations, see fluam code for compressible)\n\n--------------------\nA. The code main.C\n\nIs meant to provide integrators for both overdamped and inertial in the case when there is no gravity, i.e.,\nwhen the concentration/temperature (scalar) equation does not feed back into the velocity equation\nIn this case we can avoid a second fluid solve and gain efficiency while still being second-order accurate.\nThis code also provides access to the default IBAMR integrators for advection-diffusion, which\ncan be second-order accurate also in the presence of both inertia and gravity.\nFor overdamped limit with gravity see main_PC.C below.\n\ni) In the overdamped case, in the absence of gravity,\nset use_split_time_stepping=TRUE and CENTER_U_ADV_DIFF=FALSE.\nThis implements a version of Algorithm 3 in paper [1] streamlined for the case g=0\nby avoiding the second Stokes solve, which is identical to the first.\nNote that the Soret flux is handled implicitly in the concentration solver by modifying the Helmholtz solver.\nMore physical details as well as comparisons with actual experiments can be found in:\n\n[3] \"Dynamic scaling for the growth of non-equilibrium fluctuations during thermophoretic diffusion in microgravity\"\nR. Cerbino, Y. Sun, A. Donev and A. Vailati\nSubmitted, 2015, http://arxiv.org/abs/1502.03693.\n\nSee examples/GRADFLEX-transient-?d.input for dynamical evolution of fluctuations.\nFor steady-state spectrum calculations (static structure factor), see\nexamples/GRADFLEX-dynamic-3d.input\n\nii) For inertial, if there is no gravity, set CENTER_U_ADV_DIFF=TRUE, which\ngives an algorithm similar to that proposed in paper [2] but simplified for g=0.\nSee examples/GRADFLEX-temperature-2d.input for temperature equation in paper [3].\n\niii) For inertial, if there is gravity (the same of course also works if g=0), \nset use_split_time_stepping=FALSE to obtain Algorithm 1 in paper [1],\nas detailed in Section V.B in paper [1] above, see examples/THN-C12-20K-inertial.input.\nMore physical details as well as comparisons with actual experiments can be found in:\n\n[4] \"Slowing-down of non-equilibrium concentration fluctuations in confinement\"\nC. Giraudet and H. Bataller and Y. Sun and A. Donev and J. M. O. de Zrate and F. Croccolo\nSubmitted, 2015, http://arxiv.org/abs/1410.6524.\n\n--------------------\nB. Overdamped code mainPC.C\n\nIs meant to provide second-order accuracy also for the overdamped limit in the presence of gravity.\nIt solves the overdamped equations using Algorithm 3 in paper [1].\nSee examples/THN-C12-20K-overdamped.input for a comparison with inertial, as discussed in paper [4].\n", 
  "id": 36744156
}