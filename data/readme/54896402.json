{
  "read_at": 1462555791, 
  "description": "Large Data Analysis Project", 
  "README.md": "# Group 3 Sentiment Analysis\nLarge Data Analysis Project\n\n## Get the data\nThe Large Movie Review Dataset can be downloaded here: http://ai.stanford.edu/~amaas/data/sentiment/  \nExtract the data so that aclImdb/ is in the root directory of the project (sentiment_analysis/aclImdb)  \n\n### A good starting paper\nI used this paper (http://arxiv.org/pdf/1305.6143.pdf) to get a start on a lot of the code/modeling, including the negation.\n\n## Build the training/testing datasets\nRun from the main directory (\"python build_saved_data_files.py\" will do this)\n```python\ntrn_inputs, trn_outputs, trn_word_list = \n  preprocessing.build_data_target_matrices(\"aclImdb/train/pos/\", \"aclImdb/train/neg/\", save_data=True)\ntst_inputs, tst_outputs, _ = \n  preprocessing.build_test_data_target_matrices(\"aclImdb/test/pos/\", \"aclImdb/test/neg/\", trn_word_list)\n```\nThis will create training_data.pkl and testing_data.pkl  \nThen you can train and evaluate a model using the following code (also in naive_bayes.py):  \n```python\nfrom sklearn.naive_bayes import BernoulliNB\nfrom sklearn.metrics import confusion_matrix\n\ninputs, outputs, _ = pickle.load(open(\"training_data.pkl\", 'rb'))\ntest_inputs, test_outputs, _ = pickle.load(open(\"testing_data.pkl\", 'rb'))\n\nmodel = BernoulliNB()\nmodel.fit(inputs, outputs.ravel())\nprint(confusion_matrix(test_outputs, model.predict(test_inputs)))\n```\n\n`model.fit(inputs, outputs.ravel())` should work with any of the sklearn models that support sparse matrices.  \nWe should also be able to use any of the sklearn feature selection techniques on our data, which we'll\ndefinitely want to do. For example, \"the\", \"and\", \"or\" will probably be extremely common, but don't give much information.\n", 
  "id": 54896402
}