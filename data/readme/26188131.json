{
  "read_at": 1462553814, 
  "description": "Source for our paper on multiband periodograms.", 
  "README.md": "Mutiband Lomb-Scargle Periodograms\n==================================\nThis repository contains the source for our multiband periodogram paper.\nIt makes use of the [gatspy](http://github.com/jakevdp/gatspy/) package,\nwhich has been developed concurrently.\nThe paper has been submitted to the Astrophysical Journal, and a preprint is available on [arXiv](http://arxiv.org/abs/1502.01344).\nTo see a current build of the paper from the master branch of this repository,\nrefer to http://jakevdp.github.io/multiband_LS (powered by [gh-publisher](https://github.com/ewanmellor/gh-publisher)).\n\nFeel free to submit comments or feedback via the Issues tab on this repository.\n\n\nReproducing the Paper\n---------------------\nThe LaTeX source of the paper, including all figure pdfs, is in the ``writeup`` directory. The code to reproduce the analysis and figures in the paper is in the ``figures`` directory.\n\nTo reproduce the figures, first install the following packages (Python 2 or 3):\n\n- Standard Python scientific stack: ([IPython](http://ipython.org), [numpy](http://numpy.org), [scipy](http://scipy.org), [matplotlib](http://matplotlib.org), [scikit-learn](http://scikit-learn.org), [pandas](http://pandas.pydata.org/))\n- [seaborn](http://stanford.edu/~mwaskom/software/seaborn/) for plot styles.\n- [astroML](http://astroML.org) for general astronomy machine learning tools.\n- [gatspy](http://github.com/astroML/gatspy) for astronomical time-series analysis.\n- [supersmoother](http://github.com/jakevdp/supersmoother) for the supersmoother algorithm used by ``gatspy``.\n\nWith [conda](http://conda.pydata.org/miniconda.html), a new environment meeting these requirements can be set up as follows:\n\n```\n$ conda create -n multibandLS python=3.4 ipython-notebook numpy scipy matplotlib scikit-learn pandas seaborn pip\n$ source activate multibandLS\n$ pip install astroML gatspy supersmoother\n```\n\nOnce these packages are installed, navigate to the ``figures`` directory and run any of the ``fig*.py`` scripts. For example, to create figure 1, type\n```\n$ cd figures\n$ python fig01_basic_example.py\n```\n\nSeveral of the figures require the results of long computations. These results are cached as numpy binary files in ``figures/LSSTsims/`` and ``figures/S82sims/``. Code to recompute these results in parallel is in the ``compute_results.py`` script in each of these directories. Note that the full computation for these takes several dozen CPU hours, but is trivially parallelizable with IPython parallel (see scripts for details).\n", 
  "id": 26188131
}