{
  "read_at": 1462550722, 
  "description": "Python implementation of graphs.", 
  "README.md": "graphs-dict\n===========\n\nPython implementation of graph data structures and algorithms is presented. \nThe minimal graph interface is defined together with several \nclasses implementing this interface. \nGraph nodes can be any hashable Python objects. \nDirected edges are instances of the Edge class. \nGraphs are instances of the Graph class (several versions).\nMultigraphs are instances of the MultiGraph class.\nMany algorithms are implemented using a unified approach. \nThere are separate classes and modules devoted to different algorithms.\n\nReferences\n----------\n\n[1] A. Kapanowski and L. Galuszka, *Weighted graph algorithms with Python*. \nhttp://arxiv.org/abs/1504.07828 [draft]\n\nA. Kapanowski and L. Galuszka, *Weighted graph algorithms with Python*. \nThe Python Papers 11, 3 (2016). \nhttp://ojs.pythonpapers.org/index.php/tpp/article/view/270 [final version]\n\nContributors\n------------\n\nAndrzej Kapanowski (project leader)\n\nLukasz Galuszka (MST, shortest paths, flow)\n\nLukasz Malinowski (matching, Eulerian graphs, graph coloring, bipartite graphs)\n\nPawel Motyl (multigraphs, graph coloring, independent sets)\n\nPiotr Szestalo (Hamiltonian graphs, TSP, tournaments)\n\nKacper Dziubek (planarity testing)\n\nSandra Pazyniowska (graph drawing)\n\nWojciech Sarka\n\nIgor Samson (graph coloring)\n\nDariusz Zdybski (cliques)\n\nAleksander Krawczyk (Halin graphs, wheel graphs)\n\nEOF\n", 
  "id": 19110380
}