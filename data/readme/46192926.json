{
  "read_at": 1462554793, 
  "description": "Graph-based clustering using the inverse power method for nonlinear eigenproblems", 
  "README.md": "# 1-Spectral clustering\r\n\r\nThis package contains a Matlab implementation of *1-Spectral Clustering*.\r\nGiven a graph with weight matrix W, the *inverse power method (IPM)* for \r\nnonlinear eigenproblems is used to compute a non-constant eigenvector \r\nof the graph 1-Laplacian, which then yields a bipartition of the graph. \r\nA multipartitioning is then obtained using a recursive splitting scheme.\r\n\r\nCurrent version: V1.1\r\n\r\n\r\n\r\n## Installation\r\n\r\nThe implementation uses a mex-file to solve the inner problem of the\r\nIPM. Compile it using \r\n\r\n    mex -largeArrayDims solveInnerProblem.cpp \r\n\r\nin the matlab command line.\r\n\r\n\r\n\r\n## Usage\r\n\r\n    [clusters,cuts,cheegers] = OneSpectralClustering(W,crit,k,numOuter,numInner,verbosity);\r\n\r\n#### Input \r\n    \r\n    W            Sparse weight matrix. Has to be symmetric.\r\n    crit         The multipartition criterion to be optimized. Available \r\n                 choices are\r\n                        'ncut' - Normalized Cut, \r\n                        'ncc' - Normalized Cheeger Cut,\r\n                        'rcut' - Ratio Cut, \r\n                        'rcc' - Ratio Cheeger Cut\r\n    k            number of clusters\r\n\r\n\r\n#### Input (optional)\r\n\r\nIf no additional parameters are specified, the multipartitioning scheme\r\nis performed once, where each subpartitioning problem is initialized with\r\nthe second eigenvector of the standard graph Laplacian.\r\n\r\nThe quality of the obtained partitioning can be improved by performing \r\nadditional runs of the multipartitioning scheme (parameter numOuter)\r\nwith multiple random initializations at each level (parameter numInner).\r\n\r\n\r\n    numOuter    number of additional times the multipartitioning scheme is \r\n                performed (default is 0); \r\n    numInner    for the additional runs of the multipartitioning scheme: \r\n                number of random initializations at each level (default is 0).\r\n    verbosity   Controls how much information is displayed. (Levels 0-3,\r\n                default is 2).\r\n\r\n#### Output\r\n    \r\n    clusters    mx(k-1) matrix containing in each column the computed\r\n                clustering for each partitioning step.\r\n    cuts        (k-1)x1 vector containing the Ratio/Normalized Cut values after \r\n                each partitioning step.\r\n    cheegers    (k-1)x1 vector containing the Ratio/Normalized Cheeger Cut \r\n                values after each partitioning step.\r\n\r\nThe final clustering is obtained via clusters(:,end), the corresponding \r\ncut/cheeger values via cuts(end), cheegers(end).\r\n\r\n\r\n\r\n## References\r\n\r\nM. Hein and T. Buehler.\r\n*An Inverse Power Method for Nonlinear Eigenproblems with Applications \r\nin 1-Spectral Clustering and Sparse PCA*.\r\nIn Advances in Neural Information Processing Systems 23 (NIPS 2010).\r\n(Extended version available online at http://arxiv.org/abs/1012.0774) \r\n\r\n\r\n \r\n## License\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nIf you use this code for your publication, please include a reference \r\nto the paper \"An inverse power method for nonlinear eigenproblems with \r\napplications in 1-spectral clustering and sparse PCA\".\r\n \r\n \r\n\r\n## Contact\r\n\r\nCopyright 2010-11 Thomas Buhler and Matthias Hein\r\n(tb/hein@cs.uni-saarland.de). \r\nMachine Learning Group, Saarland University, Germany\r\n(http://www.ml.uni-saarland.de).\r\n", 
  "id": 46192926
}