{
  "README": "This is a package which implements some utilities useful for modelling and \nanalyzing simulation output of PDRs.\n\nPrerequisites\n=============\namuse  - mpich\nPyQt4\nipython\n\n\nInstalling the PDR code\n=======================\nThe PDR code should be copied into:\n      amuse/src/amuse/community/pdr\n\nCompiling the PDR code\n======================\nThe PDR code can be compiled using:\n    ~> cd amuse/src/amuse/community/pdr\n    ~> make all\nThe generates the libpdr.a library\n\nSetting up the working environment\n==================================\nThe path to ismcpak should be added to the PYTHONPATH environment variable. For\nbash, the following line should be added:\n\n    export PYTHONPATH=/PATH/TO/ismcpak:$PYTHONPATH\n   \nto tcsh :\n\n    setenv PYTHONPATH /PATH/TO/ismcpak:$PYTHONPATH\n\nRunning the code\n================\n  Basic test - single model\n  -------------------------\n  The PDR code can only be run through the AMUSE ( http://amusecode.org ).\n  Depending on the mpi environment installed with AMUSE, it might be \n  necessary to launch the mpd deamon before executing either:\n  \n    ~> mpirun -np 1 python run_singleMesh.py\n    \n  or via\n  \n    ~> python run_singleMesh.py\n\nRunning a Grid of models\n========================\n\n# setup the working environment variables\n1) source setdev\n\n# install the pdr code into amuse (make sure the correct \n# path of amuse is set in setenv\n2) make pdr_install\n\n# after these two steps, the tests \n   run_singleMesh.py\n   chemical_network_pdr_code.py\nshould run without errors\n\n\n3) to run a grid, use the following under ismcpak:\n   ~>  ipython --pylab=qt tests/run_oneSidedGrid.py\n\n4) after the model data is written to \n      tests/oneSidedGrid/meshes\n   we need to construct the database files .db using constructReadArchive.py\n   ~> ipython --pylab=qt constructReadArchive.py\n\n   after the database is constructed we must have the file \n         meshes.db  meshes.db.info\n   in the output directory and a message \n         archive integrity test passed\n   must be displayed\n\n5) after creating the database, a reference file must be generated which \n   stores information about the parameters which have been used in \n   generating the data. A template of this file is located under\n        runs/tests/templateDir/used_params.py\n   where the parameters used by run_oneSidedGrid.py should be filled in\n   by hand. Once the values are changed :\n       ~> python used_parms.py\n   generates the pickle file\n\n6) set the desired display parameters in analyzeArchive.py and invoke :\n     ~> ipython --pylab=qt analyzeArchive.py\n\n7) to generate the radex databases, the bottom part of analyzeArchive.py should be enabled to\n   allow radex databases to be computed and written do disk. Set the desired values of \n   Av to compute and the species whose emission will be computed and re-run: \n     ~> ipython --pylab=qt analyzeArchive.py\n   As a check, the data in \n        tests/oneSidedGrid/radexDbs\n   should have directories with the Avs we have set and each directory should \n   have files for each species we have specified.\n\n8) after producing the radex database files, we can convert that data to ascii data using :\n     ~> ipython ismcpak2Ascii.py   \n   \nDisclaimer\n==========\nTHIS SOFTWARE IS PROVIDED UNDER THE GPL LICENSE BY THE COPYRIGHT HOLDERS AND \nCONTRIBUTORS \"AS IS\" AND DOES NOT EXPRESS OR PROVIDE IMPLIED WARRANTIES, \nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND F\nITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT \nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT \nOF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS \nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT\n, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY \nWAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH \nDAMAGE. \n\nSee LICENSE.txt for more information about the GPL license.\n\nPlease cite the following papers if any part of this package is used in your \nresearch. \n\n   Kazandjian, M. V., Meijerink, R., Pelupessy, I., Israel, F. P., Spaans, M.,\n   arXiv:1403.7000\n\n   Kazandjian, M. V., Meijerink, R., Pelupessy, I., Israel, F. P., Spaans, M.,\n   2012, A&A, 542, A65, 26\n\n   Meijerink, R., Spaans, M., & Israel, F. P. 2007, A&A, 461, 793\n\n   Meijerink, R. & Spaans, M. 2005, A&A, 436, 397\n\n\n \n", 
  "read_at": 1462558503, 
  "description": "", 
  "id": 23897293
}