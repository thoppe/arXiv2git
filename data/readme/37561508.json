{
  "read_at": 1462549569, 
  "description": "Instrumented version of gunrock", 
  "README.md": "Gunrock documentation\n=====================\n\nIntroduction\n============\n\nGunrock is a CUDA library for graph-processing designed specifically for the GPU. It uses a high-level, bulk-synchronous, data-centric abstraction focused on operations on a vertex or edge frontier. Gunrock achieves a balance between performance and expressiveness by coupling high performance GPU computing primitives and optimization strategies with a high-level programming model that allows programmers to quickly develop new graph primitives with small code size and minimal GPU programming knowledge. For more\ndetails, please read our paper on arxiv:\n[Gunrock: A High-Performance Graph Processing Library on the GPU](http://arxiv.org/abs/1501.05387) and check out the [Publications](https://github.com/gunrock/gunrock#publications) section.\n\nHome Page\n---------\n\nHomepage for Gunrock: <http://gunrock.github.io/>\n\nGetting Started with Gunrock\n----------------------------\nFor Frequently Asked Questions, see [FAQ](http://gunrock.github.io/gunrock/doc/0.2/faq.html).\n\nFor information on building Gunrock, see [Building Gunrock](http://gunrock.github.io/gunrock/doc/0.2/building_gunrock.html)\nand refer to [Operating System Support and Requirements](https://github.com/gunrock/gunrock#operating-system-support-and-requirements).\n\nThe \"tests\" subdirectory included with Gunrock has a comprehensive test\napplication for all the functionality of Gunrock.\n\nFor the programming model we use in Gunrock, see [Programming Model](http://gunrock.github.io/gunrock/doc/0.2/programming_model.html).\n\nWe have also provided a code walkthrough of a [simple example](http://gunrock.github.io/gunrock/doc/0.2/simple_example.html) and [annotated code](http://gunrock.github.io/gunrock/doc/annotated_primitives/annotated_primitives.html) for two typical graph primitives.\n\nReporting Problems\n==================\n\nTo report Gunrock bugs or request features, please file an issue\ndirectly using [Github](https://github.com/gunrock/gunrock/issues).\n\n<!-- TODO: Algorithm Input Size Limitations -->\n\nOperating System Support and Requirements\n=========================================\n\nThis release (0.2) has only been tested on Linux Mint 15 (64-bit) with\nCUDA 5.5, 6.0, and 6.5 installed. We expect Gunrock to build and run correctly on\nother 64-bit and 32-bit Linux distributions, Mac OS, and Windows.\n\nRequirements\n------------\n\nGunrock has not been tested with any CUDA version < 5.5.\n\nSeveral graph primitives' CPU validation code uses Boost Graph Library v1.53.0.\n\nCUDA\n====\n\nGunrock is implemented in [CUDA C/C++](http://developer.nvidia.com/cuda).  It\nrequires the CUDA Toolkit. Please see the NVIDIA\n[CUDA](http://developer.nvidia.com/cuda-downloads) homepage to download CUDA as\nwell as the CUDA Programming Guide and CUDA SDK, which includes many CUDA code\nexamples. Please refer to [NVIDIA CUDA Getting Started Guide for\nLinux](http://docs.nvidia.com/cuda/cuda-getting-started-guide-for-linux) for\ndetailed information.\n\nPublications\n============\nYangzihao Wang, Andrew Davidson, Yuechao Pan, Yuduo Wu, Andy Riffel, and John D. Owens. **Gunrock: A High-Performance Graph Processing Library on the GPU.** CoRR, abs/1501.05387v2), March 2015. [arXiv](http://arxiv.org/abs/1501.05387v2)\n\nCarl Yang, Yangzihao Wang, and John D. Owens. **Fast Sparse Matrix and Sparse Vector Multiplication Algorithm on the GPU.** In Graph Algorithms Building Blocks, GABB 2015, May 2015. [http](http://www.escholarship.org/uc/item/1rq9t3j3)\n\nAfton Geil, Yangzihao Wang, and John D. Owens. **WTF, GPU! Computing Twitter's Who-To-Follow on the GPU.** In Proceedings of the Second ACM Conference on Online Social Networks, COSN '14, pages 63-68, October 2014. [DOI](http://dx.doi.org/10.1145/2660460.2660481) | [http](http://escholarship.org/uc/item/5xq3q8k0)\n\nRoad Map\n========\n\n - Framework: The structure of the operator code in Gunrock may change\n   significantly during near-term future development. Generally we\n   want to find the right set of operators that can abstract most\n   graph primitives while delivering high performance.\n\n - Primitives: Our near-term goal is to implement maximal independent set algorithm and graph matching algorithm, build better support for bipartite graph algorithms, and explore community detection algorithms. The long term goal includes algorithms on dynamic graphs, priority queue support, graph partitioning and multi-GPU algorithms.\n\nCredits\n=======\n\nGunrock Developers\n------------------\n\n- [Yangzihao Wang](http://www.idav.ucdavis.edu/~yzhwang/), University of\n  California, Davis\n\n- Yuechao Pan, University of\n  California, Davis\n\n- [Yuduo Wu](http://www.ece.ucdavis.edu/~wyd855/), University of California, Davis\n\n- [Carl Yang](http://web.ece.ucdavis.edu/~ctcyang/), University of California, Davis\n\n- Andy Riffel, University of California, Davis\n\n- [John Owens](http://www.ece.ucdavis.edu/~jowens/), University of California,\n  Davis\n\nAcknowledgements\n----------------\n\nThanks to the following developers who contributed code: The\nconnected-component implementation was derived from code written by\nJyothish Soman, Kothapalli Kishore, and P. J. Narayanan and described\nin their IPDPSW '10 paper *A Fast GPU Algorithm for Graph\nConnectivity* ([DOI](http://dx.doi.org/10.1109/IPDPSW.2010.5470817)).\nThe breadth-first search implementation and many of the utility\nfunctions in Gunrock are derived from the\n[b40c](http://code.google.com/p/back40computing/) library of\n[Duane Merrill](https://sites.google.com/site/duanemerrill/). The\nalgorithm is described in his PPoPP '12 paper *Scalable GPU Graph\nTraversal* ([DOI](http://dx.doi.org/10.1145/2370036.2145832)). Thanks\nto Erich Elsen and Vishal Vaidyanathan from\n[Royal Caliber](http://www.royal-caliber.com/) for their discussion on\nlibrary development and the dataset auto-generating code.\n\nThis work was funded by the DARPA XDATA program under AFRL Contract\nFA8750-13-C-0002 and by NSF awards CCF-1017399 and OCI-1032859. Our\nXDATA principal investigator is Eric Whyne of\n[Data Tactics Corporation](http://www.data-tactics.com/) and our DARPA\nprogram manager is\n[Dr. Christopher White](http://www.darpa.mil/Our_Work/I2O/Personnel/Dr_Christopher_White.aspx).\n\nGunrock Copyright and Software License\n======================================\n\nGunrock is copyright The Regents of the University of\nCalifornia, 2013. The library, examples, and all source code are\nreleased under\n[Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0).\n", 
  "id": 37561508
}