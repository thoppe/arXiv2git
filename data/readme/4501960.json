{
  "read_at": 1462510929, 
  "description": "Python module for calculating DNACC interaction potentials and binding details", 
  "README.txt": "Python module for calculating DNA-coated colloid interactions\nand binding details\n======================================================================\nWritten by Patrick Varilly and Stefano Angioletti-Uberti\nLast updated: 17 Oct 2015\n\nThis program accompanies the papers:\n\n     1) P. Varilly, S. Angioletti-Uberti, B.M. Mognetti, and D. Frenkel. \"A general theory \n     of DNA-mediated and other valence-limited colloidal interactions\". \n     The Journal of Chemical Physics, 137:094108-094122, 2012.\n     arXiv:1205.6921 (2012)\n\n     2) S. Angioletti-Uberti, P. Varilly, B.M. Mognetti, A.V. Tkachenko, and D. Frenkel. \n     \"Communication: A simple analytical formula for the free energy of ligand-receptor-mediated interactions\". \n     The Journal of Chemical Physics, 138:021102-021106, 2013.\n     arXiv:1211.1873 (2013).\n\n0. Downloading\n--------------\n\nYou can download the Python package at:\n\n   http://github.com/downloads/patvarilly/DNACC/dnacc-1.0.1.tar.gz\n\n1. Compiling\n------------\n\n[For compiling on OS X or Windows, see below]\n\nIt should be nearly trivial to build and install this module, since I'm\nusing Python's built-in setup tools.  From the main directory, just run\n\n      python setup.py install --user\n\nThat will build and install the module in the folder\n~/.local/lib/pythonX.X/site-packages/dnacc, where X.X is your version\nof python.\n\nIf you want to run a script like simple_dnacc without installing\nthe whole module, make sure that the inner loops in C get built by\nissuing the following command:\n\n      python setup.py build_ext --inplace\n\n(If you're seeing the following warning:\n\n  Could not import extension code to speed up inner loops\n  -- using much slower pure Python version instead.\n\nthen issuing the above command should solve the problem)\n\n\n1.1. Compiling in OS X\n----------------------\n\nIn Mac OS X, the usual automatic downloading of dependencies during a\npython setup.py install isn't able to successfully install NumPy and SciPy\n(in my machine, it's the lack of a Fortran compiler, but the SciPy docs\npoint to other potential problems).  So you have to download and install\nNumPy and SciPy manually.\n\nThe good news: binaries are easily available\nThe bad news: they only work with the version of Python from\n  http://www.python.org, not the version that ships with OS X!\n\nSo you have to download and install three things:\n\n1. Python 2.7.2 from http://www.python.org/download\n2. Latest version of NumPy from http://numpy.org\n3. Latest version of SciPy from http://scipy.org\n\nThis is far less painful than it sounds.  In my own case, the disk images\nthat I ended up downloading were:\n\n1. python-2.7.2-macosx10.6.dmg\n2. numpy-1.6.1-py2.7-python.org-macosx10.6.dmg\n3. scipy-0.10.0-py2.7-python.org-macosx10.6.dmg\n\nCAREFUL: for some of these packages, the \"link to the latest version\" that\nSourceForge suggests may be incorrect!  Do look at the full list of downloads\navailable and pick the one that is most appropriate to your own setup\n\nOnce you've installed python2.7, numpy and scipy, you can run the command\n\n    python setup.py install --user\n\nThe DNACC package will be installed in\n~/Library/Python/2.7/lib/python/site-packages\n\nExtra Note on GCC on Mac OS X\n-----------------------------\n[thanks to Stefano Angioletti-Uberti for pointing this out]\n\nYou may or may not have problems with getting python setup.py to find gcc on\nyour Mac.  Typically, if you installed gcc using the Xcode package provided\nby Apple, its name is not simply \"gcc-4.2\" but something longer like\n\"i686-apple-darwin11-llvm-gcc-4.2\". This is a link to the gcc compiler, whose\nfull path name is (in my system, but I just used the automatic installation\ndone by Xcode)\n\npath-to-compiler = \"/Developer/usr/llvm-gcc-4.2/bin/llvm-gcc-4.2\"\n\nYou can create a softlink that corrects this problem as follows:\n\nsudo ln -s path-to-compiler /usr/bin/gcc-4.2\nsudo ln -s path-to-compiler /usr/local/bin/gcc-4.2\n\n\n1.2 Compiling on Windows\n------------------------\n[Thanks to Bortolo M. Mognetti for these instructions]\n\nWith a DOS prompt go into the dnacc directory and launch 'setup.py install'\n\nBe sure that NumPy and Scipy have been installed. A C++ compiler is also\nrequired. A Visual C++ 2008 Express edition is available for free at the\nlink below\n\nwww.microsoft.com/visualstudio/en-us/products/2008-editions/express\n\n\n2. Test programs\n----------------\n\nAll the calculations that I have ever run on DNA-coated colloids are\nincluded in the \"examples\" folder.  Generally, these have a .py file\nthat you should run.  They produce lots of data which can then be plotted.\nFor example, in competing_linkages, type\n\n    python competing_linkages.py\n    for f in *.gp; do gnuplot $f; done\n\nMORE DETAILED DESCRIPTIONS TO COME\n\n3. General usage\n----------------\n\nFor detailed instructions, take a look at the HTML documentation,\nrooted at:\n\n   http://github.com/downloads/patvarilly/DNACC/dnacc-1.0.1-docs.tar.gz\n\nThese are generated using Sphinx as follows:\n\n   cd docs\n   make clean\n   make html\n   firefox _build/html/index.html\n\n\n    \n", 
  "id": 4501960
}