{
  "id": 10642556, 
  "read_at": 1462551116, 
  "README.rst": "===========================================================\nMonte Python, a Monte Carlo Markov Chain code (with Class!)\n===========================================================\n\n:Author: Benjamin Audren <benjamin.audren@epfl.ch>\n:License: MIT\n\n\nIf you are searching for specific examples of a work session, please refer to\nthe pdf documentation. The code is under the MIT license. As an additional\nclause, you are also required to cite the original release paper when using it\nin a scientific publication: `Conservative Constraints on Early Cosmology` (see\nthe tail of this document)\n\n\nPrerequisites\n-------------\n\n* You need the python program **version 2.7** or above, but less than 3.0.\n  Note that lower versions of python will work, down to 2.6 (tested), if you\n  add manually two extra packages (\n  `ordereddict <http://code.activestate.com/recipes/576693/>`_ and \n  `argparse <https://pypi.python.org/pypi/argparse/1.2.1>`_).\n\n* Your python of choice must have `numpy` (version >= 1.4.1) and `cython`. The\n  later is used to wrap CLASS in python.\n\n* *[optional]* If you want to use fully the plotting capabilities of Monte Python,\n  you also need the `scipy`, with interpolate, and `matplotlib` modules.\n\n* *[optional]* You can now use Multi Nest and the CosmoHammer with Monte\n  Python, though you need to install them. Please refer to the documentation.\n\n\nThe MontePython part\n--------------------\n\nMove the `.tar.bz2` file to the place of your convenience, untar its content\n\n.. code::\n\n    $ bunzip2 montepython-vx.y.tar.bz2\n    $ tar -xvf montepython-vx.y.tar\n\nThis will create a directory named `montepython` into your current directory.\nYou can add the following line to your `.bashrc` file:\n\n.. code::\n\n    export PATH=/path/to/MontePython/montepython/:$PATH\n\nto be able to call the program from anywhere.\n\nYou will need to adapt only two files to your local configuration. The first\nis the main file of the code `montepython/MontePython.py`, and it will be the only\ntime you will have to edit it, and it is simply to accommodate different\npossible configurations of your computer.\n\nIts first line reads\n\n.. code::\n\n    #!/usr/bin/python\n\nThis should be changed to wherever is your preferred python distribution\ninstalled. For standard distribution, this should already be working. Now,\nyou should be able to execute directly the file, i.e. instead of calling:\n\nThe second file to modify is located in the root directory of Monte Python :\n`default.conf`. This file will be read (and stored) whenever you execute the\nprogram, and will search for your cosmological code path, your data path, and\nyour wmap wrapper path. You can alternatively create a second one, `my.conf`,\ncontaining your setup, and then run the code providing this file (with the flag\n`--conf`)\n\n\nThe Class part\n--------------\n\nGo to your class directory, and do **make clean**, then **make**. This builds the\n`libclass.a`, needed for the next step. From there, \n\n.. code::\n\n    $ cd python/\n    $ python setup.py build\n    $ python setup.py install --user\n\nThis will compile the file `classy.pyx`, which is the python wrapper for CLASS,\ninto a library, `classy.so`, located in the `build/` subdirectory. This is the\nlibrary called in Monte Python afterwards.\n\nIf this step fails, check that you have `cython` installed, `numpy` (a numerical\npackage for python), python (well... did I say this code was in python ?) with\na version > 2.6.  If this step fails again, kindly ask your system admin, (s)he\nis there for this, after all. Note that the installation (last command) is\nnot strictly speaking mandatory.\n\nRemember that if you modify `CLASS` to implement some new physics, you will need to\nperform this part again for the new `CLASS`.\n\n\nThe Planck likelihood part\n---------------------------\n\nThe release of the Planck data comes with a likelihood program, called\nClik, that one can recover from the `ESA website\n<http://www.sciops.esa.int/index.php?project=planck&page=Planck_Legacy_Archive>`_,\nalong with the data. Download all `tar.gz` files, extract them to the\nplace of your convenience.\n\nThe Planck Likelihood Code (**plc**) is based on a library called\n`clik`. It will be extracted, alongside several `.clik` folders that\ncontain the likelihoods. The installation of the code is described in\nthe archive, and it uses an auto installer device, called `waf`.\n\n.. warning::\n\n  Note that you **are strongly advised** to configure `clik` with the\n  Intel mkl library, and not with lapack. There is a massive gain in\n  execution time: without it, the code is dominated by the execution\n  of the low-l polarisation data from WMAP.\n\nGo to your plc folder, and execute the following line, taking into\naccount the mkl installation\n\n.. code::\n\n    $ ./waf configure --install_all_deps --mkl=...\n\nIn your |MP| configuration file, to use this\ncode, you should add the following line\n\n.. code:: python\n\n  path['clik'] = 'path/to/your/plc/folder/'\n\nThe four likelihoods defined in |MP| for Planck are `Planck_highl`,\n`Planck_lowl`, `Planck_lensing`, `lowlike` (the polarization data from\nWMAP). In each of the respective data files for these likelihood,\nplease make sure that the line, for instance,\n\n.. code:: python\n\n  Planck_highl.path_clik = data.path['clik']+'../something.clik'\n\npoints to the correct clik file. Do not forget to source your Planck\nlikelihood every time you want to use it:\n\n.. code::\n\n    $ source Your/Plc/bin/clik_profile.sh\n\nYou can put this line in your .bashrc file, and you should put it in your\nscripts for cluster computing.\n\n\n\nEnjoying the difference\n-----------------------\n\nNow the code is installed. Go anywhere, and just call\n\n.. code::\n\n    $ python montepython/MontePython.py --help\n    $ python montepython/MontePython.py run --help\n    $ python montepython/MontePython.py info --help\n\nTo see a list of all commands. For the `run` subcommand, there are two\nessential ones, without which the program will not start. At minimum, you\nshould precise an output folder (`-o`) and a parameter file (`-p`). An example\nof parameter file is found in the main directory of MontePython (`test.param`,\nfor instance).\n\nA typical call would then be:\n\n.. code::\n\n    $ python montepython/MontePython.py run -o test -p example.param\n\nIf non existent, the `test/` folder will be created, and a run with the number\nof steps described in `example.param` will be started. To run a chain with more\nsteps, one can type:\n\n.. code::\n\n    $ python montepython/MontePython.py run -o test -p example.param -N 100\n\nIf you want to analyse the run, then just type\n\n.. code::\n\n    $ python montepython/MontePython.py info test/\n\nNote that you probably want more than a hundred points before analyzing a\nfolder.\n\nDetails and Examples\n--------------------\n\nPlease refer to the pdf or online documentation for further details. The `wiki\n<https://github.com/baudren/montepython_public/wiki>`_ contains additional\ndetails on installation. The `forum\n<https://github.com/baudren/montepython_public/issues>`_ also contains a\ncollection of already answered questions, and can be used to discuss the code.\n\n\nBibtex entry\n------------\n\nWhen using *Monte Python* in a publication, please acknowledge the code by citing\nthe following paper. If you used *Class*, *Nested Sampling* or *Cosmo Hammer*,\nyou should also cite the original works.\n\n.. code::\n\n    @article{Audren:2012wb,\n          author         = \"Audren, Benjamin and Lesgourgues, Julien and Benabed,\n                            Karim and Prunet, Simon\",\n          title          = \"{Conservative Constraints on Early Cosmology: an\n                            illustration of the Monte Python cosmological parameter\n                            inference code}\",\n          journal        = \"JCAP\",\n          volume         = \"1302\",\n          pages          = \"001\",\n          doi            = \"10.1088/1475-7516/2013/02/001\",\n          year           = \"2013\",\n          eprint         = \"1210.7183\",\n          archivePrefix  = \"arXiv\",\n          primaryClass   = \"astro-ph.CO\",\n          reportNumber   = \"CERN-PH-TH-2012-290, LAPTH-048-12\",\n          SLACcitation   = \"%%CITATION = ARXIV:1210.7183;%%\",\n    }\n\n", 
  "description": "Public repository for the Monte Python Code"
}