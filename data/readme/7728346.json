{
  "id": 7728346, 
  "read_at": 1462551300, 
  "README.rst": "NIFTY - Numerical Information Field Theory\n==========================================\n\n**NIFTY** project homepage: `<http://www.mpa-garching.mpg.de/ift/nifty/>`_\n\nSummary\n-------\n\nDescription\n...........\n\n**NIFTY**, \"\\ **N**\\umerical **I**\\nformation **F**\\ield **T**\\heor\\ **y**\\ \",\nis a versatile library designed to enable the development of signal inference\nalgorithms that operate regardless of the underlying spatial grid and its\nresolution. Its object-oriented framework is written in Python, although it\naccesses libraries written in Cython, C++, and C for efficiency.\n\nNIFTY offers a toolkit that abstracts discretized representations of continuous\nspaces, fields in these spaces, and operators acting on fields into classes.\nThereby, the correct normalization of operations on fields is taken care of\nautomatically without concerning the user. This allows for an abstract\nformulation and programming of inference algorithms, including those derived\nwithin information field theory. Thus, NIFTY permits its user to rapidly\nprototype algorithms in 1D, and then apply the developed code in\nhigher-dimensional settings of real world problems. The set of spaces on which\nNIFTY operates comprises point sets, *n*-dimensional regular grids, spherical\nspaces, their harmonic counterparts, and product spaces constructed as\ncombinations of those.\n\nClass & Feature Overview\n........................\n\nThe NIFTY library features three main classes: **spaces** that represent\ncertain grids, **fields** that are defined on spaces, and **operators** that\napply to fields.\n\n*   `Spaces <http://www.mpa-garching.mpg.de/ift/nifty/space.html>`_\n\n    *   ``point_space`` - unstructured list of points\n    *   ``rg_space`` - *n*-dimensional regular Euclidean grid\n    *   ``lm_space`` - spherical harmonics\n    *   ``gl_space`` - Gauss-Legendre grid on the 2-sphere\n    *   ``hp_space`` - `HEALPix <http://sourceforge.net/projects/healpix/>`_\n        grid on the 2-sphere\n    *   ``nested_space`` - arbitrary product of grids\n\n*   `Fields <http://www.mpa-garching.mpg.de/ift/nifty/field.html>`_\n\n    *   ``field`` - generic class for (discretized) fields\n\n::\n\n    field.cast_domain   field.hat           field.power        field.smooth\n    field.conjugate     field.inverse_hat   field.pseudo_dot   field.tensor_dot\n    field.dim           field.norm          field.set_target   field.transform\n    field.dot           field.plot          field.set_val      field.weight\n\n*   `Operators <http://www.mpa-garching.mpg.de/ift/nifty/operator.html>`_\n\n    *   ``diagonal_operator`` - purely diagonal matrices in a specified basis\n    *   ``projection_operator`` - projections onto subsets of a specified basis\n    *   ``vecvec_operator`` - matrices derived from the outer product of a\n        vector\n    *   ``response_operator`` - exemplary responses that include a convolution,\n        masking and projection\n    *   ``propagator_operator`` - information propagator in Wiener filter theory\n    *   ``explicit_operator`` - linear operators with an explicit matrix\n        representation\n    *   (and more)\n\n* (and more)\n\n*Parts of this summary are taken from* [1]_ *without marking them explicitly as\nquotations.*\n\nInstallation\n------------\n\nRequirements\n............\n\n*   `Python <http://www.python.org/>`_ (v2.7.x)\n\n    *   `NumPy <http://www.numpy.org/>`_ and `SciPy <http://www.scipy.org/>`_\n    *   `matplotlib <http://matplotlib.org/>`_\n    *   `multiprocessing <http://docs.python.org/2/library/multiprocessing.html>`_\n        (standard library)\n\n*   `GFFT <https://github.com/mrbell/gfft>`_ (v0.1.0) - Generalized Fast\n    Fourier Transformations for Python - **optional**\n\n*   `HEALPy <https://github.com/healpy/healpy>`_ (v1.8.1 without openmp) - A\n    Python wrapper for `HEALPix <http://sourceforge.net/projects/healpix/>`_ -\n    **optional**\n \n*   `libsharp-wrapper <https://github.com/mselig/libsharp-wrapper>`_ (v0.1.2\n    without openmp) - A Python wrapper for the\n    `libsharp <http://sourceforge.net/projects/libsharp/>`_ library -\n    **optional**\n\nDownload\n........\n\nThe latest release is tagged **v1.0.7** and is available as a source package\nat `<https://github.com/information-field-theory/nifty/tags>`_. The current\nversion can be obtained by cloning the repository::\n\n    git clone git://github.com/information-field-theory/nifty.git\n\nInstallation\n............\n\n*   NIFTY can be installed using `PyPI <https://pypi.python.org/pypi>`_ and\n    **pip** by running the following command::\n\n        pip install ift_nifty\n\n    Alternatively, a private or user specific installation can be done by::\n\n        pip install --user ift_nifty\n\n\n*   NIFTY can be installed using **Distutils** by running the following\n    command::\n\n        cd nifty\n        python setup.py install\n\n    Alternatively, a private or user specific installation can be done by::\n\n        python setup.py install --user\n        python setup.py install --install-lib=/SOMEWHERE\n\nFirst Steps\n...........\n\nFor a quickstart, you can browse through the\n`informal introduction <http://www.mpa-garching.mpg.de/ift/nifty/start.html>`_\nor dive into NIFTY by running one of the demonstrations, e.g.::\n\n        >>> run -m nifty.demos.demo_wf1\n\nAcknowledgement\n---------------\n\nPlease, acknowledge the use of NIFTY in your publication(s) by using a phrase\nsuch as the following:\n\n    *\"Some of the results in this publication have been derived using the NIFTY\n    package [Selig et al., 2013].\"*\n\nReferences\n..........\n\n.. [1] Selig et al., \"NIFTY - Numerical Information Field Theory - a\n    versatile Python library for signal inference\",\n    `A&A, vol. 554, id. A26 <http://dx.doi.org/10.1051/0004-6361/201321236>`_,\n    2013; `arXiv:1301.4499 <http://www.arxiv.org/abs/1301.4499>`_\n\nRelease Notes\n-------------\n\nThe NIFTY package is licensed under the\n`GPLv3 <http://www.gnu.org/licenses/gpl.html>`_ and is distributed *without any\nwarranty*.\n\n----\n\n**NIFTY** project homepage: `<http://www.mpa-garching.mpg.de/ift/nifty/>`_\n\n", 
  "description": "NIFTY - Numerical Information Field Theory"
}