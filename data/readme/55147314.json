{
  "read_at": 1462826605, 
  "description": "Topcat - a multidimensional persistent homology library", 
  "README.md": "Topcat\n===\nTopcat is Java library for computing invariants on multidimensional persistence modules. Topcat has been developed during my work on my master's thesis about multidimensional persistent homology at KTH Royal Institute of Technology in Stockholm, Sweden. The theoretical framework is based on the paper \"Multidimensional Persistence and Noise\" by Chacholski et al. (arXiv:1505.06929). A detailed description of the algorithms implemented in Topcat can be found in my thesis (when it is finished).\n\nTopcat currently only supports computations over the field Z/2Z but all algorithms that are used in Topcat extend to an arbitrary field. Also, Topcat currently only supports computation of the homology of a multifiltered simplicial complex, although the framework may be extended to computing the homology of any type of multifiltered space for which there are algorithms to do so.\n\nThe input that may be given to Topcat is either in the form of a simplicial complex together with a filtration vector for each simplex, or in the form of a list of distance matrices together with one or more lists of filtration values. If a list of distance matrices together with one or more lists of filtration values is given as input, a multifiltered Vietoris-Rips complex will be constructed using this data and passed to the next step in the pipeline. Given this input Topcat computes the complete persistence module, including all maps, for each dimension up to a specified max dimension. \n\nWhen the persistence modules have been computed it is straightforward to compute any invariant. Topcat currently supports computation of the rank invariant (see \"The theory of multidimensional persistence\" by Carlsson and Zomorodian) and the basic barcode (see \"Multidimensional persistence and noise\" by Chacholski et al.) for standard noise in the direction of a cone and a special type of domain noise.\n\n", 
  "id": 55147314
}