{
  "read_at": 1462547018, 
  "description": "Fortran 90 code which simulates temperature evolution on an Earth-like planet using a one dimensional Latitudinal Energy Balance Model (LEBM)", 
  "README.md": "This program is designed to produce simple estimates of how the temperature on an Earthlike planet varies as a function of latitude.  This is achieved by solving a 1D diffusion equation based on input stellar radiation, planetary atmospheric albedo and optical depth, amongst other properties such as the planet's ocean fraction and its orbit.\n\nAn explanation of the algorithms can be found in Spiegel et al (2008), Astrophysical Journal vol 681, issue 2, pp 1609-1623\n(Free link available at http://arxiv.org/abs/0711.4856)\n\nThe code is compiled using the Makefile (HEALTH WARNING: tested against gfortran but not others) by typing 'make'\n\nTwo other codes are supplied, compiled by typing:\n\n'make time_average' to produce a code which averages snapshots from the simulation\n'make equilibrium' to produce a code which calculates the input albedo, cooling and other functions as a function of temperature for plotting\n\nTwo Python plotting scripts are supplied with this code:\n\nplot_log_planet_1DEBM.py - this plots the data in the log file, where quantities are stored as a function of time\n\nplot_timeaverage_planet_1DEBM.py - this plots a time average of data in the snapshot files, where quantities are stored as a function of latitude\n\n\n", 
  "id": 15969038
}