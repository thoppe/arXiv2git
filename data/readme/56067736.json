{
  "read_at": 1462548347, 
  "description": "", 
  "README.md": "# README #\n\n## Welcome\n\nThis package is written by Yuan Zhao ([yuan.zhao@stonybrook.edu](yuan.zhao@stonybrook.edu])). \nIt contains methods of variational Latent Gaussian Process (vLGP) model based on Yuan Zhao and Il Memming Park's ([memming.park@stonybrook.edu](memming.park@stonybrook.edu)) work.\n\nYuan Zhao and Il Memming Park. Variational Latent Gaussian Process for Recovering Single-Trial Dynamics from Population Spike Trains. [arXiv:1604.03053v1](https://arxiv.org/abs/1604.03053) [stat.ML]\n\nFor V1 recording, see the trajectories visualized in 3D that show how signal and noise are dynamically encoded in the state space. [https://www.youtube.com/watch?v=ml66qLLpTr8](https://www.youtube.com/watch?v=ml66qLLpTr8)\n\nThe code is written in Python 3. It needs further testing and is subject to change.\n\n## Usage\n\nTo get started, see the examples in notebook: ./tutorial.ipynb. \nThere are 5 Lorenz simulations and 5 LDS simulations in './data' for the tutorial. The corresponding inference and cross-validation results are in './output'. \nYou may skip the code in tutorial and load them directly to save time.\n\nThe default options controlling algorithm are recommended for the purpose of stability but not necessarily the optimal.\nIf you encounter any numerical error (most likely singular matrix errors), try to change the prior and enable the Hessian adjustment.\n\nThis package heavily depends on NumPy arrays. All nonscalar data are expected to be in ndarray-compatible type. \n\nThe data for training models are expected to be spike trains (LFP channels will be supported in future). \nThe spike trains should be binned and shaped into array as (trial, bin, neuron) before passing to the functions.\nEach element of array is the spike count in that time bin of certain neuron and trial.\n\n## Modules\n\n| module     | function                                                                                      |\n|:-----------|-----------------------------------------------------------------------------------------------|\n| core       | model fitting, prediction and validation                                                      |\n| hyper      | hyperparameter optimization                                                                   |\n| math       | link functions, incomplelte Cholesky decompostion, angle between subspaces, orthogonalization |\n| plot       | raster and dynamics                                                                           |\n| simulation | simulation of Gaussian process, Lorenz dynamics and spike trains                              |\n| util       | lag matrix construction, rotation, load and save                                              |\n\n## Contact\n\nIf you notice a bug, want to request a feature, or have a question or feedback, please send an email to [yuan.zhao@stonybrook.edu](yuan.zhao@stonybrook.edu). We love to hear from people using our code.\n\nThe code is published under the MIT License.\n", 
  "id": 56067736
}