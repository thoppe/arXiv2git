{
  "read_at": 1462548161, 
  "description": "A convolutional neural network to classify sentences, built with Tensorflow.", 
  "README.md": "A Tensorflow implementation of convolutional neural network to classify sentences\n=========\nThis implementation uses Tensorflow's `tf.conv2d` to perform 1D convolution on word sequences. It also supports using Google News word2vec pre-trained vectors to initialize word embeddings, which boosts the performance on movie review dataset from ~76% to ~81%.\n\nThe original theano implementation of this model by the author is [here](https://github.com/yoonkim/CNN_sentence). Another tensorflow implementation that does not support loading pretrained vectors is [here](https://github.com/dennybritz/cnn-text-classification-tf).\n\n## Dependency\n\n- python2.7+\n- numpy\n- tensorflow 0.7+\n\n## Data\n\nThe data in `data/mr/` are movie review polarity data provided [here](http://www.cs.cornell.edu/people/pabo/movie-review-data/). The current `data/word2vec` directory is empty. To use the pretrained word2vec embeddings, download the Google News pretrained vector data from [this Google Drive link](https://drive.google.com/file/d/0B7XkCwpI5KDYNlNUTTlSS21pQmM/edit), and unzip it to the directory. It will be a `.bin` file.\n\n## Usage\n\n#### Preprocess the data\n\n    python text_input.py\n\n#### Train\n\n    python train.py\n\nBy default the pretrained vectors will be loaded and used to initialize the embeddings. To suppress this, use\n\n    python train.py --use_pretrain False\n\n#### Evaluate\n\n    python eval.py\n\nBy default evaluation is run over test set. To evaluate over training set, run\n\n    python eval.py --train_data\n\n## References\n\n1. Kim, Yoon. \"Convolutional neural networks for sentence classification.\" arXiv preprint arXiv:1408.5882 (2014). [link](http://arxiv.org/abs/1408.5882)\n\n## License\n\nMIT\n", 
  "id": 55752592
}