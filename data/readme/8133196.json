{
  "README": "Implements a compressed sensing algorithm\n=========================================\n\nWhat is compressed sensing?\n---------------------------\n\nConsider the matrix equation\nr = Ax\nwhere\nx is a M x 1 signal vector which is unknown but assumed to be sparse (small number of nonzero elements)\nA is a N x M measurement matrix with N < M (we get to design this matrix)\nr is a N x 1 measurement vector (it is a projection of x into a smaller dimension, thus compressed)\nThe goal is to reconstruct x from r\n\nWhat kind of measurement matrix A do we use?\n--------------------------------------------\n\nWe use a Low Density measurement matrix with a few fixed number of 1's in each column and each row, and with the remaining elements equal to 0. This enables us to use an efficient reconstruction algorithm.\n\nHow to test the algorithm\n-------------------------\n\nmain_test.m is the main matlab script for testing the algorithm. It does the following:\n1. Call the function generate_ldf() defined in ldf_generate/generate_ldf.m which generates a low density measurement matrix\n2. Randomly generate sparse signal x and measurement r = Ax + n where n is measurement noise\n3. Calculate performance bound where a genie tells you where the nonzero elements of x are\n4. Run the reconstruction algorithm by calling suprem_decoder() defined in suprem_decoder.m which is a wrapper function for the actual decoder written in C (suprem.c)\n5. Compare the performance of the algorithm against the genie-aided one\n\nREFERENCE\n---------\nA Coding Theory Approach to Noisy Compressive Sensing Using Low Density Frames\nMehmet Akcakaya, Jinsoo Park, and Vahid Tarokh\nIEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 59, NO. 11, NOVEMBER 2011\nfreely available version at\nhttp://arxiv.org/pdf/0903.0650.pdf", 
  "read_at": 1462547578, 
  "description": "", 
  "README.md": "Implements a compressed sensing algorithm\n=========================================\n\nWhat is compressed sensing?\n---------------------------\n\nConsider the matrix equation  \nr = Ax  \nwhere  \nx is a M x 1 signal vector which is unknown but assumed to be sparse (small number of nonzero elements)  \nA is a N x M measurement matrix with N < M (we get to design this matrix)  \nr is a N x 1 measurement vector (it is a projection of x into a smaller dimension, thus compressed)  \nThe goal is to reconstruct x from r\n\nWhat kind of measurement matrix A do we use?\n--------------------------------------------\n\nWe use a Low Density measurement matrix with a few fixed number of 1's in each column and each row, and with the remaining elements equal to 0. This enables us to use an efficient reconstruction algorithm.\n\nHow to test the algorithm\n-------------------------\n\nmain_test.m is the main matlab script for testing the algorithm. It does the following:  \n1. Call the function generate_ldf() defined in ldf_generate/generate_ldf.m which generates a low density measurement matrix  \n2. Randomly generate sparse signal x and measurement r = Ax + n where n is measurement noise  \n3. Calculate performance bound where a genie tells you where the nonzero elements of x are  \n4. Run the reconstruction algorithm by calling suprem_decoder() defined in suprem_decoder.m which is a wrapper function for the actual decoder written in C (suprem.c)  \n5. Compare the performance of the algorithm against the genie-aided one  \n\nNote: Before running suprem_decoder, while MATLAB is in the subfolder called decoder, enter the following command:  \n`mex suprem.c`\n\nREFERENCE\n---------\nA Coding Theory Approach to Noisy Compressive Sensing Using Low Density Frames  \nMehmet Akcakaya, Jinsoo Park, and Vahid Tarokh  \nIEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 59, NO. 11, NOVEMBER 2011  \nfreely available version at  \nhttp://arxiv.org/pdf/0903.0650.pdf", 
  "id": 8133196
}