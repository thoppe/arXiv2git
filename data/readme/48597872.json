{
  "read_at": 1462550369, 
  "description": "A mirror of iqist from https://bitbucket.org/huangli712/iqist/", 
  "README.md": "# iQIST (Interacting Quantum Impurity Solver Toolkit)\n\nThe iQIST software package includes several quantum impurity solvers which implement the hybridization expansion version continuous-time quantum Monte Carlo algorithm and Hirsch-Fye quantum Monte Carlo algorithm, and corresponding preprocessing and postprocessing tools.\n\n### WARNING\n\nThe iQIST is still in heavy development. The codes are extremely unstable. Some features are still experimental. Everything could be changed in the future release. We can not guarantee that it is bug free. So be careful when you are using it and verify your data again and again before you submit your calculated results to any peer-reviewed journal.\n\nSometimes the latest commit will not be compiled correctly. So, please download the released version of iQIST which has an unique version tag.\n\n### Version\n\nv0.6.6 @ 2015.01.06T (devel)\n\n### License\n\nGNU General Public License Version 3\n\n### Features\n\n* Model\n    * Density-density interaction\n    * General interaction (Slater or Kanamori scheme)\n    * SOC interaction and crystal field splitting\n    * Hubbard-Holstein model\n    * Frequency-dependent interaction\n\n* Measurement tricks\n    * Orthogonal polynomial representation (Legendre and Chebyshev polynomials)\n    * Kernel polynomial representation\n    * Improved estimator for self-energy function\n\n* Observables\n    * Single-particle Green's function in imaginary time space\n    * Single-particle Green's function in matsubara frequency space\n    * Two-particle correlation function in matsubara frequency space\n    * Local irreducible vertex function in matsubara frequency space\n    * Pair susceptibility in matsubara frequency space\n    * Self-energy function in matsubara frequency space\n    * Histogram of perturbation expansion order\n    * Kurtosis and skewness of perturbation expansion order\n    * Kinetic and potential energies\n    * Orbital occupation numbers\n    * Double occupation numbers\n    * Magnetic moment\n    * Atomic state probability\n    * Spin-spin correlation function in imaginary time space\n    * Orbital-orbital correlation function in imaginary time space\n    * Fidelity susceptibility\n    * kinetic energy fluctuation <k^2> - <k>^2 - <k>\n\n* Fast algorithms\n    * Segment algorithm for density-density interaction\n    * Divide-and-conquer algorithm\n    * Sparse matrix multiplication\n    * Good quantum numbers (N, Sz, Jz, PS)\n    * Lazy trace evaluation\n    * Dynamical truncation approximation\n\n* Parallelism\n    * MPI\n    * OpenMP (for the measurement of two-particle quantities)\n\n* API\n    * Python binding\n    * Input file generator by Python\n    * Fortran binding\n\n* Preprocessing\n    * Atomic eigenvalue problem solver\n\n* Postprocessing\n    * Maximum entropy method\n    * Stochastic analytical continuation\n    * Kramers-Kronig transformation\n    * Pade approximation\n    * Polynomial fitting for self-energy function\n    * Many tools and scripts, etc.\n\n### Installation\n\n* Full Installation\n```sh\n$ cd iqist/build\n$ editor make.sys\n$ make all\n$ ./setup.sh\n```\n\n* Partial Installation\n```sh\n$ cd iqist/build\n$ editor make.sys\n$ make base\n$ make capi\n$ make component (component could be azalea, gardenia, narcissus, etc.)\n$ ./setup.sh\n```\n\n* Build Fortran Library\n```sh\n$ cd iqist/build\n$ editor make.sys\n$ make base\n$ make capi\n$ make component-lib (component could be azalea, gardenia, narcissus, etc.)\n$ ./setup.sh\n```\n\n* Build Python Module\n```sh\n$ cd iqist/build\n$ editor make.sys\n$ make base\n$ make capi\n$ make component-pylib (component could be azalea, gardenia, narcissus, etc.)\n$ ./setup.sh\n```\n\nEnjoy it!\n\nIf you want to know more about the compiling system implemented in the iQIST, please read the manual carefully.\n\n### Documentation\n\nsee iQIST/doc/manual/ug.pdf (We are sorry. Currently this manual is far away from completeness, so we remove it temporally from the release).\n\n### Development\n\nThe iQIST software package is developed and maintained by the iQIST Developer Team.\n\nFind a bug? Want to contribute? Want new features? Great! Please contact with us as soon as possible.\n\n### Reference\n\nIf you are using iQIST to do some studies and would like to publish your great works, it would be really appreciated if you can cite the following paper:\n\n```sh\niQIST: An open source continuous-time quantum Monte Carlo impurity solver toolkit\nLi Huang, Yilin Wang, Zi Yang Meng, Liang Du, Philipp Werner and Xi Dai\nComputer Physics Communications 195, 140 (2015) or arXiv:1409.7573 (2014)\n```\n\n### Contact\n\n```sh\nLi Huang\nInstitute of Materials, China Academy of Engineering Physics, Sichuan, PRC\nemail: lihuang.dmft at gmail.com\n```\n\nor\n\n```sh\nYilin Wang\nInstitute of Physics, Chinese Academy of Sciences, Beijing, PRC\nemail: qhwyl2006 at 126.com\n```\n", 
  "id": 48597872
}