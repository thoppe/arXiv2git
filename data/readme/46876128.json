{
  "read_at": 1462554142, 
  "description": "Fast Computation of Empirically Tight Bounds for the Diameter of Massive Graphs in C++ based on http://arxiv.org/abs/0904.2728", 
  "README.md": "# GraphDiameterApproximator\n\nThe diameter *d* of a graph is the maximum eccentricity of any vertex in the graph. \nThat is, *d* is the greatest distance between any pair of vertices.\nCalculating the exact diameter of huge graphs is very expensive thus \napproximation algorithms are needed.\n\nIn *Fast Computation of Empirically Tight Bounds for the Diameter of Massive\nGraphs* http://arxiv.org/abs/0904.2728 the authors present an \napproximation algorithm for unweighted graphs which this piece of code\ncalled `GraphDiameterApproximator` implements in C++ efficiently.\nIn short `GraphDiameterApproximator` is able to give a upper and lower bound\nof the diameter of an very large unweighted graph in reasonable amount of time.\n\n### Dependencies\n\n1. GNU gcc in version 5 or higher to get C++14-features working \n2. GNU make needs to be installed\n\n### Usage (in short)\n\nThis section gives a as-short-as-possible description of how this package\ncan be used to approximate the diameter of an arbitrary graph.  \n\nFirst, get the repository and compile the sources:\n\n    $ git clone git@github.com:bobbthebuilder/GraphDiameterApproximator.git my-project\n    $ cd my-project\n    $ make\n    $ cd bin/\n\nThe binary `run2` in `bin/` expects a graph in the [METIS Graph Format](http://people.sc.fsu.edu/~jburkardt/data/metis_graph/metis_graph.html \"Metis Graph Format\")\nas input, the `graphs/` directory stores some example graphs:\n\n    $ ./run ../graphs/jazz1.graph \n   \nTo clean up everything, i.e. deleting the build/ as well as the bin/\ndirectory, call `make clean`.\n", 
  "id": 46876128
}