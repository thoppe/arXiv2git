{
  "read_at": 1462553004, 
  "description": "Functions of Multiple Instances and Extended Functions of Multiple Instances", 
  "README.md": "# FUMI\nFunctions of Multiple Instances, Extended Functions of Multiple Instances and Dictionary Learning using Functions of Multiple Instances\n\n****************************************************************\n\nNOTE: If cFUMI and eFUMI Algorithms are used in any publication or presentation, the following reference must be cited:  \nC. Jiao, A. Zare, \"Functions of Multiple Instances for Learning Target Signatures,\" IEEE transactions on Geoscience and Remote Sensing, Vol. 53, No. 8, Aug. 2015, DOI: 10.1109/TGRS.2015.2406334\n\nIf DL-FUMI Algorithm is used in any publication or presentation, the following reference must be cited:  \nC. Jiao, A. Zare, \"Multiple Instance Dictionary Learning using Functions of Multiple Instances,\" arXiv preprint arXiv:1511.02825 (2015), http://arxiv.org/abs/1511.02825\n\n****************************************************************\n\nThe command to run the cFUMI algorithm:   \n\n[E, P]=cFUMI(Inputdata,labels,parameters)  \n\n% Inputs:  \n%   Inputdata - hyperspectral image data, can be either in data cube or linear data  \n%   parameters - struct - parameter structure which can be set using the 'cFUMI_parameters' function, see 'cFUMI_parameters' for more explanation  \n%   labels - binary values, the same size as input data, indicates positive data point with logical '1'  \n%  \n% Outputs:  \n%   E - Endmembers, d by M+1, d and M account for wavelength bands and number of background endmembers,respectively  \n%   P - Proportion Values, M+1 by N, N accounts for the total number of input data  \n\nThe command to run the eFUMI algorithm:   \n\n[E, P]=eFUMI(Inputdata,labels,parameters)  \n\n% Inputs:  \n%   Inputdata - hyperspectral image data, can be either in data cube or linear data  \n%   parameters - struct - parameter structure which can be set using the 'eFUMI_parameters' function, see 'eFUMI_parameters' for more explanation  \n%   labels - binary values, the same size as input data, indicates positive bags with logical '1'  \n%  \n% Outputs:  \n%   E - Endmembers, d by M+1, d and M account for wavelength bands and number of background endmembers,respectively  \n%   P - Proportion Values, M+1 by N, N accounts for the total number of input data  \n\n\nThe command to run the DL-FUMI algorithm:   \n\n[E, P]=DLFUMI(Inputdata,labels,parameters)\n\n% Inputs:\n%   Inputdata - MIL data, d by N, d: number of data dimension, N, total number of data\n%   parameters - struct - parameter structure which can be set using the 'DLFUMI_parameters' function, see 'DLFUMI_parameters' for more explanation  \n%   labels - binary the same size as input data, indicates positive bag with logical '1'\n%\n% Outputs:\n%   E - Estimated dictionary set, d by T+M, T is number of target concepts, M accounts for the number of background endmembers\n%   P - Representation Values, T+M by N \n\n\n\n****************************************************************\n\nFiles explanation:  \nLatest Revision: April 2016\n\n************\n\n'...\\FUMI_code_and_demo':\nREADME.md                                                                                     -  this file  \nFUMI.pdf                             -  the referred paper  \nInvestigation of Small Increase in eFUMI Objective Function Value during Optimization.pdf      -  investigation of increase phenomenon in eFUMI objective function  \n\n\n************\n\n'...\\FUMI_code_and_demo\\cFUMI_code':  \ncFUMI.m                                                             -  cFUMI (convex Functions of Multiple Instances), semi-supervised target concept learning algorithm  \ncFUMI_Cond_Update.m                                                 -  the objective calculation function  \ncFUMI_E_Update.m                                                    -  endmember matrix update function  \ncFUMI_P_Update.m                                                    -  proportion matrix update function  \ncFUMI_parameters.m                                                  -  parameters generating function used during the cFUMI algorithm, please change accordingly  \ncFUMI_VCA_initialize.m                                              -  cFUMI initialization function  \nFUMI_reshape.m                                                      -  reshape 3D hyperspectral data cube into linear data  \nFUMI_unmix.m                                                        -  fully constrained least square unmixing function  \nFUMI_viewresults.m                                                  -  proportion map display function  \nnormalize.m                                                         -  normalization function  \nVCA.m                                                               -  Vertex Component Analysis algorithm, see reference of the referred paper for more details  \n\n\n************\n\n'...\\FUMI_code_and_demo\\DL_FUMI_code':  \nDLFUMI.m                                                            -  DLFUMI (Dictionary Learning using Functions of Multiple Instances): semi-supervised target concept learning algorithm\nDLFUMI_Cond_Update.m                                                -  the objective calculation function  \nDLFUMI_E_Update_individual.m                                        -  dictionary set update function, atom by atom  \nDLFUMI_initialize.m                                                 -  DLFUMI initialization function  \nDLFUMI_P_Update.m                                                   -  representation matrix update function  \nDLFUMI_parameters.m                                                 -  parameters generating function used during the DLFUMI algorithm, please change accordingly  \nDLFUMI_Prob_Z_Update.m                                              -  probability estimate function to conduct the E-step of DLFUMI  \nnormalize.m                                                         -  normalization function  \nmy_OMP                                                              -  sparse coding function using orthogonal matching pursuit\n\n\n************\n\n'...\\FUMI_code_and_demo\\eFUMI_code':  \neFUMI.m                                                             -  eFUMI (extended Functions of Multiple Instances), semi-supervised target concept learning algorithm  \neFUMI_Cond_Update.m                                                 -  the objective calculation function  \neFUMI_E_Update.m                                                    -  endmember matrix update function  \neFUMI_P_Update.m                                                    -  proportion matrix update function  \neFUMI_parameters.m                                                  -  parameters generating function used during the eFUMI algorithm, please change accordingly  \neFUMI_Prob_Z_Update.m                                               -  probability estimate function to conduct the E-step of eFUMI  \neFUMI_VCA_initialize.m                                              -  eFUMI initialization function  \nFUMI_reshape.m                                                      -  reshape 3D hyperspectral data cube into linear data  \nFUMI_unmix.m                                                        -  fully constrained least square unmixing function  \nFUMI_viewresults.m                                                  -  proportion map display function  \nnormalize.m                                                         -  normalization function  \nVCA.m                                                               -  Vertex Component Analysis algorithm, see reference of the referred paper for more details  \n\n************\n\n'...\\FUMI_code_and_demo\\FUMI_demos':  \ndemo_generate_synthetic_data.m                                      -  generates different type of synthetic data used in the synthetic experiment part of the referred paper  \ndemo_FUMI_random_data_repeat_Fig_2.m                                -  repeats the synthetic experiment of cFUMI and eFUMI on random data, corresponds to results shown in Fig. 2 of the referred paper  \ndemo_cFUMI_noisy_data_repeat_Fig_3_a.m                              -  repeats the synthetic experiment of cFUMI on noisy data with SNR 10, 20, 30 and 40 dB, corresponds to results shown in Fig. 3(a) of the referred paper  \ndemo_eFUMI_noisy_data_repeat_Fig_3_b.m                              -  repeats the synthetic experiment of eFUMI on noisy data with SNR 10, 20, 30 and 40 dB, corresponds to results shown in Fig. 3(b) of the referred paper.  \n\n\n************\n\n'...\\FUMI_code_and_demo\\gen_synthetic_data_code':\nadd_noise_to_dB.m                                                   -  adds Gaussian white noise to synthetic data  \ndrchrnd.m                                                           -  generates random vector following Dirichlet distribution  \ngen_individual_LMM_point.m                                          -  generates individual synthetic data point following the linear mixing model  \ngen_multi_tar_mixed_data.m                                          -  generates synthetic data set following the definition of multiple instance learning problem  \n\n************\n\n'...\\FUMI_code_and_demo\\synthetic_data':\nE_truth.mat                                                         -  groundtruth endmember and wavelength information used to generate synthetic data  \nhighly_mixed_data_pt_03.mat                                         -  highly mixed synthetic data with P_t_mean=0.3; bag-level and instance-level labels  \nhighly_mixed_data_pt_05.mat                                         -  highly mixed synthetic data with P_t_mean=0.5; bag-level and instance-level labels  \nhighly_mixed_data_pt_07.mat                                         -  highly mixed synthetic data with P_t_mean=0.7; bag-level and instance-level labels  \nnoisy_data_SNR_10.mat                                               -  noisy synthetic data with SNR=10 dB; bag-level and instance-level labels  \nnoisy_data_SNR_20.mat                                               -  noisy synthetic data with SNR=20 dB; bag-level and instance-level labels  \nnoisy_data_SNR_30.mat                                               -  noisy synthetic data with SNR=30 dB; bag-level and instance-level labels  \nnoisy_data_SNR_40.mat                                               -  noisy synthetic data with SNR=40 dB; bag-level and instance-level labels  \nrandom_data.mat                                                     -  random synthetic data; bag-level and instance-level labels  \n\n\n****************************************************************\n\nFor any questions, please contact:\n\n Alina Zare  \n Email Address:zarea@missouri.edu   \n Changzhe Jiao  \n Email Address:cjr25@mail.missouri.edu  \n University of Missouri, Department of Electrical and Computer Engineering  \n\n****************************************************************\n\n% This product is Copyright (c) 2015 C. Jiao, A. Zare\n% All rights reserved.\n%\n% Redistribution and use in source and binary forms, with or without\n% modification, are permitted provided that the following conditions\n% are met:\n%\n%   1. Redistributions of source code must retain the above copyright\n%      notice, this list of conditions and the following disclaimer.\n%   2. Redistributions in binary form must reproduce the above copyright\n%      notice, this list of conditions and the following disclaimer in the\n%      documentation and/or other materials provided with the distribution.\n%   3. Neither the name of the University nor the names of its contributors\n%      may be used to endorse or promote products derived from this software\n%      without specific prior written permission.\n%\n% THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY OF MISSOURI AND\n% CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,\n% INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n% MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n% DISCLAIMED.  IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS\n% BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n% EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n% LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n% LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n% HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n% CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n% OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n% SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\n\n\n", 
  "id": 49734199
}