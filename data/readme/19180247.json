{
  "read_at": 1462550663, 
  "description": "Learning Spark", 
  "README.md": "Useful Links for learning Scala    \n====\n\n1. [Scala overview from stackoverflow](http://stackoverflow.com/tags/scala/info)  \n2. [Programming in Scala by Martin Odersky](http://book.douban.com/subject/3338669/)  A cool textbook for scala\n>Programming in Scala is the definitive book on Scala, the new language for the Java Platform that blends object-oriented and functional programming concepts into a unique and powerful tool for developers.Coauthored by the designer of the Scala language, this authoritative book will teach you, one step at a time, the Scala language and the ideas behind it.The book is carefully crafted to help you learn. The first few chapters will give you enough of the basics that you can already start using Scala for simple tasks. The entire book is organized so that each new concept builds on concepts that came before - a series of steps that promises to help you master the Scala language and the important ideas about programming that Scala embodies.A comprehensive tutorial and reference for Scala, this book covers the entire language and important libraries.\n\n1. [Scala School](http://twitter.github.io/scala_school/index.html) cheatsheet alike\n>About\nScala school started as a series of lectures at Twitter to prepare experienced engineers to be productive Scala programmers. Scala is a relatively new language, but draws on many familiar concepts. Thus, these lectures assumed the audience knew the concepts and showed how to use them in Scala. We found this an effective way of getting new engineers up to speed quickly. This is the written material that accompanied those lectures. We have found that these are useful in their own right.\n\n2. [scala-cheat-sheet](https://github.com/soulmachine/scala-cheat-sheet)  \n\n3. [Scala API Doc](http://www.scala-lang.org/api/current/index.html#package)  \n4. ***[Functional Programming Principles in Scala](https://www.coursera.org/course/progfun)***\n>Coursera:Learn about functional programming, and how it can be effectively combined with object-oriented programming. Gain practice in writing clean functional code, using the Scala programming language.  \n    \n    [Assignments](https://github.com/irwenqiang/functional-programming-principles-in-scala)    \n\n7. [Scala Support for Vim](https://github.com/scala/scala-dist/tree/master/tool-support/src/vim)\n8. [Yong  Option[T] Lai Bi Mian  NullPointerException(Zheng Li )](http://my.oschina.net/u/200745/blog/69845) \n\n\nUseful Links for learning Spark     \n====\n\n1. [Fast Data Processing with Spark](http://book.douban.com/subject/25780498/)  I don't recommend this book  \n2. [Spark Overview](http://spark.apache.org/docs/0.9.1/)\n2. [Spark Quick Start](http://spark.apache.org/docs/0.9.1/quick-start.html) A cool tutorial!   \n    [install_scala_sbt.sh](https://gist.github.com/visenger/5496675)\n3. [SparkKai Fa Zhi Nan (0.8.1Zhong Wen Ban )](http://rdc.taobao.org/?p=2024) Cool, but out-of-date  \n4. [Spark Programming Guide](http://spark.apache.org/docs/0.9.1/scala-programming-guide.html#initializing-spark)\n5. [Apache SparkXue Xi :Li Yong ScalaYu Yan Kai Fa SparkYing Yong Cheng Xu ](http://dongxicheng.org/framework-on-yarn/spark-scala-writing-application/)   \n6. [Writing Standalone Spark Programs](http://ampcamp.berkeley.edu/wp-content/uploads/2012/06/matei-zaharia-part-2-amp-camp-2012-standalone-programs.pdf)   \n7. [Movie Recommendations and More With Spark](http://mlnick.github.io/blog/2013/04/01/movie-recommendations-and-more-with-spark/) A real practice   \n8. Zaharia M, Chowdhury M, Das T, et al. [Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing](https://www.usenix.org/system/files/conference/nsdi12/nsdi12-final138.pdf)\n9. Sparks E R, Talwalkar A, Smith V, et al. [MLI: An API for Distributed Machine Learning](http://arxiv-web3.library.cornell.edu/pdf/1310.5426v2.pdf)[J]. arXiv preprint arXiv:1310.5426, 2013.\n10. Xin R S, Gonzalez J E, Franklin M J, et al. [Graphx: A resilient distributed graph system on spark](https://amplab.cs.berkeley.edu/wp-content/uploads/2013/05/grades-graphx_with_fonts.pdf)\n\n11. [Build a movie recommender with Spark](http://ampcamp.berkeley.edu/big-data-mini-course/movie-recommendation-with-mllib.html) Yet another cool practical example using spark. The data preprocessing before using ALS algorithm implemented in MLLibs is impressive!\n12. [Naives Bayes Contribution history](https://github.com/apache/spark/blob/master/mllib/src/main/scala/org/apache/spark/mllib/classification/NaiveBayes.scala#L81)\n13. [Spark Yuan Ma Fen Xi ](http://www.cnblogs.com/fxjwind/category/518904.html)\n14. [Machine Learning Library Guide](http://spark.apache.org/docs/0.9.0/mllib-guide.html)\n15. [Spark clips](http://u.memect.com/103/?tag=spark)\n16. [Spark0.9.0Ji Qi Xue Xi Bao MLlib-OptimizationDai Ma Yue Du ](http://www.cnblogs.com/kobedeshow/p/3622997.html)\n17. [RDD API](http://spark.apache.org/docs/0.9.1/api/core/index.html#org.apache.spark.rdd.RDD)\n", 
  "id": 19180247
}