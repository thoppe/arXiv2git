{
  "id": 31999511, 
  "read_at": 1462544821, 
  "README.rst": "=============================================================\nmusic is a toolbox for music synthesis (MASS modeling)\n=============================================================\n\nThis project delivers routines for music oriented sound synthesis\nin a sample based system. Music can be though of as a sample level\nDAW system, in which the objects manipulated are in fact the array\nof samples describing the sound wave that will reach a listener ear.\nThe MASS (music and audio in sample sequences) modeling is used[1][2].\n\nInstall with:\n\n    $ pip3 install music\n\nHack demo songs and make wav files with:\n\n    $ python3 tests/testSong.py\n\nTo hear testSong.wav or\n\n    $ python3 tests/testSong2.py\n\nto hear vibrosong.wav. To hack the MASS package itself, and use it from the repo, don't forget to:\n\n    $ pip install -e <path/to/repo>\n\n\nReal time is possible but not the emphasis:\nall parameters are updated sample by sample and calculations\nare made in 64 bit floating point. All operations are described by\nequations that directly relates audio samples to musical aspects.\nDetailed descriptions can be found in:\n\n- the article \"Psychophysics of musical elements in the discrete-time representation of sound\": http://arxiv.org/abs/1412.6853\n\n- the msc dissertation \"Musica no audio digital: descricao psicofisica e caixa de ferramentas\": https://github.com/ttm/dissertacao/blob/master/dissertacaoCorrigida.pdf?raw=true\n\nUsage example\n=================\nDownload messages from one GMANE list:\n\n.. code:: python\n\n    import music as m\n\n    # sine, triangle, square and sawtooth\n    # are attributes of the bt object:\n    bt=m.BasicTables()\n\n    # for frequency to midi and decibels to amplitude relations:\n    co=m.BasicConverter()\n    # try co.db2Amp .amp2Db .hz2Midi .midi2Hz \n\n    sy=m.Synth()\n\n    note=sy.render()\n    ut=m.Utils()\n    ut.write(note) # saved to fooname.wav\n\n    melody=n.hstack([sy.render(f,.2) for f in \n                      co.p2f(220,[0,7,7,5,6,7,0,4,7,0])])\n    sy.vib_depth=3.\n    sy.vib_freq=3.\n    sy.tab=bt.saw\n    section2=n.hstack([sy.render(freq,dur) for freq,dur in \n                        zip(co.p2f(110,[0,7,7,5,6,7,0,4,7,0]),\n                        [.2,.4,.2,.2,.8,.2,.4,.2,.4])])\n\n    song=n.hstack((melody,section2))\n\n    ut.write(song,\"song.wav\")\n\n    # A core purpose of the toolbox is to serve other\n    # toolboxes on the development sonic representations\n    # E.g. m.pieces.FourHubsDance is used by gmane toolbox\n    # to make sonified animations:\n    # https://www.youtube.com/watch?v=YxDiwzAUPeU\n    # sonicLine1 and sonicLine2 attributes are\n    # most basic sonic \"templates\" used by:\n    # https://pypi.python.org/pypi/gmane to make social music\n\n    # more in the way. Take a look at the above literature.\n    # Enjoy!\n", 
  "description": "MASS is Music and Audio in Sample Sequences"
}