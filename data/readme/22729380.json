{
  "read_at": 1462553356, 
  "description": "Exploring CA's and Curses", 
  "README.md": "game-o-life\n===========\n\nC.Coleman-Smith (chris.colemansmith@gmail.com)\n\nExploring Conway's game of life, curses and maybe some real graphics. \n\n## Basic Game Rules \n\nCopied from the Wikipedia article [1], charmingly this is described as a single player game.\n\nEvery cell interacts with its eight neighbours, which are the cells that are horizontally, vertically, or\ndiagonally adjacent. At each step in time, the following transitions occur:\n\n1. Any live cell with fewer than two live neighbours dies, as if caused by under-population.\n2. Any live cell with two or three live neighbours lives on to the next generation.\n3. Any live cell with more than three live neighbours dies, as if by overcrowding.\n4. Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\n\nTo avoid decisions and branches in the counting loop, the rules can be rearranged from an egocentric approach\nof the inner field regarding its neighbors to a scientific observers point: if the sum of all nine fields is\n3, the inner field state for the next generation will be life (no matter of its previous contents); if the\nall-field sum is 4, the inner field retains its current state and every other sum sets the inner field to\ndeath.\n\n\n\n\n## Requires:\n\n* CMAKE [2]\n* A C compiler\n* The Gnu Scientific Library (GLS) [3]\n* Ncurses [4]\n\n## Building, Installing and Testing\n\nThis project uses CMAKE to generate Makefiles and run tests, it is canonical to do out of place builds using cmake. An \"out of place\" builds puts all the temporary files and compiler junk into a directory that is outside the source tree.\n\nFrom the project root do:\n\n    mkdir ./build\n    cd ./build\n    cmake ..\n    make && make install\n\nCmake defaults to installing things in /usr/local, if you don't want that you should set invoke cmake as\n\n    cmake -DCMAKE_INSTALL_PREFIX:PATH=/your/install/path ..\n\nCheck backed unit tests can also be built by enabling the `BUILD_TESTING` cmake option, from the build directory \n\n    cmake -DBUILD_TESTING=on ..\n\nThe tests can be run from the `make test` target or by directly invoking `ctest` .\n\n\n## Todo\n\n1. Tests!\n2. Make game board size dynamic\n3. Separate the game logic and lifecycle from the main loop of the program\n4. Use curses for drawing a viewport into the game world that fills the terminal (http://tldp.org/HOWTO/NCURSES-Programming-HOWTO/)\n5. Allow some user navigation and interaction with the world\n6. Try smooth life: http://arxiv.org/abs/1111.1567\n\n[1]: http://en.wikipedia.org/wiki/Conway's_Game_of_Life\n[2]: http://www.cmake.org/\n[3]: http://www.gnu.org/software/gsl/\n[4]: https://www.gnu.org/software/ncurses/\n", 
  "id": 22729380
}