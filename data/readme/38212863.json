{
  "read_at": 1462549190, 
  "description": "Code and scripts for NeSi algorithm to reproduce results of arXiv paper 'Neural Simpletrons - Minimalistic Directed Generative Networks for Learning with Few Labels':", 
  "README.md": "# The NeSi algorithm - A Quick Start Guide\n\n----------\n\n## 1. Prerequisites\n- Python 2.7.x\n- 'numpy' and 'scipy', both available at [http://www.scipy.org/](http://www.scipy.org/)\n- 'matplotlib' for graphical outputs, available at [http://matplotlib.org/](http://matplotlib.org/)\n- 'mpi4py' \n- 'theano', availabe at [http://deeplearning.net/software/theano/](http://deeplearning.net/software/theano/)\n\nBefore running the algorithm, the data sets have to be downloaded and put into the /data-sets/ folder:\n\n### MNIST\nGo to [http://yann.lecun.com/exdb/mnist/](http://yann.lecun.com/exdb/mnist/) or download the files directly via:\n\n- [http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz](http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz)\n- [http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz](http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz)\n- [http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz](http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz)\n- [http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz](http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz)\n\nExtract these files into the folder './data-sets/MNIST/'.\nThere should now be four files in that folder:\n\n- t10k-images.idx3-ubyte\n- t10k-labels.idx1-ubyte\n- train-images.idx3-ubyte\n- train-labels.idx1-ubyte\n  \n### 20 Newsgroups\nGo to [http://qwone.com/~jason/20Newsgroups/](http://qwone.com/~jason/20Newsgroups/) and download the 'bydate' Matlab/Octave version, or directly via [http://qwone.com/~jason/20Newsgroups/20news-bydate-matlab.tgz](http://qwone.com/~jason/20Newsgroups/20news-bydate-matlab.tgz) and extract the content into the folder './data-sets/20 Newsgroups/'.\nThere should now be the following folders and files in that folder:\n\n- label_names.txt\n- vocabulary.txt\n- 20news-bydate/\n\t- matlab/\n    \t- train.data\n      \t- train.label\n      \t- train.map\n      \t- test.data\n      \t- test.label\n      \t- test.map\n\n----------\n     \n## 2. Execution and Configuration\nTo start the NeSi algorithm, `main.py` has to be executed with a main configuration file provided,\nwhich links to further configuration files for the data set, the neural network model and the output\noptions (which have to exist in their corresponding folders).\n\nFor GPU execution run:\n`\nTHEANO_FLAGS='device=gpu' python main.py [config_name]\n`\n\nTo reproduce the experiments of the paper `[config_name]` has the form `[dataset]/[algorithm]-L[#Labels]`, with\n    \n    [dataset]: 'MNIST' or '20\\ Newsgroups'\n    [algorithm]: 'r-NeSi', 'r+-NeSi', 'ff-NeSi' or 'ff+-NeSi'\n    [#Labels]: 10,100,600,1000,3000,60000 for MNIST or 20,40,200,800,2000,11269 for 20 Newsgroups\n    \n  e.g. to run the r+-NeSi algorithm on MNIST with 100 labels on a GPU execute\n\n  `THEANO_FLAGS='device=gpu' python main.py MNIST/r+-NeSi-L100`\n\n  e.g. to run the ff-NeSi algorithm on 20 Newsgroups with 800 labels on a GPU execute\n\n  `THEANO_FLAGS='device=gpu' python main.py 20\\ Newsgroups/ff-NeSi-L800`\n  \nFor a fast test run, use `[dataset]/[algorithm]-test` as `[config_name]`.\n  \nThe results will be stored in the ./output folder.\nThe free parameters of the algorithms can be set by editing the model configuration files under ./config/[dataset]/model/[algorithm].ini\n", 
  "id": 38212863
}