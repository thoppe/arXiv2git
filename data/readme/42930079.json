{
  "read_at": 1462548692, 
  "description": "", 
  "Readme.md": "# TensorNet\n\n\nThis is a MATLAB and Theano+Lasagne implementation of the _Tensor Train layer_ (_TT-layer_) of a neural network. For a [TensorFlow implementation](https://github.com/timgaripov/TensorNet-TF) see a separate repository.\n\nIn short, the TT-layer acts as a fully-connected layer but is much more compact and allows to use lots of hidden units without slowing down the learning and inference.   \nFor the additional information see the following paper:\n\nTensorizing Neural Networks  \nAlexander Novikov, Dmitry Podoprikhin, Anton Osokin, Dmitry Vetrov; In _Advances in Neural Information Processing Systems 28_ (NIPS-2015) [[arXiv](http://arxiv.org/abs/1509.06569)].\n\nPlease cite it if you write a scientific paper using this code.  \nIn BiBTeX format:\n```latex\n@incollection{novikov15tensornet,\n  author    = {Novikov, Alexander and Podoprikhin, Dmitry and Osokin, Anton and Vetrov, Dmitry},\n  title     = {Tensorizing Neural Networks},\n  booktitle = {Advances in Neural Information Processing Systems 28 (NIPS)},\n  year      = {2015},\n}\n```\n\n# Installation\n\n### MATLAB version\n\nInstall the [TT-Toolbox](https://github.com/oseledets/TT-Toolbox) (just download it and run `setup.m` to add everything important into the MATLAB path).\n\nInstall the [MatConvNet framework](http://www.vlfeat.org/matconvnet/) (preferably with the GPU support). TensorNet works with MatConvNet 1.0-beta11 (April 2015) and higher (the latest tested version is 1.0-beta14).  \nAdd the `mataconvnet_path/examples` folder to the MATLAB path to be able to use the `cnn_train` function.\n\nCopy this repository and add the `src/matlab` folder into the MATLAB path.\n\nNow you can test TensorNet using the command\n``` matlab\nvl_test_ttlayers\n```\n\nTo test GPU support (if you have compiled MatConvNet in GPU mode) use:\n``` matlab\nvl_test_ttlayers(1)\n```\n\n### Theano+Lasagne version\nInstall fresh version of [Theano](http://deeplearning.net/software/theano/) and [Lasagne](https://lasagne.readthedocs.org/en/latest/).\n\nCopy this repository and add the `src/python` folder into the Python path.\n\n# Pretrained models\n### MNIST shapes\nIn this experiment we compared how shapes and ranks influence the performance of the TT-layer using the MNIST dataset (see figure 1 and section 6.1 of the original paper for the details). Download [models in the MatConvNet format](https://dl.dropboxusercontent.com/u/49234889/tensor-net/mnist_shapes/mnist_shapes.mat) (.mat file, 2.9 Mb) and [preprocessed MNIST dataset](https://dl.dropboxusercontent.com/u/49234889/tensor-net/mnist_shapes/imdb.mat) (.mat file, 132 Mb).\n\nYou will find a cell array of models with metadata, the first and the last epochs of training included for each model. Example of usage (computing the validation error):\n``` matlab\nimdb = load('imdb.mat');\nload('mnist_shapes.mat');\n% Choose (for example) the 5-th model whose shape equal 4 x 8 x 8 x 4.\nnet = models{5}.lastEpoch.net;\n% Remove the softmax layer (unnecessary during the validation).\nnet.layers(end) = [];\nvalIdx = find(imdb.images.set == 3);\nres = vl_simplenn(net, imdb.images.data(:, :, :, valIdx));\nscores = squeeze(res(end).x);\n[bestScore, best] = max(scores);\nacc = mean(best == imdb.images.labels(valIdx));\nfprintf('Accuracy is %f\\n', acc);\n```\n\n# Reproducing experiments\nRight now just one basic example on the MNIST dataset is available (more experiments from the paper are coming soon). To try it out, navigate to the `experiments/mnist` folder and type the following command in the MATLAB prompt:\n``` matlab\n[net_tt, info_tt] = cnn_mnist_tt('expDir', 'data/mnist-tt');\n```\n", 
  "id": 42930079
}