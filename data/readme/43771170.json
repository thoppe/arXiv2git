{
  "README": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t\tCONTENTS\n \n - QEdark basic description\n - Important info, disclaimer and acknowledgements\n - QEdark quick installation guide\n - QEdark execution guidelines\n - To Do list\n\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t\tQEdark\n\n Code to evaluate and integrate the form factor as in eq (3.16) \n in Essig et.al. --  arXiV:1509.01598 and integrals of this \n quantity in order to calculate the DM-electron scattering rate.\n \n\n\n QEdark calculation modes:\n \n - calculation_mode='f2' gives eq. (4.4) as the output quantity. \n\n - calculation_mode='multimass' computes the crystal form factor \n  multiplied by the weight eta(vmin(Ei, Ei')), giving an output\n  quantity that is proportional to the scattering rate.\n \n\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\t\tIMPORTANT\n\n QEdark is an extension to the PWscf code of the \n Quantum ESPRESSO package. It has been written to work with\n QE version v.5.1.2. It may work with other versions but this \n is not guranteed. \n\n We greatly acknowledge the Quantum ESPRESSO team for making \n their code community accessible. See the following publication \n for details\n P. Giannozzi et.al. J. Phys. Condens. Matter 21, 395502 (2009)\n\n\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\n         QEdark QUICK INSTALLATION GUIDE\n\n 1) Download QuantumESPRESSO v.5.1.2 from\n www.qe-forge.org/gf/download/frsrelease/185/753/espresso-5.1.2.tar.gz\n\n\n 2) Modify pwscf.f90 by including the code line\n       call qedark()\n    just above the line\n       CALL stop_run( exit_status )\n\n\n \n 3) Modify PW/src/Makefile to include dependencies on two\n    new files. Simply add\n\n      qedark.o \\\n      qedark_routines.o \\\n      qedark_f2.o \\\n      qedark_multimass.o \\\n      qedark_read_input.o \\\n\n    directly below \n       wyckoff.o \\\n\n\n 4) Copy the files qedark.f90, qedark_routines.f90, \n    qedark_f2.f90 and qedark_multimass.f90\n    from QEdark_files into Quantum ESPRESSO's directory\n    PW/src/ \n\n\n 5) Run configure script in QE main directory as\n       ./configure --disable-parallel \n    \n    For OpenMP multithreaded version, run configure as\n       ./configure --disable-parallel --enable-openmp\n       \n       NOTE:QEdark v1.0 does not support OpenMPI parallelization\n\n 6) Compile by typing the following command in QE main \n    directory\n       make pw\n\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\n         QEdark QUICK EXECUTION GUIDELINES\n\n 1) The file dm.in must exist in the directory where the code\n    is being run since it contains the input data to QEdark. \n \n 2) QEdark is executed within Quantum ESPRESSO's pw.x program\n    which is copied to the bin/ directory. Execute as\n       QEdark_dir/bin/pw.x < QEinputfile > QEoutputfile\n \n 3) In order to run the multithreaded version, the value of\n    OMP_STACKSIZE will most likely need to be increased. For\n    Si and Ge we have found that setting it to 512M has been\n    enough. \n    \n    In bash this can be done by entering the commmand\n       export OMP_STACKSIZE=512M \n\n  4) Users are encouraged to get familiar with the code by \n     going through the examples in the folder QEdark_examples/, \n     which have been chosen to introduce the user into several\n     features of QEdark. \n\n  5) Previous knowledge of Quantum ESPRESSO\n     is highly recommended. There are plenty of tutorials and \n     examples at the link\n     \t http://www.quantum-espresso.org/tutorials/\n     \n\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\t\t TO-DO \n\n      1) Make code more modular. In particular, split into one routine\n         to evaluate the form factors and another external\n         routine to carry out the momentum space integrals and \n         sum over bands\n\n      2) Eliminate all the G-vector index tables by\n         understanding the G-vector sorting -- BYPASSED BY REDIFINING q-grid\n\n      3) Make this calculation an external program to pw.x\n\n      4) Parallelize with MPI\n\n      5) IMPROVE CODE COMMENTS!!!! In particular explain the algorithm for \n         selecting the G-vectors, and the reason why the array index is needed\n\n      6) Rearrange create_bins so that unnecessary variables don't need to be passed\n         depending on the case. Also, put the whole binning stuff into a module, so \n         that allocatable arrays can be passed. This way we can allocate binedges(:)\n         inside create_bins() instead of in formfact() (which is already too cluttered!)\n\n\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n", 
  "read_at": 1462556599, 
  "description": "QEdark code Github repository", 
  "id": 43771170
}