{
  "id": 5579276, 
  "read_at": 1462552248, 
  "README.pdf": "%PDF-1.4\r\n% ReportLab Generated PDF document http://www.reportlab.com\r\n% 'BasicFonts': class PDFDictionary \r\n1 0 obj\r\n% The standard fonts dictionary\r\n<< /F1 2 0 R\r\n /F2 3 0 R\r\n /F3 5 0 R >>\r\nendobj\r\n% 'F1': class PDFType1Font \r\n2 0 obj\r\n% Font Helvetica\r\n<< /BaseFont /Helvetica\r\n /Encoding /WinAnsiEncoding\r\n /Name /F1\r\n /Subtype /Type1\r\n /Type /Font >>\r\nendobj\r\n% 'F2': class PDFType1Font \r\n3 0 obj\r\n% Font Helvetica-Bold\r\n<< /BaseFont /Helvetica-Bold\r\n /Encoding /WinAnsiEncoding\r\n /Name /F2\r\n /Subtype /Type1\r\n /Type /Font >>\r\nendobj\r\n% 'Annot.NUMBER1': class PDFDictionary \r\n4 0 obj\r\n<< /A << /S /URI\r\n /Type /Action\r\n /URI (http://physics.nist.gov/PhysRefData/DFTdata/Tables/ptable.html) >>\r\n /Border [ 0\r\n 0\r\n 0 ]\r\n /Rect [ 62.69291\r\n 548.7736\r\n 532.5827\r\n 560.7736 ]\r\n /Subtype /Link\r\n /Type /Annot >>\r\nendobj\r\n% 'F3': class PDFType1Font \r\n5 0 obj\r\n% Font Courier\r\n<< /BaseFont /Courier\r\n /Encoding /WinAnsiEncoding\r\n /Name /F3\r\n /Subtype /Type1\r\n /Type /Font >>\r\nendobj\r\n% 'Page1': class PDFPage \r\n6 0 obj\r\n% Page dictionary\r\n<< /Annots [ 4 0 R ]\r\n /Contents 32 0 R\r\n /MediaBox [ 0\r\n 0\r\n 595.2756\r\n 841.8898 ]\r\n /Parent 31 0 R\r\n /Resources << /Font 1 0 R\r\n /ProcSet [ /PDF\r\n /Text\r\n /ImageB\r\n /ImageC\r\n /ImageI ] >>\r\n /Rotate 0\r\n /Trans <<  >>\r\n /Type /Page >>\r\nendobj\r\n% 'Page2': class PDFPage \r\n7 0 obj\r\n% Page dictionary\r\n<< /Contents 33 0 R\r\n /MediaBox [ 0\r\n 0\r\n 595.2756\r\n 841.8898 ]\r\n /Parent 31 0 R\r\n /Resources << /Font 1 0 R\r\n /ProcSet [ /PDF\r\n /Text\r\n /ImageB\r\n /ImageC\r\n /ImageI ] >>\r\n /Rotate 0\r\n /Trans <<  >>\r\n /Type /Page >>\r\nendobj\r\n% 'Page3': class PDFPage \r\n8 0 obj\r\n% Page dictionary\r\n<< /Contents 34 0 R\r\n /MediaBox [ 0\r\n 0\r\n 595.2756\r\n 841.8898 ]\r\n /Parent 31 0 R\r\n /Resources << /Font 1 0 R\r\n /ProcSet [ /PDF\r\n /Text\r\n /ImageB\r\n /ImageC\r\n /ImageI ] >>\r\n /Rotate 0\r\n /Trans <<  >>\r\n /Type /Page >>\r\nendobj\r\n% 'Page4': class PDFPage \r\n9 0 obj\r\n% Page dictionary\r\n<< /Contents 35 0 R\r\n /MediaBox [ 0\r\n 0\r\n 595.2756\r\n 841.8898 ]\r\n /Parent 31 0 R\r\n /Resources << /Font 1 0 R\r\n /ProcSet [ /PDF\r\n /Text\r\n /ImageB\r\n /ImageC\r\n /ImageI ] >>\r\n /Rotate 0\r\n /Trans <<  >>\r\n /Type /Page >>\r\nendobj\r\n% 'FormXob.pdfrw_10': class PDFStream \r\n10 0 obj\r\n<< /BBox [ 0\r\n 0\r\n 648\r\n 360 ]\r\n /Filter /FlateDecode\r\n /FormType 1\r\n /Length 2267\r\n /Resources 11 0 R\r\n /Subtype /Form\r\n /Type /XObject >>\r\nstream\r\nxYM\u001c\u0011?04X\u00029\u0018\b\f\u0018\u00029\u0018>(#B \u0019s+]\u000e\u00045\"Y|\u0012\u001aXK!\u0017.\u0005Jo\u001f\u007f,~^yn3\u007fnx[?].~\u001e\u0013~}_<]\u0011_o_`U\u001bi&6xyo\u001f\u0016\u001cc\u0012cpu!\u0012tabC'nC{th#\u001c\u0015i)\u000496l\u001d\u000bS)k\u0018SieJian \u0017\u007fox*Q|P?>\u001a\u0011\u007fk[?]\\\u0003z4\u0007?=}w.\u0018\u0006\u001bjuj,\"\u001cm\u001dZp}\u000bx@&r\u0010Y9zD\u001cW3ut7cqh5>\u0017L,\u0014%\u001fu\u00121x`^Zh\u0000\u0001\u0000!`?\u0018L`\u0018\u0012\f \u0011\u001c^aYN\u0006'\u0003'b6yGaPhn\u001fXF\u001f5sQq\u0005Bu\u0000FzT\u000e-->\\S{~\u001cQ\u0017_a\u0002\u0010Z\u0012CT\u00132\u001c|D\u0011)3StI40uJ'\u00160$w`vhJ!:ed\u0010A+}\u0014(4s[VeKIx4l[?]De\u0018)\u0012\"Q}\f_vw0\u001aN3ghk\u0001;*$\u0007 \u001a%\u0001'!;A^`f\u001co\u0001\u0001<\u0003@b{6G9o_9y \n\\L\u001f\u0006\nRS 5[?]yj/$aF\t-(,i)n@\"\"$}[P3x)F@\u0005\f\u000f[\u000fq,gy`\u000fmOtmU7l~!mk\u001e\u0016wV`ot%ps\u000f\u0013g'\u001e \u001f~/^g78;)QNH$8\u001f\nG'{\".\u0017HQ\u001d)H9#J'|:_\u001f\u000b2\u000e!\u0002*Laj17\u0010C\u001dq*y\u001bIR]z%S}\u0018F\u0006[?]ev\u0006\u001eT-\u0003V;iGs4t#[?]>R:R\u001bWs\u0012N`\u000e?)7\u0006%}<\r_ j5|\u001a{\u0018<'KO:z2)\u0004\u0007b=pt$\u0003`\u000f^~\u0018r`{J}+t}\u0013\"ql+\u0018\\e&Ne\u0013s1c[?]XsZR%\u001ceo<epqa;\u0007:S\u0012=(aQ%C9;y\u0001L@\u0013g1`?5hp/n\f\u0013\u0018)\u0007EKen6I]8G\u001b\t|\u0002O\u0013a\u0003)N\u0004@\u001a\u0006uW\u0004\ti\u0003\\gPjK3\u0010\rx\u0006\u0010X'\u0004^\u00030J\u0004+\u0002Ki\u0019E\u0001H;P\rfth\u000f|Agh/1b&e\u001dkOHn\u0016C\u0018Ly\u001bsR\u0014;)Ta\u001f\u007f\u000f\u007fT\u0006oX&Q!'!}^iL->,Y1aB\"Zn(D\u0011e\u001c7\u0019dDi5I\u0013\u000f\u001ezo\u0016\u0017 \u0006'_\u0004[Zc\u0018\u0017IvvYKX\u000e\u0005G0\"NH2Ku5!\u0011\u0005\u001aQ\u0016EkN\u0004/.,$\u0007v\u001fY\tr\u0010\u0010\u00141FMIu(\u001fv1\u0018\u0006l\u0017 5\u000fu\r\u000b\f}\u00181/4zsb \u001f?,f0\u0001'4XqRTa \r8.DSQPv\u0011Rm\u000e\"\u0015-z\r\u0011\\7*= W\u0001M\u001fm\u0002qu'I|\u000f\u001d=KJe^t \u001c0\fo=\u00009\u001a^\u0017s=\u0011=\u001e9~\n\u0005\u0003^W\u00027l\u001cL>dS0F\u0018s\u0011\u0001\u001aWSh\b\nTA\u000fv@:=3\u0003yqST_Y+JM\u0015(24\u0014~\u001c+,o\u0002>8u.+U\u0001\u001aH/\u0018r\n| \u0012tW<y>Qjs?4E?\u000f\b\t\u000f[?]*z4U^z\u000eJj?om\u001bK\u000b\r19a[{ntu`F\f4@F\"I&k\u0000,e$F\u000b)[?]\u001e/wo _oTZl!](AtM\" Y=_p\u0002nm^@\u001a%&a4|\u0004R\u0015B\u0014!L\f^rK~[?]q\u007fE)~\u00190^-\u0016C5\u0003P/\u001aB7Hnz0P=F\t\f6@*Fc)J'\u007f20vJ\u0005h\u000bFs+FoZ\u0015\n\u0006D/*`n\u0014Z\u001dG\u0013c;^jv\u0019\u001fnm&R%EZ!5U:0Mu:k=\u0017H\r<F\u0010t:(*\u0019Hu%5o\\\u000bgX\u000fCPi R4~X\u0007\u0006Kendstream\r\nendobj\r\n% 'R11': class PDFDictionary \r\n11 0 obj\r\n<< /ExtGState << /a0 << /CA 1\r\n /ca 1 >> >>\r\n /Font << /f-0-0 12 0 R >> >>\r\nendobj\r\n% 'R12': class PDFDictionary \r\n12 0 obj\r\n<< /BaseFont /TLNTRS+DejaVuSans\r\n /DescendantFonts [ 13 0 R ]\r\n /Encoding /Identity-H\r\n /Subtype /Type0\r\n /ToUnicode 16 0 R\r\n /Type /Font >>\r\nendobj\r\n% 'R13': class PDFDictionary \r\n13 0 obj\r\n<< /BaseFont /TLNTRS+DejaVuSans\r\n /CIDSystemInfo << /Ordering (Identity)\r\n /Registry (Adobe)\r\n /Supplement 0 >>\r\n /FontDescriptor 14 0 R\r\n /Subtype /CIDFontType2\r\n /Type /Font\r\n /W [ 0\r\n [ 600\r\n 634\r\n 411\r\n 277\r\n 591\r\n 615\r\n 520\r\n 317\r\n 352\r\n 636\r\n 636\r\n 392\r\n 634\r\n 633\r\n 549\r\n 633\r\n 611\r\n 612\r\n 634\r\n 974\r\n 500\r\n 277\r\n 655\r\n 634\r\n 634\r\n 633\r\n 817 ] ] >>\r\nendobj\r\n% 'R14': class PDFDictionary \r\n14 0 obj\r\n<< /Ascent 928\r\n /CapHeight 1166\r\n /Descent -235\r\n /Flags 4\r\n /FontBBox [ -1020\r\n -415\r\n 1680\r\n 1166 ]\r\n /FontFamily (DejaVu Sans)\r\n /FontFile2 15 0 R\r\n /FontName /TLNTRS+DejaVuSans\r\n /ItalicAngle 0\r\n /StemH 80\r\n /StemV 80\r\n /Type /FontDescriptor >>\r\nendobj\r\n% 'R15': class PDFStream \r\n15 0 obj\r\n<< /Filter /FlateDecode\r\n /Length 5610\r\n /Length1 7520 >>\r\nstream\r\nxXy|TEsk;:Qian -1!@\"%\u0004\b\fq\u0002\f\u0000\"bD}$DRB@d\f K\u0006\u0003\"tC@\bh\u0000S1\u0011Yi[;m{}SvU[?]:wW!\u0010'e\u0004H[?]\u0007g\u0014+%$\fG\u001fQ\f$9\u000f.<B\u001c'{_Zx=,\u0012~%v~\u0019\u0005mMg\u0011\u0012Tc\u0003+[?]Ikjvq_4k\u0006!\u0010\u0012<\u0017\u000fxXZ)/6?x!w5gB\\H\nvV!a\u001eF6R&-w\u0010-)h;\u001a](El,\u0015/p\u0005_Je;p2\u0013\u001a#f^\u001e%VaTfKj\u001d$fCZ?|W\u00054ZEf\u001a\u001bi\u0016\u001aDAi\u0003O\u001d\u007fYc'l\\+?k\u0002*AGR\u00153?Fl#8XI.\u001b\u0014b5@.WJ,E\u0013fKV[F\fJiao \u000ek5140.rlM|\b\u0017\u000e\u0007m\u001d\u0007}8G2r\u0012}\u0014',\u001fzSH*,>k\u0014rtb\u001dyi}bOz#\u0014\u0019FT*\u0013y\u0012*qY)\u0003Ldj%D\u001ee\u000er(uq>\u00143hZv=7A{6ybd\f\u0019)*\u0016bQ\u001bvZ\f<;c%2\u001cTm#\u001d$\u0007q0\bI<M$)JM't0\fR,EX)=\u00142NiRZH\n\u00034phaZ\u0002%bP)UrTl#l6.\\P?S;y\u0004i4v[~z[V)=\u0017jj6b\u0014}l'NRC\u0019uJMHl^p\u000ed3[p\u007f\u001861[?]kx[?][?]\u0019Q\u001cQ\u0013Ac\bI2i&td:y\u001f%YM\u0017\"ZC\u001cEN]\u0002\u0012G\u000bc@\u0007m\u0014-QH\u0007MLai 9?4MjD\u0015/1r~tz\u0006h\u001b\u001feE{Qp\u001auJ W<CMFf6Lt:'EFF\rHF9\u0010UCh`.!khNlQZ|oiFiEp5[pw\u0004\u0006g(\u0003$<spC\u001f*8D7D?0h\"Q4%\u0013\r\u0002Y^AZBo r}XnW(c^6\u0011L`\u0000@(\u0013Y=\b]BrRf\u001fJZ$$H\nA\u0017/.k\":rlL|B[?]\u0000\u0011\u0007 \na]++gl[?]_xjGg{\u0007}^/Vn:\u0014\u001b{<=}dy\u001cw@i'Zh&\u001d\u0004o@Z\u000f\u0018\r%!\u0012\u0006\u0006ON\u0013\u0002%cx\u000e$<BnVf^\u0002\u0015j\n0mw\u0005:\rC\u001b\u001alS[,RB\u000fy\u001c9\u001a\u0007`\b\u00114\u00119 6=Ma\\7\u001e,>;&_;=\u0019>\u001a\u007ft/\u0013\u0018\u0015\u0006\t!qd'V\f$FC!A5V@\u0017\t79[?]\u001d;\u0004b+r\u001aB\f;<\u0011~\"MWCVojC\u0006o\u000b22IO\u001d\u001d\u0013O{2zdac7e9\u00170E\u001b\\@b|&:|+EzphG\u0003\u0006E\\l\u0015#^>zmG4\u001cWNU\u0004XO\\c#5lCt\u0001.\bw8CZ\nj\r\u0005ZXB&\u001awjys\u001bCh`OTsD8\t3I\u001aOjbTE\u0019>Fb \n=[?]*fj\u0000&VZV\r>c\u00169\u000bwj[?]-7b\tK\u000fZ\u0015<i\u000f\u001a5>].%bEc.l[eU\u001d57n\u000b[?]IW\u001e\u0013Sy\u0003I$<\b<0\u0017\u0000XoB\u0017p,,\">F\u00165*I\u0003ww9mh*\fzS'j\u0010I\u0016\u0016}\u000bVhwi-=\rXvavxhQ;a\u001f8\u001dag>O?F\\\u0012W#\\u{ge\u0012\u001d<s\u001eUs\u0002#\f\u0015fXL%M:[?]%UsfPMn\u000e;wh\u0017q%+\u0015x-[WxmSl{}l-WwT`]p\u001d:\u0000WpPqbn\\)M+Zn\f\u0018Ld}T9'M-\u0015b5\u000epZe5\u001a'gzO.seNz-g{vuh_*O&eSie{Y6:8a?=h||x55d{\u0016\u001cuq?1\u0002e^\rO\t`s'<yb3CKH\\R}Xj*5\u0006ZJ%\u001bV0\u0002~\u0003Ekk{\u001b&N\\V;\\Kao \u0019\"\"N\u0007c\u0004e2hxe{\u0012B#\r:3\u001d,#Xt]\u0004CfHPQ1~\u000064lG\u0005Ni\t-UChong R\"R\\))Q))1\t\b\u0013D{br\"r\\99Q9919\t\t+\"*\\\u0015\u0015Q\u0015+b$$HpR\u000bbWqdqTqt,,,:$WV\u0019F\u0007vx-Gw%J%7v'^y+k\u001b;({e}g\rVX2sNIww<pmNJW'!]\u0011\u000fV\u001a\u001eqply5=\u0006\u0011oGvVSS<C=.Ky[B1\u0014I.B,<[\rBvu{\nfz3^37=D'E\b/L6]H\u0000#\u0014\"\"\nP\u000b\u0000Usj@Nx\u001a\u0015\tgbC1\u0015s\u00165q5x\u0011Y\\g\u000ecwectT4e\u001e-\\\\[?]p3;}epI,4-^zO\u00042g2\u000e-\"BZ\u0005\u0001[?]0p\u0007\u000f\u0012t6[?]9L3[\u001ccp\u000fr\u0017Gr/\u007fi}\u0007^\u0005DP]\u0018>\u0011*g\u0000U$4H\u0006Z\u001b~S7.\u00125\t\t\u0001\u00154\u0006Q \u0013Dzl\u0000[?]fY.u2\u001eaKSl%Ri+!d'*\\\u000fz%\u0004\u0012yo2@\u001a\u0007JNHG(\u001eLu9\u0012^l\\\u0005rRe\b!x]y\u001bV\n\u001f)_Uk\u000f'\"[<\u000f\rAu4\u001a;-TpB#]~-\u0018%{.\u001bk`\u001br\u0004x7\u000ffn\"n\u0013aJ\u001c/[?]JZsyp3W\t$Z>mhi\r\u000fnW5)oy\b\u0007$\u0019\u000fE&%'.\tJJO\u001b\u001fvdc*.^VKh'\u0015\u001bK.K\u007fxo|\u0003\u0007=2kvdh.~?,2XGcl\u00193\u0006|!\u0001^Pb\u000e1\bH>Oyn\u0015\u0013\u001c\u0015!go}oQ&\n\u0005P\u001aF\\SNxoWzZo\u001a1G\re9umNU\u001c'\u0012\u001f:}ZQ{'\u0011cWY7`\u0016\u0013Stgb#3ON&u0Yogo\u0019\fz%\nG4\u001d8\u001b\u0011zej4u%<5\u001b\u0014b:5gYsvi@f:8kf\u0019qI\u001b>O\r\u0006-DH}U;awr\u0016Ax>]?Yz^v/?\u001ex^Ky\u0005{mkN<3\u001dRU\u000e\u001fF\u0007\u000b );Unp\u0018McY\u0002DKn\u001e#(n5A\u00176\u001a3\u0000Iof\u0018SYl\fdI\u001eiD\u0017Ts`\u0006cSX4O'*9$]~a\u0016)<-yC\u00199\"b.eQi9KuRQuTW\u007fIXe\u0018ze/&%Atz[;Nm^[eyU\u001b_51(07._\u001fj\u007f4@cx|^[?](W<@u<?\u0000-`R?H\u0014>%pFXg'1-{L<zw%qT!*a6\u0010#1\u00113\tk%6?\u0002\u001c$\bU\b20N\u0011d\u000fDwb\u0010WZ#5\u0000YA\u0016[V8\u00137?3+H#AF4\u001c%\"g&%\u0007q\fdI\u0019\"\u000eJ\u0013%tEj\"\u0003ER/-H\u0014\u0013[\u0006lXS\"~F\u0016#p\u0015K'^\u001a)g\u0004{eE\u001bI\u0015NJP\u0016;-\"Md[?]li\b\u007fo[9\b}\\ \u001b@bc\u0016z\u0001j$? \u0012\u0002i\u0010?k5\u001b\"4\u0005'1\u001eG@_~\u007f s..c\u0019Tbq\u0017b;[E~[?]sp\u001f,O\n)V%!U]\u0016|Rkod\u000bR]J\u0012)!W|e&\u0011yMD\nI=%\u0005u\u001aBW@%J\u001aAqR2+(QkB o%d\u001f9@B5\u0003&\u000bT`>~$M0$B\u001a\u001aAT\u0013rXJ%O\u0016y&L:3-o\u007fFY:SgZ\u001a*9:\u001e^\u0007nNr~E>9S:F^uTH\u001c4\u0015j=\u001cQ#iq7x57iu\u001ee+Yc?\u0004\fDouO\u001f3-MTJz0wA\u0011AO\u001fN0-\u001eqb\u0016r;Y\u0000\u0011ANJdB\u0016HI\u0011[E>a\u001fd\u001eLV\u0001d6\u0011y\u0019^!%8~Di>l\u001d\u001cq>yV\u0007>EYR\t[?]\bo+-\u001dDpDr`;C.\u001fDZ\u0019\u0018A^8DZ'\u0013Aq\u0000\\\u0007[xN%\\\u0006\f3u$\u0007\u000bSSee6\u0001v\r?O\u0019~\u0010pS\u007f{3|W\r7p;u\u0001tjhioZ\u001f\u0002\u000eG\u0015\u0001_Ir54Ide+\\J/\u0004|.Tw;\u001a>\u0015\r\u001c.\u001e\u0005|?Z\u000e\u0017O\u0017p/N~N_\u000f\u0004/=\u0001Mp\nhtS+T8\u001d\u0004\r\u0002\u0012\u0002N\bxCq\u0001\u0004\u000b8*\u0015|n\u0013=9ZCyQ8\\&\u001dz\u000fy:Gz\r\u0007\u0005V\r\u0007\u0004\u0017P'U\u0001\nf\u0005wu\u001e\u001bFw.\u0001\b)`\r\u000b63S*l3\u0005PSja-|FR(T\u0000/mBa\u0005^\u0006\u0001M|j\u0013xU\u0017|m\"`[5Gs\u0002T5GaMTWAGz\r\bX\u001f_-`U?x\u001a|N\\ivXi\n\u001c(rT\u001bVX\u0004<?%I+<!L@\u0000O-\u0005,_\u000e\n$K\u0002\u001e5\u0012#<\u0002\u001enE\u0015\u0016B\"\u0001\u000f\t\u001f\r\u007f\u00140:st\u0004\u000f\b\u001c`Pl\u0001\u0005\u0002f\t)``o'^\u0001\u0005LZa\u001e~\u001f\u0014\u007f\nS\u0004LN'\\\u0007L\u0016>)\u0004&a,@>A@\u0001~'`=\u0016>^=\u0016[@6-`X\u000b\u001f\u0017\bc#L|\u0005K`j\u0018U\r#\u0005ZaQ3\u001b<\u00022\u0005\f\u001ff0lh\u0000\u001ffCL|3\u0000`\f\u0001\u0006V\u00188\u0007a@\u000f@\u0001 \u0004w\u0018x;\fl)&H6@:\u0002}u'\u0015zr\u0005+{!\u0006\tnx'$!m\u00016@X\u00011\u0001\u0010zF \u0000\"[*\n \u0004hp\u0001V\b\u001b\u0001\t\u0015\u0010R\u0000h`\u0001ARP(8\u0004\u0005\u0004\n\u0004\u0000+j\u001d\u0001\u0010P\u0000f\u0001&c\u00107\t0lc\u0010\u0018\u0004-\u00134Ub\u0007\u0000$Q\bp\u0000j`/P\u000b\u0010\u0001K\u000bV<C{\u007fk\u0001O\u007f\u0002^7/endstream\r\nendobj\r\n% 'R16': class PDFStream \r\n16 0 obj\r\n<< /Filter /FlateDecode\r\n /Length 337 >>\r\nstream\r\nx]n0\u0010<\u001eC\u0004&\u0001\u0012\t!UC\u007fT\u0007\u0000{I\f95\u001e+\u0004=^UBd\u000bVn%SAG\"%5%h5Q:/<[?][?]bW=w\u000eJK_[?]\u001f\u001eY/DUE{5o\u0014{VN\u001ful\u007f\u0015_aJ=\u000blINgJrT&SE?=azyk/\u0017<Ic)T\u00033\b-\u0007e2P\u000e\u0000*<\f:2Ks\u000eg\u000bJ@\u001dH\n\u0002\f\n'zP'@!\u001f\u0013!\u0002!_\u0016|!\u0004![?]\u0003!_Ee3\u0013W\\\u0004\u0015\u001fF8m,\u001dz\\eyu\u0017yq\u0017d6\u007f\u007f\u0001c\u0000&endstream\r\nendobj\r\n% 'Page5': class PDFPage \r\n17 0 obj\r\n% Page dictionary\r\n<< /Contents 36 0 R\r\n /MediaBox [ 0\r\n 0\r\n 595.2756\r\n 841.8898 ]\r\n /Parent 31 0 R\r\n /Resources << /Font 1 0 R\r\n /ProcSet [ /PDF\r\n /Text\r\n /ImageB\r\n /ImageC\r\n /ImageI ]\r\n /XObject << /FormXob.pdfrw_10 10 0 R >> >>\r\n /Rotate 0\r\n /Trans <<  >>\r\n /Type /Page >>\r\nendobj\r\n% 'Page6': class PDFPage \r\n18 0 obj\r\n% Page dictionary\r\n<< /Contents 37 0 R\r\n /MediaBox [ 0\r\n 0\r\n 595.2756\r\n 841.8898 ]\r\n /Parent 31 0 R\r\n /Resources << /Font 1 0 R\r\n /ProcSet [ /PDF\r\n /Text\r\n /ImageB\r\n /ImageC\r\n /ImageI ] >>\r\n /Rotate 0\r\n /Trans <<  >>\r\n /Type /Page >>\r\nendobj\r\n% 'Page7': class PDFPage \r\n19 0 obj\r\n% Page dictionary\r\n<< /Contents 38 0 R\r\n /MediaBox [ 0\r\n 0\r\n 595.2756\r\n 841.8898 ]\r\n /Parent 31 0 R\r\n /Resources << /Font 1 0 R\r\n /ProcSet [ /PDF\r\n /Text\r\n /ImageB\r\n /ImageC\r\n /ImageI ] >>\r\n /Rotate 0\r\n /Trans <<  >>\r\n /Type /Page >>\r\nendobj\r\n% 'R20': class PDFCatalog \r\n20 0 obj\r\n% Document Root\r\n<< /Outlines 22 0 R\r\n /PageLabels 39 0 R\r\n /PageMode /UseNone\r\n /Pages 31 0 R\r\n /Type /Catalog >>\r\nendobj\r\n% 'R21': class PDFInfo \r\n21 0 obj\r\n<< /Author ()\r\n /CreationDate (D:20130201004932+08'00')\r\n /Creator (\\(unspecified\\))\r\n /Keywords ()\r\n /Producer (ReportLab PDF Library - www.reportlab.com)\r\n /Subject (\\(unspecified\\))\r\n /Title (dftatom: Routines for Radial Integration of Dirac, Schr\\366dinger, and Poisson Equations) >>\r\nendobj\r\n% 'R22': class PDFOutlines \r\n22 0 obj\r\n<< /Count 8\r\n /First 23 0 R\r\n /Last 30 0 R\r\n /Type /Outlines >>\r\nendobj\r\n% 'Outline.0': class OutlineEntryObject \r\n23 0 obj\r\n<< /Dest [ 6 0 R\r\n /XYZ\r\n 62.69291\r\n 659.0236\r\n 0 ]\r\n /Next 24 0 R\r\n /Parent 22 0 R\r\n /Title (Accuracy) >>\r\nendobj\r\n% 'Outline.1': class OutlineEntryObject \r\n24 0 obj\r\n<< /Dest [ 6 0 R\r\n /XYZ\r\n 62.69291\r\n 536.0236\r\n 0 ]\r\n /Next 25 0 R\r\n /Parent 22 0 R\r\n /Prev 23 0 R\r\n /Title (License) >>\r\nendobj\r\n% 'Outline.2': class OutlineEntryObject \r\n25 0 obj\r\n<< /Dest [ 6 0 R\r\n /XYZ\r\n 62.69291\r\n 485.0236\r\n 0 ]\r\n /Next 26 0 R\r\n /Parent 22 0 R\r\n /Prev 24 0 R\r\n /Title (Compilation) >>\r\nendobj\r\n% 'Outline.3': class OutlineEntryObject \r\n26 0 obj\r\n<< /Dest [ 6 0 R\r\n /XYZ\r\n 62.69291\r\n 195.6236\r\n 0 ]\r\n /Next 27 0 R\r\n /Parent 22 0 R\r\n /Prev 25 0 R\r\n /Title (Tests) >>\r\nendobj\r\n% 'Outline.4': class OutlineEntryObject \r\n27 0 obj\r\n<< /Dest [ 7 0 R\r\n /XYZ\r\n 62.69291\r\n 256.2236\r\n 0 ]\r\n /Next 28 0 R\r\n /Parent 22 0 R\r\n /Prev 26 0 R\r\n /Title (CMake Options \\(Python and C Bindings, Release Build, Lapack\\)) >>\r\nendobj\r\n% 'Outline.5': class OutlineEntryObject \r\n28 0 obj\r\n<< /Dest [ 8 0 R\r\n /XYZ\r\n 62.69291\r\n 150.5943\r\n 0 ]\r\n /Next 29 0 R\r\n /Parent 22 0 R\r\n /Prev 27 0 R\r\n /Title (Usage) >>\r\nendobj\r\n% 'Outline.6': class OutlineEntryObject \r\n29 0 obj\r\n<< /Dest [ 9 0 R\r\n /XYZ\r\n 62.69291\r\n 630.6236\r\n 0 ]\r\n /Next 30 0 R\r\n /Parent 22 0 R\r\n /Prev 28 0 R\r\n /Title (Development) >>\r\nendobj\r\n% 'Outline.7': class OutlineEntryObject \r\n30 0 obj\r\n<< /Dest [ 9 0 R\r\n /XYZ\r\n 62.69291\r\n 445.2236\r\n 0 ]\r\n /Parent 22 0 R\r\n /Prev 29 0 R\r\n /Title (Structure Of The Program) >>\r\nendobj\r\n% 'R31': class PDFPages \r\n31 0 obj\r\n% page tree\r\n<< /Count 7\r\n /Kids [ 6 0 R\r\n 7 0 R\r\n 8 0 R\r\n 9 0 R\r\n 17 0 R\r\n 18 0 R\r\n 19 0 R ]\r\n /Type /Pages >>\r\nendobj\r\n% 'R32': class PDFStream \r\n32 0 obj\r\n% page stream\r\n<< /Length 5074 >>\r\nstream\r\n1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET\r\nq\r\n1 0 0 1 62.69291 717.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 28 Tm /F2 20 Tf 24 TL 3.254882 0 Td (dftatom: Routines for Radial Integration of Dirac,) Tj T* 56.65 0 Td (Schr\\366dinger, and Poisson Equations) Tj T* -59.90488 0 Td ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 671.0236 cm\r\nq\r\nBT 1 0 0 1 0 26 Tm .023314 Tw 12 TL /F1 10 Tf 0 0 0 rg (This library implements accurate and efficient radial Schr\\366dinger and Dirac shooting-method solvers. They) Tj T* 0 Tw .276457 Tw (work with any grid and any numerical potential. In addition, it also implements a radial Poisson solver and) Tj T* 0 Tw (density functional theory self-consistency cycle.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 638.0236 cm\r\nq\r\nBT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Accuracy) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 596.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.369985 Tw (With the provided meshes, the solvers \\(both Schr\\366dinger and Dirac\\) can converge to at least 1e-8 Ha) Tj T* 0 Tw 1.209983 Tw (accuracy \\(with double precision of approximately 16 significant digits\\) for all eigenvalues and total DFT) Tj T* 0 Tw (energies for all atoms up to Uranium \\(Z=92\\).) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 566.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .704597 Tw (The converged nonrelativistic and relativistic results agree with NIST benchmarks to the stated accuracy) Tj T* 0 Tw (of those benchmarks \\(2e-6 Ha in eigenvalues and 1e-6 Ha in total energies\\).) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 548.0236 cm\r\nq\r\n0 0 .501961 rg\r\n0 0 .501961 RG\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (http://physics.nist.gov/PhysRefData/DFTdata/Tables/ptable.html) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 515.0236 cm\r\nq\r\nBT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (License) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 497.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This program is MIT licensed, see the LICENSE file for details.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 464.0236 cm\r\nq\r\nBT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Compilation) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 422.0236 cm\r\nq\r\nBT 1 0 0 1 0 26 Tm .660542 Tw 12 TL /F1 10 Tf 0 0 0 rg (The main code is standard Fortran 95 with no extensions and so can be compiled with any standard f95) Tj T* 0 Tw .061647 Tw (conforming compiler. The optional C interface requires Fortran 2003 ) Tj /F3 10 Tf (iso_c_binding ) Tj /F1 10 Tf (module. N.B.: Due) Tj T* 0 Tw (to a bug in older versions of the Intel ifort compiler, ver. 12.0.191 or later is required.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 404.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We provide CMake and standard Makefiles. To use the standard Makefiles, do \\(from the top directory\\):) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 370.8236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 24 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (make -f Makefile.manual) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 314.8236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .83152 Tw (The provided Makefile.manual uses the gfortran compiler to build the \\(slow, extensively checked\\) debug) Tj T* 0 Tw .53811 Tw (version of the library. Modify as desired for your preferred compiler/options \\(in particular, to build a faster) Tj T* 0 Tw .238651 Tw (release version; see comments in Makefile.manual\\). The optional C and Python interfaces are not built by) Tj T* 0 Tw (default.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 296.8236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To use CMake, do \\(from the top directory\\):) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 251.6236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 36 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (cmake .) Tj T* (make) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 207.6236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.287126 Tw (The first command generates the required Makefiles and the second command runs them. The default) Tj T* 0 Tw 1.47436 Tw (build uses your default Fortran compiler to make a debug version without C or Python interfaces \\(see) Tj T* 0 Tw (below how to enable them or change other build options or the compiler\\).) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 174.6236 cm\r\nq\r\nBT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Tests) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 144.6236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 3.371318 Tw (It's important to check that the routines calculate correctly, before you use them for any serious) Tj T* 0 Tw (calculation. To do that, execute \\(if you use CMake\\):) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 87.42362 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 48 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL ($ make test) Tj T* ([...]) Tj T* (100% tests passed, 0 tests failed out of 15) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\n \r\nendstream\r\nendobj\r\n% 'R33': class PDFStream \r\n33 0 obj\r\n% page stream\r\n<< /Length 3964 >>\r\nstream\r\n1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET\r\nq\r\n1 0 0 1 62.69291 727.8236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 36 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL  T* (Total Test time \\(real\\) = 367.75 sec) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 707.8236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or \\(if you use hand written Makefiles\\):) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 614.6236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 84 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 62 Tm /F3 10 Tf 12 TL ($ make -f Makefile.manual test) Tj T* ([...]) Tj T* (make[2]: Leaving directory `/home/ondrej/repos/dftatom/tests/atom_U') Tj T* (make[1]: Leaving directory `/home/ondrej/repos/dftatom/tests') Tj T*  T* (All tests passed.) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 570.6236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .012619 Tw (it will take around 6 minutes to run for release compilation \\(not debug\\), all tests should pass \\(in both cases) Tj T* 0 Tw .289987 Tw (you should see the summary above saying that all tests have passed\\). Here are examples of the output if) Tj T* 0 Tw (there is any error for CMake:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 429.4236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 132 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 110 Tm /F3 10 Tf 12 TL ($ make test) Tj T* ([...]) Tj T* (93% tests passed, 1 tests failed out of 15) Tj T*  T* (Total Test time \\(real\\) =   9.36 sec) Tj T*  T* (The following tests FAILED:) Tj T* (     13 - conv_lda \\(Failed\\)) Tj T* (Errors while running CTest) Tj T* (make: *** [test] Error 8) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 409.4236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and manual Makefiles:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 268.2236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 132 re B*\r\nQ\r\nq\r\nBT 1 0 0 1 0 110 Tm 12 TL /F3 10 Tf 0 0 0 rg ($ make -f Makefile.manual test) Tj T* ([...]) Tj T* (Test failed: error =   8.99E-04   ) Tj (>) Tj (   5.00E-04 specified.) Tj T* ( Aborting...) Tj T* (STOP 1) Tj T* (make[2]: *** [test] Error 1) Tj T* (make[2]: Leaving directory `/home/ondrej/repos/dftatom/tests/lda') Tj T* (make[1]: *** [test] Error 2) Tj T* (make[1]: Leaving directory `/home/ondrej/repos/dftatom/tests') Tj T* (make: *** [test] Error 2) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 214.2236 cm\r\nq\r\nBT 1 0 0 1 0 24.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (CMake Options \\(Python and C Bindings, Release Build,) Tj T* (Lapack\\)) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 184.2236 cm\r\nq\r\nBT 1 0 0 1 0 14 Tm 1.50311 Tw 12 TL /F1 10 Tf 0 0 0 rg (CMake has many standard options, see ) Tj /F3 10 Tf (man cmake) Tj /F1 10 Tf (. For example you can set the compiler by doing) Tj T* 0 Tw (\\(make sure you delete ) Tj /F3 10 Tf (CMakeCache.txt ) Tj /F1 10 Tf (if you ran CMake before\\):) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 151.0236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 24 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (FC=ifort cmake .) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 131.0236 cm\r\nq\r\nBT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can set whether to build ) Tj /F3 10 Tf (Debug ) Tj /F1 10 Tf (or ) Tj /F3 10 Tf (Release ) Tj /F1 10 Tf (builds by:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 85.82362 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 36 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (cmake -DCMAKE_BUILD_TYPE=Release .) Tj T* (cmake -DCMAKE_BUILD_TYPE=Debug .) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\n \r\nendstream\r\nendobj\r\n% 'R34': class PDFStream \r\n34 0 obj\r\n% page stream\r\n<< /Length 5702 >>\r\nstream\r\n1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET\r\nq\r\n1 0 0 1 62.69291 729.0236 cm\r\nq\r\nBT 1 0 0 1 0 26 Tm 2.727045 Tw 12 TL /F1 10 Tf 0 0 0 rg (The default compiler options that will be used for each build are specified for gfortran and ifort in) Tj T* 0 Tw 1.220814 Tw /F3 10 Tf (cmake/UserOverride.cmake ) Tj /F1 10 Tf (\\(for other compilers, the default CMake options will be used\\). You can) Tj T* 0 Tw (set your own compiler options for each build by:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 683.8236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 36 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (cmake -DCMAKE_Fortran_FLAGS_RELEASE=\"-O3\" .) Tj T* (cmake -DCMAKE_Fortran_FLAGS_DEBUG=\"-g\" .) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 639.8236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.881412 Tw (Besides the standard options above, we provide several options specific for dftatom. By default, only) Tj T* 0 Tw .606235 Tw (Fortran code is compiled. To enable C and Python bindings, first install Cython and NumPy, for example) Tj T* 0 Tw (in Ubuntu 12.04:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 606.6236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 24 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (apt-get install cython python-numpy) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 586.6236 cm\r\nq\r\nBT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and then you have to use CMake and set the ) Tj /F3 10 Tf (WITH_PYTHON ) Tj /F1 10 Tf (CMake variable to ) Tj /F3 10 Tf (yes) Tj /F1 10 Tf (. You can either do:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 541.4236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 36 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (cmake -DWITH_PYTHON=yes .) Tj T* (make) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 509.4236 cm\r\nq\r\nBT 1 0 0 1 0 14 Tm 1.567126 Tw 12 TL /F1 10 Tf 0 0 0 rg (Alternatively you can also just edit the generated ) Tj /F3 10 Tf (CMakeCache.txt ) Tj /F1 10 Tf (file \\(this assumes that you have) Tj T* 0 Tw (already run CMake before\\) and rerun ) Tj /F3 10 Tf (make ) Tj /F1 10 Tf (again.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 491.4236 cm\r\nq\r\nBT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (To only enable the C interface \\(but not Python\\), set the variable ) Tj /F3 10 Tf (WITH_C_INTERFACE ) Tj /F1 10 Tf (to ) Tj /F3 10 Tf (yes) Tj /F1 10 Tf (.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 461.4236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .505542 Tw (To run Python API tests \\(to make sure that things got compiled properly and that the Python module can) Tj T* 0 Tw (be imported\\):) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 360.8176 cm\r\nq\r\nq\r\n.952737 0 0 .952737 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.927412 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 492 96 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 74 Tm /F3 10 Tf 12 TL ($ PYTHONPATH=. dftatom/test_runner) Tj T* (============================= test process starts ==============================) Tj T* (executable:   /home/ondrej/repos/qsnake/local/bin/python  \\(2.6.4-final-0\\)) Tj T*  T* (tests/test_dftatom.py[4] ....                                               [OK]) Tj T*  T* (=================== tests finished: 4 passed in 1.90 seconds ===================) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 316.8176 cm\r\nq\r\nBT 1 0 0 1 0 26 Tm 3.304104 Tw 12 TL /F1 10 Tf 0 0 0 rg (This will use the ) Tj /F3 10 Tf (dftatom ) Tj /F1 10 Tf (module from the current directory \\(that's why we need to add ) Tj /F3 10 Tf (. ) Tj /F1 10 Tf (to) Tj T* 0 Tw .79881 Tw /F3 10 Tf (PYTHONPATH ) Tj /F1 10 Tf (so that Python can find the module\\). To install the module into a different directory, do for) Tj T* 0 Tw (example:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 277.7943 cm\r\nq\r\nq\r\n.630555 0 0 .630555 0 0 cm\r\nq\r\n1 0 0 1 6.6 10.46697 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 744 48 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL (cmake -DWITH_PYTHON=yes -DCMAKE_INSTALL_PREFIX=\"$HOME/usr\" -DPYTHON_INSTALL_PATH=\"$HOME/usr/lib/python2.7/site-packages\" .) Tj T* (make) Tj T* (make install) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 257.7943 cm\r\nq\r\nBT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This will install it into ) Tj /F3 10 Tf (~/usr) Tj /F1 10 Tf (.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 239.7943 cm\r\nq\r\nBT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (double_min ) Tj /F1 10 Tf (test depends on Lapack, so it is turned off by default. You can enable it by:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 194.5943 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 36 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (cmake -DWITH_LAPACK=yes) Tj T* (make) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 162.5943 cm\r\nq\r\nBT 1 0 0 1 0 14 Tm .27311 Tw 12 TL /F1 10 Tf 0 0 0 rg (You need to have ) Tj /F3 10 Tf (lapack ) Tj /F1 10 Tf (and ) Tj /F3 10 Tf (blas ) Tj /F1 10 Tf (libraries. If non-standard linking is required, modify the link options) Tj T* 0 Tw (in the file ) Tj /F3 10 Tf (tests/double_min/CMakeLists.txt ) Tj /F1 10 Tf (by hand.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 129.5943 cm\r\nq\r\nBT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Usage) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 111.5943 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Look into tests how to use the routines to get meaningful results. Run for example the Uranium LDA:) Tj T* ET\r\nQ\r\nQ\r\n \r\nendstream\r\nendobj\r\n% 'R35': class PDFStream \r\n35 0 obj\r\n% page stream\r\n<< /Length 2785 >>\r\nstream\r\n1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET\r\nq\r\n1 0 0 1 62.69291 727.8236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 36 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (cd tests/atom_U) Tj T* (./F_atom_U) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 695.8236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.508735 Tw (There are also a few Python examples in the examples/ directory, you can execute them for example) Tj T* 0 Tw (using:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 662.6236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 24 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (PYTHONPATH=. python examples/atom_U.py) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 642.6236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read \"Structure Of The Program\" section below for more information.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 609.6236 cm\r\nq\r\nBT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Development) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 591.6236 cm\r\nq\r\nBT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The C bindings are defined in ) Tj /F3 10 Tf (c_dftatom.f90) Tj /F1 10 Tf (. If you update this file, make sure you run:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 534.4236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 48 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL ($ utils/generate) Tj T* ('src/c_dftatom.h' updated) Tj T* ('dftatom/lib/c_dftatom.pxd' updated) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 490.4236 cm\r\nq\r\nBT 1 0 0 1 0 26 Tm 1.776179 Tw 12 TL /F1 10 Tf 0 0 0 rg (This will update the C ) Tj /F3 10 Tf (.h ) Tj /F1 10 Tf (file as well as Cython ) Tj /F3 10 Tf (.pxd ) Tj /F1 10 Tf (file. Then use it from C or Cython as usual,) Tj T* 0 Tw .404692 Tw (typically you probably want to export the new functionality to Python by updating the ) Tj /F3 10 Tf (.pyx ) Tj /F1 10 Tf (files and then) Tj T* 0 Tw (just:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 457.2236 cm\r\nq\r\nq\r\n1 0 0 1 0 0 cm\r\nq\r\n1 0 0 1 6.6 6.6 cm\r\nq\r\n.662745 .662745 .662745 RG\r\n.5 w\r\n.960784 .960784 .862745 rg\r\nn -6 -6 468.6898 24 re B*\r\nQ\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (make) Tj T* ET\r\nQ\r\nQ\r\nQ\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 424.2236 cm\r\nq\r\nBT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Structure Of The Program) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 394.2236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .014985 Tw (The structure of the Fortran 95 modules is described here. The relations of the most important subroutines) Tj T* 0 Tw (can be summarized in a dependency graph:) Tj T* ET\r\nQ\r\nQ\r\n \r\nendstream\r\nendobj\r\n% 'R36': class PDFStream \r\n36 0 obj\r\n% page stream\r\n<< /Length 4991 >>\r\nstream\r\n1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET\r\nq\r\n.725139 0 0 .725139 62.69291 503.9738 cm\r\n/FormXob.pdfrw_10 Do\r\nQ\r\nq\r\n1 0 0 1 62.69291 377.9738 cm\r\nq\r\nBT 1 0 0 1 0 110 Tm .553059 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (drivers ) Tj /F1 10 Tf (module contains higher level DFT subroutines ) Tj /F3 10 Tf (atom_lda ) Tj /F1 10 Tf (and ) Tj /F3 10 Tf (atom_rlda ) Tj /F1 10 Tf (that one can) Tj T* 0 Tw 3.31284 Tw (use to solve atoms. The atomic orbitals \\(radial wavefunctions\\) can be accessed in the argument) Tj T* 0 Tw 1.190574 Tw /F3 10 Tf (orbitals ) Tj /F1 10 Tf (of these functions. They are given on the radial mesh returned by the argument ) Tj /F3 10 Tf (R ) Tj /F1 10 Tf (and are) Tj T* 0 Tw .829984 Tw (normalized according to the equations \\(9\\) and \\(20\\) in the manuscript. These wavefunctions can then be) Tj T* 0 Tw 2.498443 Tw (used to construct interaction matrix elements. The radial density and Kohn-Sham energies are also) Tj T* 0 Tw .567674 Tw (returned as arguments ) Tj /F3 10 Tf (density ) Tj /F1 10 Tf (and ) Tj /F3 10 Tf (ks_energies) Tj /F1 10 Tf (. Other parameters affecting the results that can be) Tj T* 0 Tw .746905 Tw (set are mesh parameters, atomic configuration, accuracy of the eigenproblem as well as selfconsistency) Tj T* 0 Tw .91561 Tw (iterations and whether or not to use the perturbation correction, see the definitions of the subroutines in) Tj T* 0 Tw 6.655366 Tw /F3 10 Tf (drivers.f90 ) Tj /F1 10 Tf (for more details. As an example of usage, see for instance the program) Tj T* 0 Tw /F3 10 Tf (tests/atom_U/F_atom_U.f90 ) Tj /F1 10 Tf (which prints the orbitals and energies.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 359.9738 cm\r\nq\r\nBT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (dft ) Tj /F1 10 Tf (module contains utilities to solve the Kohn-Sham equations.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 281.9738 cm\r\nq\r\nBT 1 0 0 1 0 62 Tm 7.623615 Tw 12 TL /F1 10 Tf 0 0 0 rg (The radial Schr\\366dinger/Dirac integration is performed by the ) Tj /F3 10 Tf (reigen ) Tj /F1 10 Tf (module using the) Tj T* 0 Tw 1.552976 Tw /F3 10 Tf (solve_radial_eigenproblem ) Tj /F1 10 Tf (subroutine, which accepts the \\(external\\) potential as an argument ) Tj /F3 10 Tf (V) Tj T* 0 Tw .44528 Tw /F1 10 Tf (specified as an array of values on a mesh \\(argument ) Tj /F3 10 Tf (R) Tj /F1 10 Tf (\\). There are several configuration options that can) Tj T* 0 Tw .262976 Tw (be supplied, see the documentation of the ) Tj /F3 10 Tf (solve_radial_eigenproblem ) Tj /F1 10 Tf (subroutine in ) Tj /F3 10 Tf (reigen.f90) Tj /F1 10 Tf (.) Tj T* 0 Tw 8.899979 Tw (Examples of usage are given in the simple tests in ) Tj /F3 10 Tf (tests/pseudopotential/ ) Tj /F1 10 Tf (or) Tj T* 0 Tw /F3 10 Tf (tests/oscillator/) Tj /F1 10 Tf (, where the potential and mesh is constructed in the main program.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 239.9738 cm\r\nq\r\nBT 1 0 0 1 0 26 Tm .05284 Tw 12 TL /F1 10 Tf 0 0 0 rg (Finally, the low level modules ) Tj /F3 10 Tf (rschroed) Tj /F1 10 Tf (, ) Tj /F3 10 Tf (rdirac ) Tj /F1 10 Tf (and ) Tj /F3 10 Tf (rpoisson ) Tj /F1 10 Tf (handle the radial integration \\(they use) Tj T* 0 Tw 2.903314 Tw (the ) Tj /F3 10 Tf (ode1d ) Tj /F1 10 Tf (module that contains some common utilities for solving ordinary differential equations\\).) Tj T* 0 Tw (Detailed documentation of these subroutines is given in the comments in the code.) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 221.9738 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A description of all modules follows:) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 205.9738 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (rschroed.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 178.9738 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 14 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .414983 Tw (Routines in this module solve the radial Schroedinger equation outward and inward using the implicit) Tj T* 0 Tw (Adams method.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 162.9738 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (rdirac.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 135.9738 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 14 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .536651 Tw (Routines in this module solve the radial Dirac equation outward and inward using the implicit Adams) Tj T* 0 Tw (method.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 119.9738 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (rpoisson.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 92.97375 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 14 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.52248 Tw (Routines in this module solve the radial Poisson equation outward using the predictor-corrector) Tj T* 0 Tw (method \\(with Adams extrapolation/interpolation\\).) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 76.97375 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (ode1d.f90) Tj T* ET\r\nQ\r\nQ\r\n \r\nendstream\r\nendobj\r\n% 'R37': class PDFStream \r\n37 0 obj\r\n% page stream\r\n<< /Length 7480 >>\r\nstream\r\n1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET\r\nq\r\n1 0 0 1 62.69291 726.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 26 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.685697 Tw (General utilities for solving 1D ODEs. the Adams and rk4 subroutines are used by Schroedinger,) Tj T* 0 Tw 1.942651 Tw (Dirac and Poisson solvers. The integrate function is used at other places in dftatom to calculate) Tj T* 0 Tw (integrals of the radial density/orbitals.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 710.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (reigen.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 695.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 2 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Solves the radial Schroedinger/Dirac eigenproblem) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 679.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (mixings.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 664.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 2 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This module contains SCF mixing algorithms.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 648.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (mesh.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 633.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 2 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Contains mesh utilities \\(creating the exponential mesh and its derivatives\\).) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 617.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (dft.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 590.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 14 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .48248 Tw (Calculates the exchange and correlation potential, Hartree potential, and the full \\(single\\) Kohn-Sham) Tj T* 0 Tw (iteration.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 574.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (dft_data.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 547.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 14 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\nBT 1 0 0 1 0 14 Tm 1.574983 Tw 12 TL /F1 10 Tf 0 0 0 rg (Contains the ) Tj /F3 10 Tf (dft_data_t ) Tj /F1 10 Tf (type used in the DFT routines. This data type stores mesh, potential,) Tj T* 0 Tw (atomic configuration, orbitals and other parameters of the DFT problem.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 531.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (states.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 468.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 50 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\nBT 1 0 0 1 0 50 Tm 6.949974 Tw 12 TL /F1 10 Tf 0 0 0 rg (This module lists nonrelativistic and relativistic atomic configurations. The nonrelativistic) Tj T* 0 Tw .952485 Tw (configurations are the same as at NIST and are simply hardcoded in the subroutine for each atom.) Tj T* 0 Tw 2.15248 Tw (The relativistic configuration is then calculated from the nonrelativistic by splitting the occupancy) Tj T* 0 Tw 1.460888 Tw (according to the degeneracy \\(see the comments in the ) Tj /F3 10 Tf (get_atomic_states_rel ) Tj /F1 10 Tf (subroutine of) Tj T* 0 Tw (this module for more technical information\\).) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 452.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (drivers.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 401.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 38 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .538735 Tw (This module contains high level drivers for atomic SCF calculations. The idea is to use these drivers) Tj T* 0 Tw .470574 Tw (to do most frequent calculations with an exponential mesh and to get an idea how things work. They) Tj T* 0 Tw .334724 Tw (can be used as a starting point/template to write a custom solver for a particular problem, or to use a) Tj T* 0 Tw (different mesh.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 385.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (energies.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 358.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 14 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.197752 Tw (Calculates Hydrogen nonrelativistic and relativistic energies \\(exact\\), Thomas-Fermi \\(TF\\) energies) Tj T* 0 Tw (\\(only very approximate\\), TF potential and charge density \\(very accurate\\).) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 342.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (dftatom.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 303.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 26 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .83229 Tw (This module contains the high level public API \\(application programming interface\\) for dftatom. One) Tj T* 0 Tw .53686 Tw (should only be using this module from external programs \\(as long as only the high level functionality) Tj T* 0 Tw (is needed\\). For a low level usage, one can always call the individual modules directly.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 287.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (c_dftatom.f90/.h) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 260.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 14 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\nBT 1 0 0 1 0 14 Tm .327633 Tw 12 TL /F1 10 Tf 0 0 0 rg (The C API to dftatom that wraps the API exposed by the ) Tj /F3 10 Tf (dftatom ) Tj /F1 10 Tf (module and the corresponding C) Tj T* 0 Tw (header file.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 244.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (rschroed_other.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 205.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 26 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.600751 Tw (Other Schroedinger integrators, not directly used by dftatom, but available for reuse. This module) Tj T* 0 Tw 2.29816 Tw (contains various rk4 integrators and Adams predictor-corrector integrators \\(both for outward and) Tj T* 0 Tw (inward integration\\).) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 189.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (rdirac_other.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 150.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 26 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.209269 Tw (Other Dirac integrators, not directly used by dftatom, but available for reuse. This module contains) Tj T* 0 Tw .37816 Tw (various Adams predictor-corrector integrators \\(both for outward and inward integration\\) and functions) Tj T* 0 Tw (to calculate analytic asymptotic.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 134.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (rpoisson_other.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 107.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 14 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .334983 Tw (Other Poisson integrators, not directly used by dftatom, but available for reuse. This module contains) Tj T* 0 Tw (various Adams predictor-corrector integrators \\(both for outward and inward integration\\).) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 91.02362 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (ode1d_other.f90) Tj T* ET\r\nQ\r\nQ\r\n \r\nendstream\r\nendobj\r\n% 'R38': class PDFStream \r\n38 0 obj\r\n% page stream\r\n<< /Length 1426 >>\r\nstream\r\n1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET\r\nq\r\n1 0 0 1 62.69291 750.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 2 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (General utilities for solving 1D ODEs, not used directly by dftatom. They are available here for reuse.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 734.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (types.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 719.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 2 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\nBT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This module defines the ) Tj /F3 10 Tf (dp ) Tj /F1 10 Tf (double precision type.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 703.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (constants.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 688.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 2 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\nBT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Contains the mathematical constant ) Tj /F3 10 Tf (pi) Tj /F1 10 Tf (.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 672.0236 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (utils.f90) Tj T* ET\r\nQ\r\nQ\r\nq\r\n1 0 0 1 62.69291 657.0236 cm\r\n0 0 0 rg\r\nBT /F1 10 Tf 12 TL ET\r\nBT 1 0 0 1 0 2 Tm  T* ET\r\nq\r\n1 0 0 1 20 0 cm\r\nq\r\n0 0 0 rg\r\nBT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Various utilities for general use in Fortran programs.) Tj T* ET\r\nQ\r\nQ\r\nq\r\nQ\r\nQ\r\n \r\nendstream\r\nendobj\r\n% 'R39': class PDFPageLabels \r\n39 0 obj\r\n% Document Root\r\n<< /Nums [ 0\r\n 40 0 R\r\n 1\r\n 41 0 R\r\n 2\r\n 42 0 R\r\n 3\r\n 43 0 R\r\n 4\r\n 44 0 R\r\n 5\r\n 45 0 R\r\n 6\r\n 46 0 R ] >>\r\nendobj\r\n% 'R40': class PDFPageLabel \r\n40 0 obj\r\n% None\r\n<< /S /D\r\n /St 1 >>\r\nendobj\r\n% 'R41': class PDFPageLabel \r\n41 0 obj\r\n% None\r\n<< /S /D\r\n /St 2 >>\r\nendobj\r\n% 'R42': class PDFPageLabel \r\n42 0 obj\r\n% None\r\n<< /S /D\r\n /St 3 >>\r\nendobj\r\n% 'R43': class PDFPageLabel \r\n43 0 obj\r\n% None\r\n<< /S /D\r\n /St 4 >>\r\nendobj\r\n% 'R44': class PDFPageLabel \r\n44 0 obj\r\n% None\r\n<< /S /D\r\n /St 5 >>\r\nendobj\r\n% 'R45': class PDFPageLabel \r\n45 0 obj\r\n% None\r\n<< /S /D\r\n /St 6 >>\r\nendobj\r\n% 'R46': class PDFPageLabel \r\n46 0 obj\r\n% None\r\n<< /S /D\r\n /St 7 >>\r\nendobj\r\nxref\r\n0 47\r\n0000000000 65535 f\r\n0000000113 00000 n\r\n0000000233 00000 n\r\n0000000398 00000 n\r\n0000000585 00000 n\r\n0000000853 00000 n\r\n0000001012 00000 n\r\n0000001311 00000 n\r\n0000001590 00000 n\r\n0000001869 00000 n\r\n0000002161 00000 n\r\n0000004637 00000 n\r\n0000004762 00000 n\r\n0000004953 00000 n\r\n0000005359 00000 n\r\n0000005655 00000 n\r\n0000011388 00000 n\r\n0000011831 00000 n\r\n0000012153 00000 n\r\n0000012433 00000 n\r\n0000012714 00000 n\r\n0000012873 00000 n\r\n0000013209 00000 n\r\n0000013334 00000 n\r\n0000013502 00000 n\r\n0000013684 00000 n\r\n0000013870 00000 n\r\n0000014050 00000 n\r\n0000014287 00000 n\r\n0000014467 00000 n\r\n0000014653 00000 n\r\n0000014821 00000 n\r\n0000014979 00000 n\r\n0000020152 00000 n\r\n0000024215 00000 n\r\n0000030016 00000 n\r\n0000032900 00000 n\r\n0000037990 00000 n\r\n0000045569 00000 n\r\n0000047098 00000 n\r\n0000047269 00000 n\r\n0000047346 00000 n\r\n0000047423 00000 n\r\n0000047500 00000 n\r\n0000047577 00000 n\r\n0000047654 00000 n\r\n0000047731 00000 n\r\ntrailer\r\n<< /ID \r\n % ReportLab generated PDF document -- digest (http://www.reportlab.com) \r\n [(\\265\\363A\\352\\231\\250\\000\\200!\\313\\350\\370\\271\\247\\306\\325) (\\265\\363A\\352\\231\\250\\000\\200!\\313\\350\\370\\271\\247\\306\\325)] \r\n\r\n /Info 21 0 R\r\n /Root 20 0 R\r\n /Size 47 >>\r\nstartxref\r\n47778\r\n%%EOF\r\n", 
  "README.rst": "dftatom: Routines for Radial Integration of Dirac, Schrodinger, and Poisson Equations\n=====================================================================================\n\nThis library implements accurate and efficient radial Schrodinger and Dirac\nshooting-method solvers. They work with any grid and any numerical potential.\nIn addition, it also implements a radial Poisson solver and density functional\ntheory self-consistency cycle.\n\nArticle\n-------\n\nDetailed description of methods, convergence and implementation is in the\nfollowing article:\n\nOndrej Certik, John E. Pask, Jiri Vackar, dftatom: A robust and general\nSchrodinger and Dirac solver for atomic structure calculations, Computer\nPhysics Communications, Volume 184, Issue 7, July 2013, Pages 1777-1791, ISSN\n0010-4655,\n`10.1016/j.cpc.2013.02.014 <http://dx.doi.org/10.1016/j.cpc.2013.02.014>`_.\nPreprint: `arXiv:1209.1752 <http://arxiv.org/abs/1209.1752>`_.\n\nThe version of the code published with the article is ``v1.0.2``.\n\nAccuracy\n--------\n\nWith the provided meshes, the solvers (both Schrodinger and Dirac) can converge\nto at least 1e-8 Ha accuracy (with double precision of approximately 16\nsignificant digits) for all eigenvalues and total DFT energies for all atoms up\nto Uranium (Z=92).\n\nThe converged nonrelativistic and relativistic results agree with NIST\nbenchmarks to the stated accuracy of those benchmarks (2e-6 Ha in eigenvalues\nand 1e-6 Ha in total energies).\n\nhttp://physics.nist.gov/PhysRefData/DFTdata/Tables/ptable.html\n\nLicense\n-------\n\nThis program is MIT licensed, see the LICENSE file for details.\n\nCompilation\n-----------\n\nThe main code is standard Fortran 95 with no extensions and so can be compiled\nwith any standard f95 conforming compiler. The optional C interface requires\nFortran 2003 ``iso_c_binding`` module.\nN.B.: Due to a bug in older versions of the Intel ifort compiler, ver. 12.0.191\nor later is required.\n\nWe provide CMake and standard Makefiles. To use the standard Makefiles, do\n(from the top directory)::\n\n   make -f Makefile.manual\n\nThe provided Makefile.manual uses the gfortran compiler to build the (slow,\nextensively checked) debug version of the library. Modify as desired for your\npreferred compiler/options (in particular, to build a faster release version;\nsee comments in Makefile.manual). The optional C and Python interfaces are not\nbuilt by default.\n\nTo use CMake, do (from the top directory)::\n\n   cmake .\n   make\n\nThe first command generates the required Makefiles and the second command runs\nthem. The default build uses your default Fortran compiler to make a debug\nversion without C or Python interfaces (see below how to enable them\nor change other build options or the compiler).\n\nTests\n-----\n\nIt's important to check that the routines calculate correctly, before you use\nthem for any serious calculation. To do that, execute (if you use CMake)::\n\n    $ make test\n    [...]\n    100% tests passed, 0 tests failed out of 15\n\n    Total Test time (real) = 367.75 sec\n\nor (if you use hand written Makefiles)::\n\n    $ make -f Makefile.manual test\n    [...]\n    make[2]: Leaving directory `/home/ondrej/repos/dftatom/tests/atom_U'\n    make[1]: Leaving directory `/home/ondrej/repos/dftatom/tests'\n\n    All tests passed.\n\n\nit will take around 6 minutes to run for release compilation (not debug), all\ntests should pass (in both cases you should see the summary above saying that\nall tests have passed). Here are examples of the output if there is any error\nfor CMake::\n\n    $ make test\n    [...]\n    93% tests passed, 1 tests failed out of 15\n\n    Total Test time (real) =   9.36 sec\n\n    The following tests FAILED:\n         13 - conv_lda (Failed)\n    Errors while running CTest\n    make: *** [test] Error 8\n\n\nand manual Makefiles::\n\n    $ make -f Makefile.manual test\n    [...]\n    Test failed: error =   8.99E-04   >   5.00E-04 specified.\n     Aborting...\n    STOP 1\n    make[2]: *** [test] Error 1\n    make[2]: Leaving directory `/home/ondrej/repos/dftatom/tests/lda'\n    make[1]: *** [test] Error 2\n    make[1]: Leaving directory `/home/ondrej/repos/dftatom/tests'\n    make: *** [test] Error 2\n\n\nCMake Options (Python and C Bindings, Release Build, Lapack)\n------------------------------------------------------------\n\nCMake has many standard options, see ``man cmake``. For example\nyou can set the compiler by doing (make sure you delete ``CMakeCache.txt`` if\nyou ran CMake before)::\n\n    FC=ifort cmake .\n\nYou can set whether to build ``Debug`` or ``Release`` builds by::\n\n    cmake -DCMAKE_BUILD_TYPE=Release .\n    cmake -DCMAKE_BUILD_TYPE=Debug .\n\nThe default compiler options that will be used for each build are specified for\ngfortran and ifort in ``cmake/UserOverride.cmake`` (for other compilers, the\ndefault CMake options will be used). You can set your own compiler options\nfor each build by::\n\n    cmake -DCMAKE_Fortran_FLAGS_RELEASE=\"-O3\" .\n    cmake -DCMAKE_Fortran_FLAGS_DEBUG=\"-g\" .\n\nBesides the standard options above, we provide several options specific for\ndftatom. By default, only Fortran code is compiled. To enable C and Python\nbindings, first install Cython and NumPy, for example in Ubuntu 12.04::\n\n    apt-get install cython python-numpy\n\nand then you have to use CMake and set the ``WITH_PYTHON`` CMake variable to\n``yes``. You can either do::\n\n    cmake -DWITH_PYTHON=yes .\n    make\n\nAlternatively you can also just edit the generated\n``CMakeCache.txt`` file (this assumes that you have already run CMake before)\nand rerun ``make`` again.\n\nTo only enable the C interface (but not Python), set the variable\n``WITH_C_INTERFACE`` to ``yes``.\n\nTo run Python API tests (to make sure that things got compiled properly and\nthat the Python module can be imported)::\n\n    $ PYTHONPATH=. dftatom/test_runner\n    ============================= test process starts ==============================\n    executable:   /home/ondrej/repos/qsnake/local/bin/python  (2.6.4-final-0)\n\n    tests/test_dftatom.py[4] ....                                               [OK]\n\n    =================== tests finished: 4 passed in 1.90 seconds ===================\n\nThis will use the ``dftatom`` module from the current directory (that's why we\nneed to add ``.`` to ``PYTHONPATH`` so that Python can find the module). To\ninstall the module into a different directory, do for example::\n\n    cmake -DWITH_PYTHON=yes -DCMAKE_INSTALL_PREFIX=\"$HOME/usr\" -DPYTHON_INSTALL_PATH=\"$HOME/usr/lib/python2.7/site-packages\" .\n    make\n    make install\n\nThis will install it into ``~/usr``.\n\nThe ``double_min`` test depends on Lapack, so it is turned off by default.\nYou can enable it by::\n\n    cmake -DWITH_LAPACK=yes\n    make\n\nYou need to have ``lapack`` and ``blas`` libraries. If non-standard linking is\nrequired, modify the link options in the file\n``tests/double_min/CMakeLists.txt`` by hand.\n\nUsage\n-----\n\nLook into tests how to use the routines to get meaningful results. Run for\nexample the Uranium LDA::\n\n    cd tests/atom_U\n    ./F_atom_U\n\nThere are also a few Python examples in the examples/ directory, you can\nexecute them for example using::\n\n    PYTHONPATH=. python examples/atom_U.py\n\nRead \"Structure Of The Program\" section below for more information.\n\nDevelopment\n-----------\n\nThe C bindings are defined in ``c_dftatom.f90``. If you update this file,\nmake sure you run::\n\n    $ utils/generate\n    'src/c_dftatom.h' updated\n    'dftatom/lib/c_dftatom.pxd' updated\n\nThis will update the C ``.h`` file as well as Cython ``.pxd`` file. Then use it\nfrom C or Cython as usual, typically you probably want to export the new\nfunctionality to Python by updating the ``.pyx`` files and then just::\n\n    make\n\nStructure Of The Program\n------------------------\n\nThe structure of the Fortran 95 modules is described here. The relations of\nthe most important subroutines can be summarized in a dependency graph:\n\n.. image:: dependency_graph.png\n    :alt: Dependency graph\n\nThe ``drivers`` module contains higher level DFT subroutines ``atom_lda`` and\n``atom_rlda`` that one can use to solve atoms. The atomic orbitals (radial\nwavefunctions) can be accessed in the argument ``orbitals`` of these functions.\nThey are given on the radial mesh returned by the argument ``R`` and are\nnormalized according to the equations (9) and (20) in the manuscript. These\nwavefunctions can then be used to construct interaction matrix elements. The\nradial density and Kohn-Sham energies are also returned as arguments\n``density`` and ``ks_energies``.  Other parameters affecting the results that\ncan be set are mesh parameters, atomic configuration, accuracy of the\neigenproblem as well as selfconsistency iterations and whether or not to use\nthe perturbation correction, see the definitions of the subroutines in\n``drivers.f90`` for more details. As an example of usage, see for instance the\nprogram ``tests/atom_U/F_atom_U.f90`` which prints the orbitals and energies.\n\nThe ``dft`` module contains utilities to solve the Kohn-Sham equations.\n\nThe radial Schrodinger/Dirac integration is performed by the ``reigen`` module\nusing the ``solve_radial_eigenproblem`` subroutine, which accepts the\n(external) potential as an argument ``V`` specified as an array of values on a\nmesh (argument ``R``).  There are several configuration options that can be\nsupplied, see the documentation of the ``solve_radial_eigenproblem`` subroutine\nin ``reigen.f90``.  Examples of usage are given in the simple tests in\n``tests/pseudopotential/`` or ``tests/oscillator/``, where the potential and\nmesh is constructed in the main program.\n\nFinally, the low level modules ``rschroed``, ``rdirac`` and ``rpoisson`` handle\nthe radial integration (they use the ``ode1d`` module that contains some common\nutilities for solving ordinary differential equations). Detailed documentation\nof these subroutines is given in the comments in the code.\n\nA description of all modules follows:\n\nrschroed.f90\n    Routines in this module solve the radial Schroedinger equation outward and\n    inward using the implicit Adams method.\n\nrdirac.f90\n    Routines in this module solve the radial Dirac equation outward and\n    inward using the implicit Adams method.\n\nrpoisson.f90\n    Routines in this module solve the radial Poisson equation outward using\n    the predictor-corrector method (with Adams extrapolation/interpolation).\n\node1d.f90\n    General utilities for solving 1D ODEs. the Adams and rk4 subroutines\n    are used by Schroedinger, Dirac and Poisson solvers. The integrate\n    function is used at other places in dftatom to calculate integrals of the\n    radial density/orbitals.\n\nreigen.f90\n    Solves the radial Schroedinger/Dirac eigenproblem\n\nmixings.f90\n    This module contains SCF mixing algorithms.\n\nmesh.f90\n    Contains mesh utilities (creating the exponential mesh and its derivatives).\n\ndft.f90\n    Calculates the exchange and correlation potential, Hartree potential,\n    and the full (single) Kohn-Sham iteration.\n\ndft_data.f90\n    Contains the ``dft_data_t`` type used in the DFT routines.\n    This data type stores mesh, potential, atomic configuration, orbitals\n    and other parameters of the DFT problem.\n\nstates.f90\n    This module lists nonrelativistic and relativistic atomic configurations.\n    The nonrelativistic configurations are the same as at NIST and are simply\n    hardcoded in the subroutine for each atom. The relativistic configuration\n    is then calculated from the nonrelativistic by splitting the occupancy\n    according to the degeneracy (see the comments in the\n    ``get_atomic_states_rel`` subroutine of this module for more technical\n    information).\n\ndrivers.f90\n    This module contains high level drivers for atomic SCF calculations.  The\n    idea is to use these drivers to do most frequent calculations with an\n    exponential mesh and to get an idea how things work. They can be used as a\n    starting point/template to write a custom solver for a particular problem,\n    or to use a different mesh.\n\nenergies.f90\n    Calculates Hydrogen nonrelativistic and relativistic energies (exact),\n    Thomas-Fermi (TF) energies (only very approximate), TF potential and charge\n    density (very accurate).\n\ndftatom.f90\n    This module contains the high level public API (application programming\n    interface) for dftatom. One should only be using this module from external\n    programs (as long as only the high level functionality is needed). For a low\n    level usage, one can always call the individual modules directly.\n\nc_dftatom.f90/.h\n    The C API to dftatom that wraps the API exposed by the ``dftatom``\n    module and the corresponding C header file.\n\nrschroed_other.f90\n    Other Schroedinger integrators, not directly used by dftatom, but available\n    for reuse. This module contains various rk4 integrators and Adams\n    predictor-corrector integrators (both for outward and inward integration).\n\nrdirac_other.f90\n    Other Dirac integrators, not directly used by dftatom, but available for\n    reuse. This module contains various Adams predictor-corrector integrators\n    (both for outward and inward integration) and functions to calculate\n    analytic asymptotic.\n\nrpoisson_other.f90\n    Other Poisson integrators, not directly used by dftatom, but available for\n    reuse. This module contains various Adams predictor-corrector integrators\n    (both for outward and inward integration).\n\node1d_other.f90\n    General utilities for solving 1D ODEs, not used directly by dftatom. They\n    are available here for reuse.\n\ntypes.f90\n    This module defines the ``dp`` double precision type.\n\nconstants.f90\n    Contains the mathematical constant ``pi``.\n\nutils.f90\n    Various utilities for general use in Fortran programs.\n", 
  "description": "Routines for Radial Integration of Dirac, Schr\u00f6dinger, and Poisson Equations"
}