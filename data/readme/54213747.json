{
  "read_at": 1462555836, 
  "description": "Python bibliography generator that extracts DOI numbers from PDFs and looks them up in the NASA ADS.", 
  "README.md": "# pybib Overview\n\npybib is a python-based automatic bibtex generator for PDF's indexed\nin the NASA ADS.\n\nGiven a list of PDF's, pybib will search each of them for its DOI\nidentifier and arXiv number if a DOI is not present. Searches are made\nvia subprocess.Popen calls to pdfgrep.\n\npybib then queries the NASA ADS to lookup the articles, generate a\nbibcode, and save the bibtex files corresponding to the PDF's as\n[bibcode].bib.\n\nYou can make pybib.py executable, and it executes via ```python```\nas defined by ```/usr/bin/env python```. This works with the anaconda\npython distribution or your distribution's python package and is\nconvenient if you alias ```pybib.py``` to, eg. ```pybib```.\n\n## Examples:\n\n### Generate Bibtex files for a.pdf, b.pdf, and c.pdf\n\n```\n$ python pybib.py a.pdf b.pdf c.pdf\n```\n\n### Generate Bibtex files for all PDF's in an arbitrary directory.\n\nThe Bibtex files will be written to the current directory and the bibtex 'File' attribute will consist of the relative path of the corresponding PDF.\n\n```\n$ python pybib.py ~/library/articles/*.pdf\n```\n\n\n\n# --catbib\n\nIf the option --catbib is used, pybib will perform the above (if no\nPDF's are given it will skip those steps) and then glob a set of all\n*.bib files in the current directory, open them, and concatenate them,\ndetecting and eliminating duplicates via their bibcodes. The\nargument to --catbib sets the name of the master bibliography thus\ngenerated.\n\n## Examples:\n\n### Generate master.bib from all the Bibtex files in the current directory\n\n```\n$ python pybib.py --catbib master.bib\n```\n\n### Generate Bibtex from PDF's first then construct master.bib\n\n(Argument order can be reversed with the same effect.)\n\n```\n$ python pybib.py *.pdf --catbib master.bib\n```\n\n\n\n# --adstoken\n\npybib will look in the file '.adstoken' for your ADS access token,\nsearching for the file first in the working directory and next in the\ndirectory where pybib.py is stored.\n\nIt will read all lines of the '.adstoken' file, matching the following regular\nexpression and setting ads.config.token to group 4 of the match.\n\n``` (\\s*)ads\\.config\\.token(\\s*)=(\\s*)(\\w*)(\\s*)#?.* ```\n\nIf you don't have an ADS token stored, you will be warned and the\nprogram will not query the ADS.\n\nTo create an ADS token:\n\n* Create an account at [https://ui.adsabs.harvard.edu]\n\n* Go to Account > Customize Settings > API Token\n\n* ``Generate a new key''\n\nTo set your ADS token, run pybib with the --adstoken option and supply\nyour token as follows. pybib will create a file named '.adstoken' for\nyou with your designated token in the directory of pybib.py. If you've\ncloned a git repo, '.adstoken' is in the .gitignore file so your token\nwon't be accidentally committed to git.\n\nIf you'd rather create an '.adstoken' file manually in the current\ndirectory, create it as follows with your token (eg. '01234abcd'):\n\n```\nads.config.token = 01234abcd # Comments\n```\n\n## Example:\n\n```\n$ python pybib.py --adstoken '01234abcd'\n```\n\n\n\n# Supported Journals/Databases\n\nVerified to work with recent articles in the following:\n\n* arXiv\n\n* ApJ\n\n* ApJ Lett.\n\n* MNRAS\n\n* Phys. Rev. Lett.\n\n* Phys. Rev. D\n\n* Phys. Rev. C\n\n\n\n# Dependencies\n\n* python ads module [https://pypi.python.org/pypi/ads]\n\n* pdfgrep v.1.4.1 [https://pdfgrep.org]\n\n\n\n# Note on the ADS API Rate Limits\n\nThe ADS API imposes rate limits for different services they provide. While the daily search rate limit is 5000 requests, the daily bibtex export limit is only 100 requests. This means that if you use pybib to query the ADS for articles more than 100 times/day, you'll get an APIResponseError which says 'Rate limit was exceeded'. NOTE, however, that you CAN process more than 100 articles every time you use pybib because pybib will send all their bibcodes to the bibtex export service in just 1 bibtex export request.\n\nIf this is a problem you can contact the ADS staff directly and request an increased bibtex export limit via ```adshelp@cfa.harvard.edu```\n\nTo see your current rate limit, usage, and UTC reset times, use the following:\n\n(Searches)\n\n```\n$ curl -v -H \"Authorization: Bearer [your ads token]\" 'https://api.adsabs.harvard.edu/v1/search/query?q=star'\n```\n\n(Bibtex Export)\n\n```\n$ curl -v -H \"Authorization: Bearer [your ads token]\" 'https://api.adsabs.harvard.edu/v1/export/bibtex'\n```\n\n\n\n# License\n\nCopyright (c) 2016, Donald E. Willcox\n\npybib is made openly available under the BSD 3-clause license. For details, see the LICENSE file.", 
  "id": 54213747
}