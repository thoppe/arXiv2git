{
  "read_at": 1462558307, 
  "description": "Tools for ThermoML parsing", 
  "README.md": "[![Build Status](https://travis-ci.org/choderalab/thermopyl.png?branch=master)](https://travis-ci.org/choderalab/thermopyl)\n[![Binstar Badge](https://binstar.org/choderalab/thermopyl-dev/badges/version.svg)](https://binstar.org/choderalab/thermopyl-dev)\n\nThermoPyL\n=========\n\nTools for exploring and using the [ThermoML Archive](http://trc.nist.gov/ThermoML.html) from the [NIST TRC](http://trc.nist.gov).\n\n## References\n\nSee the arXiv preprint:\n> Towards Automated Benchmarking of Atomistic Forcefields: Neat Liquid Densities and Static Dielectric Constants from the ThermoML Data Archive\n> Kyle A. Beauchamp, Julie M. Behr, Arien S. Rustenburg, Christopher I. Bayly, Kenneth Kroenlein, John D. Chodera\n> [arXiv:1506.00262](arXiv:1506.00262)\n\n## Installation:\n\nThe easiest way to install ThermoPyL is via the [conda](http://conda.pydata.org/docs/) package manager, which comes with the [Anaconda Scientific Python Distribution](https://store.continuum.io/cshop/anaconda/):\n```\nconda config --add channels choderalab\nconda install thermopyl\n```\n\n## Creating a local mirror of the ThermoML Archive\n\n1.  Create a local mirror of the ThermoML Archive:\n```\nthermoml-update-mirror\n```\nBy default, the archive is placed in `~/.thermoml/`.\nYou can use the environment variable `THERMOML_PATH` to store its location on your disk.\nRe-running this command will update the local mirror with new data published in the ThermoML Archive RSS feeds.\n2.  Run `thermoml-build-pandas` to create a pandas version of the database, saved as an HDF5 file in the archive directory.\nYou can restrict the data subset that will be compiled with command-line arguments. See the command-line help:\n```\n% thermoml-build-pandas --help\nusage: thermoml-build-pandas [-h] [--journalprefix JOURNALPREFIX]\n                             [--path path]\n\nBuild a Pandas dataset from local ThermoML Archive mirror.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --journalprefix JOURNALPREFIX\n                        journal prefix to use in globbing *.xml files\n  --path path           path to local ThermoML Archive mirror\n```\n3.  Use Pandas to query the experimental literature:\n```python\nimport thermopyl\n# Read ThermoML archive data into pandas dataframe\ndf = thermopyl.pandas_dataframe()\n```\nDatatypes are listed in columns (in addition to useful fields like `components`, `filename`, and `phase`):\n```python\ndatatypes = list(df.columns)\n```\nUnavailable data is labeled as `NaN`. You can use this to extract useful data by querying on data that is not `NaN`.\nFor example, to extract dataframe rows with mass densities:\n```python\n# Extract rows with mass densities\ndensities = df[np.isnan(df['Mass density, kg/m3'])==False]\n# Get a list of unique components\nunique_components = set(df['components'])\n```\n\n## Updating a locally existing copy of the ThermoML Archive via the Python API\n\nTo update an existing locally saved archive via the Python API:\n```\nimport thermopyl\nthermopyl.update_archive()\n```\n\nMaintainers\n-----------\n\n* Kyle A Beaucamp (MSKCC)\n* John D. Chodera (MSKCC)\n* Arien Sebastian Rustenburg (MSKCC)\n", 
  "id": 24298126
}