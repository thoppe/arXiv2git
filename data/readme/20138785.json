{
  "README": "Tpar -- A T-gate optimizing resynthesis algorithm (arXiv:1303.2042)\n\nWritten by Matthew Amy\n\nWe kindly request that anyone using this code to optimize circuits\nacknowledges the tool and/or the paper on which it is based in their work\n\nBUILD\n------------------------------\n\nTo build tpar, run make in the top level folder.\n\ntpar requires the following libraries:\n\n-- Boost\n\nBoost should be available through your package manager. Additionally, \nyour compiler needs to support the c++0x/c++11 standard, or otherwise\nthe code will likely require some modifications.\n\nUSAGE\n------------------------------\nRun tpar with\n  tpar [options]\n\ntpar takes a circuit in the .qc format (a description can be found at\nhttp://qcirc.iqc.uwaterloo.ca/QCViewer/QCViewerDocumentation.pdf) from\nstandard input and outputs the resulting .qc circuit to standard output.\nThe circuit can only contain the single qubit gates H, P, P*, T, T*, X,\nY, Z, and the two qubit tof (CNOT) gate. It also accepts doubly controlled\nZ gates, i.e. Z a b c.\n\nA lot of extra output is supplied on standard error. There is currently no\noption to turn it off, so either stderr or stdout should be redirected as\nnecessary.\n\nCurrently, the only options available are\n  -no-hadamard - This option performs the Tpar optimization only on subcircuits \n                 between H gates, analogous to the original {CNOT, T} algorithm \n                 described in arXiv:1303.2042.\n  -no-post-process - This option turns off post processing of the circuit to \n                     remove swap gates and trivial identities. Turning this off\n                     makes significant difference in runtime on very large \n                     circuits.\n\nThe algorithm is described in arXiv:1303.2042, but essentially it generates\na sum over paths type description of the circuit where phases and qubit\nstates are linear Boolean functions of the input variables and Hadamards\ngenerate new variables. It then uses matroid theory to group phases\ntogether intelligently and lay them out in parallel stages.\n\nThis README is far from complete, so please feel free to email me at \nmatt.e.amy@gmail.com if you have any questions or if you find any bugs.\n", 
  "read_at": 1462546731, 
  "description": "Circuit optimizer", 
  "id": 20138785
}