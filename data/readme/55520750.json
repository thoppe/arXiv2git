{
  "read_at": 1462547841, 
  "description": "C library to pack and unpack short arrays of integers as fast as possible", 
  "README.md": "# LittleIntPacker\nC library to pack and unpack short arrays of integers as fast as possible\n\n## Introduction\n\nThis is a bit packing library. Bit packing is the process by which you\ntake arrays of (32-bit) integers that fit in [0,2^L) and you write them\nout using as close to L bits per integer as possible. \n\n\n\n## Motivation\n\nFor long blocks of integers (e.g., 128 integers or more), SIMD bit packing\nis ideal. See for example https://github.com/lemire/simdcomp where blocks\nof 128 integers are packed and unpacked very fast.\n\nHowever, what happens if you have small blocks having variable lengths,\nand lengths that are typically much smaller than 128 integers?\n\nThe work is motivated by the  engineering underlying TurboPFor\nhttps://github.com/powturbo/TurboPFor\nThat is, we write and load compressed bytes in 64-bit words as opposed\nto 32-bit words.\n\n## Hardware requirements\n\nThis software makes little sense if you do not have a 64-bit processor.\n\n## Usage\n\n```bash\nmake\n./unit \n```\n\n## Code usage\n\n```C\n//#include \"bitpacking.h\n\n// number of bytes required to compress l 32-bit integers using b bits each\nuint32_t c = byte_count(l, b);\n\n// packing an array of 32-bit unsigned ints from data to buffer\nturbopack32(data, l, b,buffer);\n// recovering data\nturbounpack32(buffer, l, b,backdata);\n```\n\n\n## Current status\n\nTested.\n\n## References\n\n* Daniel Lemire, Leonid Boytsov, Nathan Kurz, SIMD Compression and the Intersection of Sorted Integers, Software Practice & Experience 46 (6) 2016. http://arxiv.org/abs/1401.6399\n* Daniel Lemire and Leonid Boytsov, Decoding billions of integers per second through vectorization, Software Practice & Experience 45 (1), 2015.  http://arxiv.org/abs/1209.2137 http://onlinelibrary.wiley.com/doi/10.1002/spe.2203/abstract\n* Jeff Plaisance, Nathan Kurz, Daniel Lemire, Vectorized VByte Decoding, International Symposium on Web Algorithms 2015, 2015. http://arxiv.org/abs/1503.07387\n* Wayne Xin Zhao, Xudong Zhang, Daniel Lemire, Dongdong Shan, Jian-Yun Nie, Hongfei Yan, Ji-Rong Wen, A General SIMD-based Approach to Accelerating Compression Algorithms, ACM Transactions on Information Systems 33 (3), 2015. http://arxiv.org/abs/1502.01916\n", 
  "id": 55520750
}