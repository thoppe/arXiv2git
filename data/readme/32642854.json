{
  "read_at": 1462543842, 
  "description": "This is the code used for the paper \"Inferring algorithmic patterns with a stack augmented recurrent network\", by Armand Joulin and Tomas Mikolov.", 
  "README.md": "# Stack RNN\nStack RNN is a project gathering the code from the paper \n*Inferring Algorithmic Patterns with Stack-Augmented Recurrent Nets* by Armand Joulin and Tomas Mikolov ([pdf](http://arxiv.org/abs/1503.01007)).\nIn this research project, we focus on extending Recurrent Neural Networks (RNN) with a stack to allow them to learn sequences which require\nsome form of persistent memory. \n\nExamples are given in the script `script_tasks.sh`. The code is still under construction. \nWe are working on releasing the code for the list RNN. If you have any suggestion, please let us know (contacts below).\n\n\n## Examples\nTo run the code on a task:\n```\n> make toy\n> ./train_toy  -ntask 1 -nchar 2 -nhid 10 -nstack 1 -lr .1 -nmax 10 -depth 2 -bptt 50 -mod 1\n```\nTo run the code on binary addition:\n```\n> make add\n> ./train_add \n```\n\n## Requirements\nStack RNN works on:\n* Mac OS X\n* Linux\n\nIt was not tested on Windows. To compile the code a relatively recent version of g++ is required.\n\n## Building Stack RNN\nRun `make` to compile everything. \n\n\n## Options\nFor more help about the options:\n```\n> make toy\n> ./train_toy --help\n```\nNote that `train_add` can take the same options as `train_toy`.\n\n\n## Join the Stack RNN community\n* Paper: http://arxiv.org/abs/1503.01007\n* Facebook page: https://www.facebook.com/fair\n* Contact: ajoulin@fb.com\n\nSee the CONTRIBUTING file for how to help out.\n\n## License\nStack RNN is BSD-licensed. We also provide an additional patent grant\n\n\n\n\n\n", 
  "id": 32642854
}