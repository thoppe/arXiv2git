{
  "read_at": 1462548958, 
  "description": "A set of MATLAB scripts for computing bounds on monogamy of entanglement games", 
  "README.md": "# MoE\n## Version 0.0.1 - 25 September 2015\n\nMoE is a set of MATLAB scripts that supplement the results of the article [2]. \n\nTo run in MATLAB, add the ```/src/``` directory (including all sub-directories) to your current working directory. \n\n---\nMoE is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nMoE is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\n---\n\n## Dependencies\nIn order to run these scripts in MATLAB, you must also have CVX [3] and QETLAB [4] downloaded and added to your ```/src/``` directory. \n\n## Description\n\nThis set of scripts allows one to bound the quantum game values for monogamy of entanglement games.  \n\n## Use\n\nThe purpose of these scripts are to provide a way to compute upper and lower bounds on a specific type of extended nonlocal game called \nmonogamy-of-entanglement games. These games are defined in terms of a set of measurements for the referee to be performed on its system. \n\nLet's take an example (which is baed on the BB84MonogamyGame in ```src/examples/BB84MonogamyGame.m```. Our choice of basis for this example\nwill be the BB84 basis, i.e. {|0><0|, |1><1|} and {|+><+|, |-><-|}. \n\n``` \ne0 = [1;0]; e1 = [0;1]; ep = [1;1]/sqrt(2); em = [1;-1]/sqrt(2); \npsi0 = e0*e0'; psi1 = e1*e1'; psip = ep*ep'; psim = em*em'; \n``` \n\nSo we have that ```psi0``` = |0><0|, ```psi1``` = |1><1|, ```psip``` = |+><+|, and ```psim``` = |-><-|. We store these elements into a cell array\nthat represents the measurements of the referee as \n\n```\nR{1} = {psi0,psi1}; R{2} = {psip,psim}; \n```\n\nWe may then put this into our functions that compute upper and lower bounds on a monogamy-of-entanglement game defined by these measurements:\n\n```\nub = MonogamyGameValueUB(R,1,1); \nlb = MonogamyGameValueLB(R,1,1); \n```\n\nMore information on the BB84 game can be found in references [1] and [2], and more information on our bounding techniques can be found in [2]. \n\n## Examples\n\n### BB84 Monogamy Game\n\nRunning the script: ```examples/BB84MonogamyGame.m``` computes the upper and lower bounds for the BB84 monogamy game [1] using the techniques from [2].\n\n### Mutually Unbiased Basis Monogamy Game\n\nRunning the script: ```examples/MUB_4_3_MonogamyGame.m``` illustrates a monogamy game defined by a set of mutually unbiased bases consisting of 4-inputs and 3-outputs \nwhere the players benefit from using entanglement as described in [2].\n\n### References:\n\n[1] \"A monogamy of entanglement game with applications to device independent\n      quantum cryptography\" - M. Tomamichel, S. Fehr, J. Kaniewski, S. Wehner.\n\t  (arxiv:1210.4359)\n\n[2] \"Extended nonlocal games and monogamy-of-entanglement games\" - N. Johnston,\n     R. Mittal, V. Russo, J. Watrous. (arxiv:1510.02083)\n\t \t \n[3] CVX - (http://cvxr.com/cvx/)\n\n[4] QETLAB v0.8 - (http://qetlab.com)\t ", 
  "id": 43091305
}