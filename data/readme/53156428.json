{
  "read_at": 1462555246, 
  "description": "An attempt at replicating Deepmind's Neural Turing Machines in Theano", 
  "README.md": "# Neural-Turing-Machines\nAn attempt at replicating Deepmind's Neural Turing Machines in Theano.\n\nHere is the link to the paper: http://arxiv.org/abs/1410.5401\n\n## Results\n- Currently, only COPY task is implemented.\n- Training is done on sequences of length varying from 1 to 20 and width 8.\n- It takes ~200k iterations (training samples) to get a well trained model.\n- The model is able to nicely generalize on sequences of length above 100 with zero hamming error.\n- Have a look at `plots` directory.\n- Following figure shows the generalization on a test sequence of length 66.\n\n![Alt ntm-on-test-seq-of-len-66](plots/ntm-info-COPY-10-120-66-2016-03-04-16-18-50.png)\n\n## Usage\nFor training: In `ntm.py` set\n```\nto_test = False\n```\nTo run your trained model or a pre-trained model from `model` directory,\n\nIn `ntm.py` set\n```\nto_test = True\ntest_path = path_to_npz_model_parameters_file\n```\n\n## Other NTM Implementations\n- fumin very nicely explained NTM with a working implementation in GO. Check out: https://github.com/fumin/ntm\n- Another NTM implementation in Theano by shawntawn. Check out: https://github.com/shawntan/neural-turing-machines\n\n## Future works\n- Making NTM to work on other tasks described in the paper.\n- Using NTM for Machine Translation.", 
  "id": 53156428
}