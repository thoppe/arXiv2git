{
  "id": 1872731, 
  "read_at": 1462509842, 
  "README.rst": "mtest\n=====\n\n`mtest` is a Python implementation of the m-test, a two-sample test\nbased on model selection and described in [1] and [2].\n\nDespite their importance in supporting experimental conclusions, standard\nstatistical tests are often inadequate for research areas, like the life sciences,\nwhere the typical sample size is small and the test assumptions difficult to\nverify. In such conditions, standard tests tend to be overly conservative, and\nfail thus to detect significant effects in the data.\n\nThe m-test is a classical statistical test in the sense of defining significance\nwith the conventional bound on Type I errors. On the other hand, it is based\non Bayesian model selection, and thus takes into account uncertainty about the\nmodel's parameters, mitigating the problem of small samples size.\n\nThe m-test has been found to generally have a higher power (smaller fraction of\nType II errors) than a t-test error for small sample sizes (3 to 100 samples).\n\n[1] Berkes, P., Fiser, J. (2011) `A frequentist two-sample test based on Bayesian model selection. <http://arxiv.org/abs/1104.2826>`_ arXiv:1104.2826v1 \n\n[2] Berkes, P., Orban, G., Lengyel, M., and Fiser, J. (2011). `Spontaneous cortical activity reveals hallmarks of an optimal internal model of the environment. <http://www.sciencemag.org/content/331/6013/83.abstract>`_ Science, 331:6013, 83-87.\n\nmtest tables\n============\n\n`mtest` caches tables of statistics to compute the p-value and\npower of new data in the most efficient way. The library is\ndistributed with tables for p-values (type I error) for N=3,4,...,20\nand for N=30,40,...,100. These tables cover the most common cases. New\ntables are computed when needed, although completion might take a few\nhours. Type II error tables are not included to keep the package size\nsmall.\n\nSee `scripts\\compute_basic_tables.py` for an example script to\npre-compute tables you might need. The script makes use of the `joblib\n<http://packages.python.org/joblib/>`_ library to distribute the\ncomputations on multiple cores.\n\nDependencies\n============\n\n`mtest` requires `SciPy <http://www.scipy.org/>`_ and `PyMC <http://code.google.com/p/pymc/>`_.\n\nLicense\n=======\n\n`mtest` is released under the GPL v3. See LICENSE.txt .\n\nCopyright (c) 2011, Pietro Berkes. All rights reserved.\n", 
  "description": "Python implementation of the m-test, a two-sample test based on model selection and with better performance than the t-test on small sample sizes."
}