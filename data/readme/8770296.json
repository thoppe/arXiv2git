{
  "read_at": 1462549076, 
  "description": "Facilitating the global conversation on academic literature", 
  "README.md": "PeerLibrary\n===========\n\nFacilitating the global conversation on academic literature.\n\n[https://peerlibrary.org/](https://peerlibrary.org/) | [http://blog.peerlibrary.org/](http://blog.peerlibrary.org/) | [@PeerLibrary](https://twitter.com/PeerLibrary) | [Facebook](https://www.facebook.com/PeerLibrary)\n\n* [GitHub](https://github.com/peerlibrary/peerlibrary)\n* [Development wiki](https://github.com/peerlibrary/peerlibrary/wiki)\n* [Development tickets](https://github.com/peerlibrary/peerlibrary/issues)\n* [Development mailing list](http://lists.peerlibrary.org/lists/info/dev)\n* IRC at [#peerlibrary](https://webchat.freenode.net/?channels=peerlibrary) @ [Freenode](http://freenode.net/)\n* Email hello @ peerlibrary.org\n\n_PeerLibrary outreach is [done in another repository](https://github.com/peerlibrary/outreach)._\n\nWeekly meeting\n--------------\n\nRegular general weekly meeting is ~~every Wednesday 5 PM PST~~ (temporary on hiatus). Meeting is open to really\neveryone. Remote participation is possible using Google Hangout [through permanently opened video session](https://plus.google.com/hangouts/_/calendar/YmVya2VsZXkuZWR1X2UyYTVhcWc4cXJnaWM2bnQ2ZDk0OG0yNXJnQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20.kijreb7bhpl8qfkr7n9d549so4). Additionally, join us on our IRC\nchannel at that time for more information. We are also using our IRC channel for a backchannel\nto the meeting. Notes are taken and sent to the mailing lists, and their address follow the\nfollowing format `http://pad.peerlibrary.org/p/meeting-YYYY-MM-DD`.\n\nDevelopment installation\n------------------------\n\nPeerLibrary is built upon the [Meteor platform](http://www.meteor.com/). You can install it with:\n\n    curl http://meteor.peerlibrary.org/ | sh\n\nMeteor provides [node.js](http://nodejs.org) (if you have it installed already you can use the one\nprovided on your system). To add it into your environment, add `~/.meteor/tools/latest/bin` to your\nenvironment `PATH` variable. For example, by running:\n\n    export PATH=~/.meteor/tools/latest/bin:$PATH\n\nTo add tools to your shell permanently, run:\n\n    echo 'export PATH=~/.meteor/tools/latest/bin:$PATH' >> ~/.bash_profile\n\nMaybe on your system you have to add the line to `~/.profile` file instead.\n\nPeerLibrary requires additional Meteor packages which are provided through\n[Meteorite](http://oortcloud.github.com/meteorite/), a Meteor package manager.\nInstall it as well:\n\n    npm install -g meteorite\n\n### Other requirements to run PeerLibrary ###\n\nOn first run, PeerLibrary compiles and locally installs additional Meteor packages,\nsome of them have non-Meteor dependencies. The following libraries have\nto be available on your system for PeerLibrary to successfully run:\n\n * [Cairo](http://cairographics.org/) graphic library\n * [FreeType](http://www.freetype.org/)\n * [Pango](http://www.pango.org/)\n * [pkg-config](http://www.freedesktop.org/wiki/Software/pkg-config/)\n * [giflib](http://giflib.sourceforge.net/)\n * [libjpeg](http://www.ijg.org)\n\nOn Mac OS X you can get Cairo by installing [X11](http://xquartz.macosforge.org/) (Pango\nand FreeType are already available on the system) and run the following before you\nrun `mrt` to configure the environment:\n\n    export PKG_CONFIG_PATH=/opt/X11/lib/pkgconfig\n\nTo be able to compile Meteor packages, you need [Xcode](https://developer.apple.com/xcode/)\nwith command line tools installed (from _Preferences_ > _Downloads_ > _Components_).\n\nYou can install `pkg-config`, `giflib`, and `libjpeg` using [Homebrew](http://brew.sh/)\n([MacPorts](https://www.macports.org/) also works, if you prefer it):\n\n    brew install pkg-config giflib libjpeg\n\nOn Debian you can install all dependencies by:\n\n    sudo aptitude install libcairo2-dev libfreetype6-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++\n\n### Run it! ###\n\nRecursively clone a PeerLibrary repository:\n\n    git clone --recursive https://github.com/peerlibrary/peerlibrary.git\n\nThis will give you the latest development version of PeerLibrary (`development` branch). The latest\nstable version is in the `master` branch.\n\nAnd then run a development instance of PeerLibrary:\n\n    mrt\n\nAnd open [http://localhost:3000/](http://localhost:3000/), which is an address of\nyour local development instance, to start an installation wizard process in which you\ncreate an admin user (which has username `admin`). After you create an admin\nuser, PeerLibrary will reload.\n\nTo demo the tool, you will need to populate your instance of the database with publications.\nLog in as `admin` and go to _Admin dashboard_ ([http://localhost:3000/admin](http://localhost:3000/admin)).\nClick on the _Initialize database with sample data_ button, to initialize the database with\nthe same publications from [arXiv](http://arxiv.org/). It will fetch metadata, cache a few PDFs\nand process them. Publications will be searchable at your [http://localhost:3000/](http://localhost:3000/).\n\nFor more information on configuring your installation, see [settings](https://github.com/peerlibrary/peerlibrary/wiki/Settings).\n\n### ArXiv publications ###\n\nTo load and use [arXiv](http://arxiv.org/) publications, open _Admin dashboard_\n([http://localhost:3000/admin](http://localhost:3000/admin)) and click on _Sync arXiv metadata_\nbutton first and after it loads all the metadata, click _Sync arXiv PDF cache_ button to load\nall PDFs. After the caching finishes and PDFs are processed you will be able to search and open\narXiv publications in PeerLibrary.\n\n**arXiv is a huge repository and loading all the publications takes a lot of space (few 100 GBs) and time.\nYou probably do not want to do this. It consumes arXiv resources and costs you money. Use _Initialize\ndatabase with sample data_ to get a small sample of arXiv publications.**\n\nYou will need [AWS](http://aws.amazon.com/) `accessKeyId` and `secretAccessKey` which you have to put into\nyour `settings.json` file. All PDF transfer costs will be [billed against this account](http://arxiv.org/help/bulk_data_s3).\n\n### Free Speech Movement publications ###\n\nTo load and use [Free Speech Movement](http://bancroft.berkeley.edu/FSM/) publications, open _Admin dashboard_\n([http://localhost:3000/admin](http://localhost:3000/admin)) and click on _Sync FSM metadata_ button first\nand after it loads all the metadata, click _Sync FSM cache_ button to load all the TEI textual documents.\nAfter the caching finishes you will be able to search and open FSM publications in PeerLibrary.\n\nYou will need [FSM API](http://digitalhumanities.berkeley.edu/hackfsm/api) `appId` and `appKey` which you\nhave to put into your `settings.json` file.\n\n### Troubleshooting ###\n\nIf you are using Mac OS X and are worried that you may have forgotten some dependencies then run the script\n`checkdependencies.sh` located in the PeerLibrary root directory. It checks for most of the dependencies\nrequired to run the application.\n\nSometimes when installing dependencies, Meteor will throw the following error:\n\n    npm ERR! cb() never called!\n    npm ERR! not ok code 0\n\nThis just means that there was a timeout while downloading a dependency, probably because of\na networking issue. Just retry.\n\nIf you have not cloned recursively (if you forgot `--recursive` in `git clone --recursive https://github.com/peerlibrary/peerlibrary.git`), you will at some point get a such or similar error:\n\n    While building package `blob`:\n    error: File not found: Blob/Blob.js\n\nOr similar errors for other packages, you just have to manually initialize git submodules we are using:\n\n    git submodule update --init --recursive\n\nIf you are getting an error like:\n\n    Error: Cannot find module '../build/Release/canvas'\n\nThen there is an issue compiling the [node-canvas](https://github.com/LearnBoost/node-canvas) dependency. Check\nif you have all required non-Meteor dependencies installed and retry by removing the whole `meteor-pdf.js` package\nand running `mrt` again:\n\n    rm -rf ~/.meteorite/packages/pdf.js/\n\nIf you are getting an error like:\n\n    Error: Could not locate the bindings file.\n\nThen you upgraded your system and the package which was previously compiled now does not work anymore. You have to\nforce recompilation by, for example, removing the package. Example for `segfault-handler` package:\n\n    rm -rf ~/.meteorite/packages/segfault-handler/\n\nIf you are getting Stylus errors like:\n\n    error: Stylus compiler error: client/css/_viewer.styl:2\n\n    failed to locate @import file variables.styl\n\nYou are not running `mrt` in the top-level directory of PeerLibrary. This is a [bug in Meteor](https://github.com/meteor/meteor/issues/1655).\n\nIf you notice that `mrt` command disappeared is this because you probably updated Meteor.\nYou have to reinstall Meteorite (`npm install -g meteorite`).\n\nContributing\n------------\n\nPeerLibrary is currently in active development where we are creating\nbasic architecture. Major code refactoring and rewrites are thus common.\nNevertheless, you are invited to join the development, but please understand\nthat things might be changing under your feet so it is probably useful to\ndiscuss planned contributions in advance.\n\nSee the [CONTRIBUTING](https://github.com/peerlibrary/peerlibrary/blob/development/CONTRIBUTING.md) file for more\ndetails and ideas.\n\nYou can also help with [PeerLibrary outreach, promotion, teaching, and community organizing](https://github.com/peerlibrary/outreach).\n", 
  "id": 8770296
}