{
  "read_at": 1462551110, 
  "description": "parallel graph management and execution in heterogeneous computing", 
  "README.md": "pathos\n======\nparallel graph management and execution in heterogeneous computing\n\nAbout Pathos\n------------\nPathos is a framework for heterogenous computing. It primarily provides\nthe communication mechanisms for configuring and launching parallel\ncomputations across heterogenous resources. Pathos provides configurable\nlaunchers for parallel and distributed computing, where each launcher\ncontains the syntactic logic to configure and launch jobs in an execution\nenvironment.  Some examples of included launchers are: a queue-less\nMPI-based launcher, a ssh-based launcher, and a multiprocessing launcher.\nPathos also provides a map-reduce algorithm for each of the available\nlaunchers, thus greatly lowering the barrier for users to extend their\ncode to parallel and distributed resources.  Pathos provides the ability\nto interact with batch schedulers and queuing systems, thus allowing large\ncomputations to be easily launched on high-performance computing resources.\nOne of the most powerful features of pathos is  \"tunnel\", which enables a\nuser to automatically wrap any distributed service calls within a ssh-tunnel.\n\nPathos is divided into four subpackages::\n\n* dill: a utility for serialization of python objects\n* pox: utilities for filesystem exploration and automated builds\n* pyina: a MPI-based parallel mapper and launcher\n* pathos: distributed parallel map-reduce and ssh communication\n\n\nPathos Subpackage\n-----------------\nThe pathos subpackage provides a few basic tools to make distributed\ncomputing more accessable to the end user. The goal of pathos is to\nallow the user to extend their own code to distributed computing with\nminimal refactoring.\n\nPathos provides methods for configuring, launching, monitoring, and\ncontrolling a service on a remote host. One of the most basic features\nof pathos is the ability to configure and launch a RPC-based service\non a remote host. Pathos seeds the remote host with a small `portpicker`\nscript, which allows the remote host to inform the localhost of a port\nthat is available for communication.\n\nBeyond the ability to establish a RPC service, and then post requests,\nis the ability to launch code in parallel. Unlike parallel computing\nperformed at the node level (typically with MPI), pathos enables the\nuser to launch jobs in parallel across heterogeneous distributed resources.\nPathos provides a distributed map-reduce algorithm, where a mix of\nlocal processors and distributed RPC services can be selected.  Pathos\nalso provides a very basic automated load balancing service, as well as\nthe ability for the user to directly select the resources.\n\nThe high-level \"pp_map\" interface, yields a map-reduce implementation that\nhides the RPC internals from the user. With pp_map, the user can launch\ntheir code in parallel, and as a distributed service, using standard python\nand without writing a line of server or parallel batch code.\n\nRPC servers and communication in general is known to be insecure.  However,\ninstead of attempting to make the RPC communication itself secure, pathos\nprovides the ability to automatically wrap any distributes service or\ncommunication in a ssh-tunnel. Ssh is a universally trusted method.\nUsing ssh-tunnels, pathos has launched several distributed calculations\non national lab clusters, and to date has performed test calculations\nthat utilize node-to-node communication between two national lab clusters\nand a user's laptop.  Pathos allows the user to configure and launch\nat a very atomistic level, through raw access to ssh and scp. \n\nPathos is in the early development stages, and any user feedback is\nhighly appreciated. Contact Mike McKerns [mmckerns at caltech dot edu]\nwith comments, suggestions, and any bugs you may find. A list of known\nissues is maintained at http://trac.mystic.cacr.caltech.edu/project/pathos/query.\n\n\nMajor Features\n--------------\nPathos provides a configurable distributed parallel-map reduce interface\nto launching RPC service calls, with::\n\n* a map-reduce interface that extends the python 'map' standard\n* the ability to submit service requests to a selection of servers\n* the ability to tunnel server communications with ssh\n* automated load-balancing between multiprocessing and RPC servers\n\nThe pathos core is built on low-level communication to remote hosts using\nssh. The interface to ssh, scp, and ssh-tunneled connections can::\n\n* configure and launch remote processes with ssh\n* configure and copy file objects with scp\n* establish an tear-down a ssh-tunnel\n\nTo get up and running quickly, pathos also provides infrastructure to::\n\n* easily establish a ssh-tunneled connection to a RPC server\n\n\nCurrent Release\n---------------\nThe latest released version of pathos is available from::\n    http://trac.mystic.cacr.caltech.edu/project/pathos\n\nPathos is distributed under a 3-clause BSD license.\n\nDevelopment Release\n-------------------\nYou can get the latest development release with all the shiny new features at::\n    http://dev.danse.us/packages.\n\nor even better, fork us on our github mirror of the svn trunk::\n    https://github.com/uqfoundation\n\nCitation\n--------\nIf you use pathos to do research that leads to publication, we ask that you\nacknowledge use of pathos by citing the following in your publication::\n\n    M.M. McKerns, L. Strand, T. Sullivan, A. Fang, M.A.G. Aivazis,\n    \"Building a framework for predictive science\", Proceedings of\n    the 10th Python in Science Conference, 2011;\n    http://arxiv.org/pdf/1202.1056\n\n    Michael McKerns and Michael Aivazis,\n    \"pathos: a framework for heterogeneous computing\", 2010- ;\n    http://trac.mystic.cacr.caltech.edu/project/pathos\n\nMore Information\n----------------\nProbably the best way to get started is to look at a few of the\nexamples provided within pathos. See `pathos.examples` for a\nset of scripts that demonstrate the configuration and launching of\ncommunications with ssh and scp. The source code is also generally well documented,\nso further questions may be resolved by inspecting the code itself, or through \nbrowsing the reference manual. For those who like to leap before\nthey look, you can jump right to the installation instructions. If the aforementioned documents\ndo not adequately address your needs, please send us feedback.\n\nPathos is an active research tool. There are a growing number of publications and presentations that\ndiscuss real-world examples and new features of pathos in greater detail than presented in the user's guide. \nIf you would like to share how you use pathos in your work, please send us a link.\n", 
  "id": 11017847
}