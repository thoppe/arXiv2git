{
  "read_at": 1462543154, 
  "description": "Identify relevant scientific papers with simple machine learning techniques", 
  "README.md": "shakespeare\n===========\n\nIdentify relevant scientific papers with simple machine learning techniques\n\nInstallation\n===========\nrun:\n\n```\npython setup.py install --user\n```\n\nto install shakespeare in ~/.local.\n\nThis will install the shakespeare python library, and also a script `shakespeare` that handles training, content fetching and content filtering.\n\nTo install an example knowledge set, copy examples' contents to $HOME/.shakespeare\n\nDepends on `bibtexparser`, `feedparser` `scikit-learn` packages, which can be installed via pip\n\n    pip install --user bibtexparser scikit-learn feedparser\n\n\n\nFeatures\n========\n\n* fetch functions for the following journals\n    \n    * Phys Rev A-X\n    * PRL\n    * PNAS\n    * Nature + Nature:Stuff\n    * Science\n    * Small\n    * ACS Nano, Nano Letters\n    * Soft Matter\n    * Langmuir\n    * Angewandte Chemie\n    * JCP, JCP B\n\n* Fetch functions for arXiv\n* support for BibTex Files\n* Naive bayes training and classification\n\nUsage\n======\n\nTrain naive\\_bayes algorithm\n\n    shakespeare -g thegoodstuff.bib -b thebadstuff.bib --train\n\nFind papers from nature nano and PNAS\n\n    shakespeare -j natnano pnas -o cool_papers.md\n\nFind papers from the arxiv cond-mat.soft and math, then review the algorithms selection\n\n    shakespeare -a cond-mat.soft math --feedback\n\n\nHelp printout\n\n    usage: shakespeare    [-h] [-o OUTPUT] [-b [BIBFILES [BIBFILES ...]]]\n                          [-j [JOURNALS [JOURNALS ...]]] [-a [ARXIV [ARXIV ...]]]\n                          [--all_sources] [--all_good_sources] [--train]\n                          [-g GOOD_SOURCE] [-m METHOD] [-k KNOWLEDGE]\n                           [--overwrite-knowledge] [--feedback] [--review_all]\n    optional arguments:\n      -h, --help            show this help message and exit\n      -o OUTPUT, --output OUTPUT\n                            output file name. only supports markdown right now.\n      -b [BIBFILES [BIBFILES ...]], --bibtex [BIBFILES [BIBFILES ...]]\n                            bibtex files to fetch\n      -j [JOURNALS [JOURNALS ...]], --journals [JOURNALS [JOURNALS ...]]\n                            journals to fetch. Currently supports physreve\n                            physrevd jchemphysb physreva physrevc pnas nature\n                            jchemphys science natmat physrevb acsnano jphyschem\n                            nanoletters natphys prl small angewantechemie langmuir\n                            physrevx natnano.\n      -a [ARXIV [ARXIV ...]], --arXiv [ARXIV [ARXIV ...]]\n                            arXiv categories to fetch\n      --all_sources         flag to search from all sources.\n      --all_good_sources    flag to search from good sources. Specfied in your\n                            config file.\n      --train               flag to train. All sources beside \"--train-input-good\"\n                            are treated as bad/irrelevant papers\n      -g GOOD_SOURCE, --train_input_good GOOD_SOURCE\n                            bibtex file containing relevant articles.\n      -m METHOD, --method METHOD\n                            Methods to try to find relevent papers. Right now,\n                            only all, title, author, and abstract are valid fields\n      -k KNOWLEDGE, --knowledge KNOWLEDGE\n                            path to database containing information about good and\n                            bad keywords. If you are training, you must specifiy\n                            this, as it will be where your output is written\n      --overwrite-knowledge\n                            flag to overwrite knowledge,if training\n      --feedback            flag to give feedback after sorting content\n      --review_all          review all the new selections. Otherwise, you will\n                             only review the good selections\n\n\nTODO\n======\n* Add support for a config file for setting defaults (e.g., which journals for search for when using the `--all_good_sources` command\n", 
  "id": 17097770
}