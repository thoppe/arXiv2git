{
  "read_at": 1462552972, 
  "description": "", 
  "README.txt": "PySM v-0.2 \nBeta version.\nMost recent version available at: https://github.com/bthorne93/PySM\n\nAuthors: Ben Thorne, David Alonso, Sigurd Naess, Jo Dunkley\nContact: ben.thorne@physics.ox.ac.uk\n------------------------------------------------------------------------\n\nThis code generates full-sky simulations of Galactic foregrounds in intensity and \npolarization relevant for CMB experiments. The components simulated are: thermal dust, \nsynchrotron, AME, and CMB. Free-free will be added soon.\n\nCurrent version v-0.2 generates degree-scale smoothed maps, at Healpix Nside=256. There\nexist options to integrate over a top hat bandpass, and to add white instrument noise in \nintensity and polarization.\nSmaller-scales and different Nside available soon.\n\nThere is scope for a few options for the model for each component, attempting to \nbe consistent with current data. The current v-0.2 version has typically two options \nfor each component. \n\nThis code is based on the large-scale Galactic part of Planck Sky Model code and uses \nsome of its inputs (http://www.apc.univ-paris7.fr/~delabrou/PSM/psm.html, \nastro-ph/1207.3675).\n\nIf you use the code for any publications, please acknowledge it.\n\n-----------------------------------------------------------------------\n\nDependencies:\nThis code uses python, and needs the healpy, numpy, scipy and astropy libraries. \nVersions of those that it is known to work with are:\n\n    - python 2.7.6\n    - healpy 1.9.1     \n    - numpy 1.8.1\n    - scipy 0.14.0\n    - astropy 1.1.1\n\nIt requires at least: \n\n    - healpy 1.9.1\n   \t    \nNote that the healpy.write_map function will not work properly with outdated versions \nof healpy.  healpy.write_map will also throw a warning when run with the most recent \nversions of healpy and astropy because healpy uses a deprecated astropy function. \nThis does not affect the outcome of the code.\n\n--------------------------------------------------------------------------\n \nTo run the code, in the directory containing main.py run:\n\n    > python main.py main_config.ini\n\nThe default outputs are Healpix maps, at the specified frequencies, of the \nsummed emission of all the chosen components. The default output directory is './Output/'.\n\nTo change the parameters of the simulation edit the 'main_config.ini' file (or \ncreate a separate configuration file). The different parameters are described \nin the comments of this ini file as well as the individual model config files \nin './ConfigFiles/<model>_config.ini'. \n\n--------------------------------------------------------------------------\n\nThe nominal models used for the components are: \n\n'dust1' = Thermal dust: Thermal dust is modelled as a single-component modified \n black body (mbb).  We use dust templates for emission at 545 GHz in intensity and \n 353 GHz in polarisation from the Planck-2015 analysis, and scale these to different \n frequencies with a mbb spectrum using the spatially varying temperature and spectral \n index obtained from the Planck data using the Commander code (Planck Collaboration \n 2015, arXiv:1502.01588). Note that it therefore assumes the same spectral index for\n polarization as for intensity.  All input templates provided with the code have \n already been degraded to Nside=256 and smoothed to degree scale. \n\n'synchrotron1' = Synchrotron:  A power law scaling is used for the synchrotron emission, with \na spatially varying spectral index.  The emission templates are smoothed to degree scale\nand are the Haslam 408 MHz data reprocessed by Remazeilles et al 2015 MNRAS 451, 4311, \nand the WMAP 7-year 23 GHz Q/U maps (Jarosik et al 2011 ApJS, 192, 14J), smoothed to 3 \ndegree FWHM and with smaller scales added using the PSM code (Delabrouille et al. A&A \n553, A96, 2013). The spectral index map was derived using a combination of the Haslam \n408 MHz data and WMAP 23 GHz 7-year data (Miville-Deschenes, M.-A. et al., 2008, A&A, 490, 1093). \nThe same scaling is used for intensity and polarization.  This is the same prescription \nas used in the Planck Sky Model's v1.7.8 'power law' option (Delabrouille et al. A&A 553, \nA96, 2013), but with the Haslam map updated to the Remazeilles version. A 'curved power \nlaw' model is also supported with a single isotropic curvature index.\n\n'spdust1' = Spinning Dust: We model the AME as a sum of two spinning dust populations \nbased on the Commander code (Planck Collaboration 2015, arXiv:1502.01588). A component \nis defined by an emission template at a reference frequency and a peak frequency of the \nemission law. Both populations have a spatially varying emission template, one \npopulation has a spatially varying peak frequency, and the other population has a \nspatially constant peak frequency.  The emission law is generated using the SpDust2 code \n(Ali-Haimoud 2008, http://arxiv.org/abs/0812.2904). The nominal model is unpolarized.  \n\n'cmb1' = CMB: A lensed CMB realisation is computed using Taylens, a code to compute \na lensed CMB realisation using nearest-neighbour Taylor interpolation \n(https://github.com/amaurea/taylens; Naess, S. K. and Louis, T. JCAP 09 001, 2013, \nastro-ph/1307.0719). This code takes, as an input, a set of unlensed Cl's generated \nusing CAMB (http://www.camb.info/). The params.ini is in the Ancillary directory.\n\n----------------------------------------------------------------------------\n\nVariations on the components (so far) are:\n\n'dust2' = emissivity that varies spatially on degree scales, drawn from a Gaussian \nwith beta=1.59 \\pm 0.2. A Gaussian variation is not physically motivated, but \namount of variation consistent with Planck.\n\n'synchrotron2' = synchrotron index steepens off the Galactic plane, from -3.0 in the \nplane to -3.3 off the plane. Consistent with WMAP.\n\n'spdust2' = AME has 2% polarization fraction. Polarized maps simulated with thermal \ndust angles and nominal AME intensity scaled globally by polarization fraction. \nWithin WMAP/Planck bounds.\n\n----------------------------------------------------------------------------\n \n\n\n\n\t\t\n", 
  "id": 50431196
}