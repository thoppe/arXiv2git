{
  "README": "\n=========\nOpenLoops\n=========\n\nCopyright 2014 Fabio Cascioli, Jonas Lindert, Philipp Maierhoefer, Stefano Pozzorini\n\nAuthors\n\n    Fabio Cascioli, cascioli@physik.uzh.ch\n    Jonas Lindert, lindert@physik.uzh.ch\n    Philipp Maierhoefer, philipp@physik.uzh.ch\n    Stefano Pozzorini, pozzorin@physik.uzh.ch\n\nContact\n\n    openloops@projects.hepforge.org\n\nIf you would like to receive notifications about OpenLoops updates and news\nper e-mail, please sign up to our mailing list at\n\n    https://www.hepforge.org/lists/listinfo/openloops-announce\n\nOpenLoops is a Fortran 90 package for the calculation of tree and one-loop\nmatrix elements for Standard Model processes based on\n\n    F. Cascioli, P. Maierhoefer and S. Pozzorini,\n    Phys. Rev. Lett. 108 (2012) 111601, arXiv:1111.5206\n\nLicense\n\n    OpenLoops is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    OpenLoops is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with OpenLoops.  If not, see <http://www.gnu.org/licenses/>.\n\n\n============\nInstallation\n============\n\nRequirements\n\n    gfortran 4.6 or later, or ifort\n    Python 2.x starting with 2.4\n    Apache Subversion (optional, to install from SVN)\n\nYou can either download OpenLoops from SVN (recommended)\n\n    svn checkout http://openloops.hepforge.org/svn/OpenLoops/branches/public OpenLoops\n\nor from the OpenLoops web page\n\n    http://www.hepforge.org/downloads\n\nCompile\n\n    cd OpenLoops\n    ./scons\n\nDownload and compile process libraries\n\n    ./openloops libinstall <processes>\n\nwhere <processes> is a white space separated list of the processes or\nprocess collections (with suffix \".coll\") which should be installed.\nSome process collections are defined in the process repository (in\nparticular \"all.coll\" to install all processes from the repository).\nUser-defined collections can be set up as plain text files with file\nextension \".coll\" with line break separated names of process libraries.\n\nA list of the available process libraries can be found here\n\n    http://openloops.hepforge.org/processes\n\nProcess libraries usually include all real correction processes required\nfor an NLO calculation. However these processes are not compiled by default.\nNote that Sherpa uses its own matrix elements for real corrections, thus\ncompiling OpenLoops real corrections is not required for usage with Sherpa.\nIn order to activate the compilation of real corrections, create a file named\n\"openloops.cfg\" in your installation directory which contains the following\n(besides other options which you might have set):\n\n    [OpenLoops]\n    compile_extra = 1\n\nThe set of available processes will be extended continuously.\nIf you need a process which is not (yet) available, please contact the\nOpenLoops authors.\n\n\n======================================\nUpdate OpenLoops and process libraries\n======================================\n\nNote that automatic updates of the process independent OpenLoops code\nare only supported when OpenLoops was installed from SVN.\n\nTo update from SVN and update all installed processes\n\n    ./openloops update\n\nTo only update installed processes, but not OpenLoops itself\n(this also works when OpenLoops was not installed from SVN)\n\n    ./openloops update --processes\n\nUpdating individual process libraries works the same way as installing\nnew processes.\n\n    ./openloops libinstall <processes>\n\nIf process collections are used, new processes in the collection\nwill be installed and previously installed processes will be updated\nif newer versions are available. E.g.\n\n    ./openloops libinstall all.coll\n\nUpdating/installing processes also creates/updates a local database\nof all processes which are available for download. This database is used\nat runtime to report if a requested process is available for download,\nif it is not yet installed.\n\n\n=====================\nSupport and citations\n=====================\n\nPlease help us improving OpenLoops by sending feedback to\n\n    openloops@projects.hepforge.org\n\nIf you use OpenLoops (or an event sample generated with Sherpa+OpenLoops)\nplease cite\n\n    F. Cascioli, P. Maierhoefer and S. Pozzorini,\n    Phys. Rev. Lett. 108 (2012) 111601, arXiv:1111.5206\n\nIn the computation of loop amplitudes, OpenLoops uses CutTools for OPP reduction\nand OneLOop to compute scalar integrals (unless other reduction libraries are\ninstalled and used). If you use CutTools and OneLOop please cite\n\n    G. Ossola, C. Papadopoulos, R. Pittau, JHEP 0803 (2008) 042, arXiv:0711.3596\n    A. van Hameren, Comput. Phys. Commun. 182 (2011) 2427-2438, arXiv:1007.4716\n\n\n================\nSherpa+OpenLoops\n================\n\nOpenLoops can be used as a plug-in of Sherpa 2.1.0 or later. For the\ninstallation of Sherpa and the usage of Sherpa+OpenLoops please refer to the\nSherpa documentation at\n\n    https://sherpa.hepforge.org\n\nOpenLoops must be enabled by configuring Sherpa with the '--enable-openloops'\noption\n\n    ./configure --enable-openloops=</path/to/OpenLoops> [other configure options]\n    make\n    make install\n\nThe OpenLoops installation path can be modified at runtime by setting\n(in the Sherpa run card or command line)\n\n    OL_PREFIX=</path/to/OpenLoops>\n\nTo run Sherpa in combination with OpenLoops it is sufficient to set the flag\n\n    Loop_Generator=OpenLoops\n\nin the Sherpa runcard. Standard Sherpa+OpenLoops run cards can be found at\n\n    http://openloops.hepforge.org/sherpa-runcards\n", 
  "read_at": 1462553890, 
  "description": "GitHub mirror of http://openloops.hepforge.org/ as used by CMS.", 
  "id": 26481371
}