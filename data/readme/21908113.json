{
  "read_at": 1462551000, 
  "description": "Computer vision package for algorithms built on convex pose estimation", 
  "README.md": "Cvx_Pose\n========\n\nComputer vision package for algorithms built on convex pose estimation. Wrappers for PCL and Matlab are included. Compiled and tested with gcc.\n\nAuthored by Matanya Horowitz.   \nBased on the work by **Matanya Horowitz**, **Nikolai Matni** under the guidance of **Joel Burdick**   \nhttp://matanyahorowitz.com/   \nhttp://www.cds.caltech.edu/~nmatni/   \n\nAcademic papers:\n- Convex Relaxations of SE (2) and SE (3) for Visual Pose Estimation. http://arxiv.org/abs/1401.3700 \n- A Convex Approach to Consensus on SO(n) (Under review)\n- Convex Iterative Closest Point (cICP) (In preparation for CVPR 2015)\n- Analytic Solutions to Parallelized Pose Estimation with Outlier Rejection (In preparation for CVPR 2015)\n- Convex Model Predictive Control for Vehicular Systems (In preparation)\n\nThe CVX_CV package currently contains solutions based on the convex relaxation of SO(n) for n=2,3 for the following problems:\n- ICP\n- Pose Estimation\n\nFuture versions will include support for Structure from Motion (SfM), Simultaneous Localization and Mapping (SLAM), and more.\n\nThe package currently includes a number of examples (in progress):\n- Head tracking for the cardboard virtual reality headset\n- Pose estimation of juggling balls\n\nDependencies:\n-------------\n\n- PCL 1.7 + \n- Eigen 3.2 +\n- OpenCV 2.4 + - for running some examples based on visual features\n- Mosek or SDPA - for running convex estimation, include point-to-plane ICP\n\nNotes\n============\n- The SDPA page says the Ubuntu installation of BLAS is unoptimized (http://sdpa.sourceforge.net/download.html#sdpa-ubuntu). To get better performance this may need to be looked into. The note is from 2011 so it may no longer apply. It looks like this can be dealt with by the instrutions at this link (http://www.stat.cmu.edu/~nmv/2013/07/09/for-faster-r-use-openblas-instead-better-than-atlas-trivial-to-switch-to-on-ubuntu/) and we can get a 60% reduction in solve time. This will be a todo.\n\nInstallation\n============\n\nLinux (Ubuntu):\n---------------\n\n1. First install CMake. Open a command prompt and type \n\tsudo apt-get install cmake\n2. Download Eigen library from http://eigen.tuxfamily.org/index.php. Create a folder in the download directory called build_dir, and move into it. Then type\n\tcmake ..\n\tsudo make install\n3. Install PCL. In the command prompt type\n\tsudo add-apt-repository ppa:v-launchpad-jochen-sprickerhof-de/pcl\n\tsudo apt-get update\n\tsudo apt-get install libpcl-all\n4. Install git:\n\tsudo apt-get install git\n5. Install SDPA\n\tsudo apt-get install sdpa libsdpa-dev\nMac: \n-----\n\nUse Homebrew to get the latest version of PCL\n\nWindows:\n--------\nOnce the dependencies have been installed, move into your chosen directory and type\n\tgit clone git@github.com:matanyahorowitz/Cvx_Pose.git\n\nCompiling\n=========\n\nNavigate to build/ and then type\n\tcmake ..\n\tmake\n\n", 
  "id": 21908113
}