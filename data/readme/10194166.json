{
  "read_at": 1462547629, 
  "description": "Ruby client for Altmetric API", 
  "README.md": "Ruby Altmetric API Client\n-------------------------\n\nA simple Ruby client for the [Altmetric API](http://api.altmetric.com/).\n\nProvides a basic client object for interacting with the API. Provides quick access to the JSON\nresults or direct access to API responses.\n\nInstallation\n------------\n\n\t[sudo] gem install altmetric.rb\n\t\nRelies on the `json`, `uri_template` and `httpclient` gems.\n\nCreating A Client\n-----------------\n\nThe client can be created with an API key which is required to raise usage limits and also to access \nthe commercial parts of the API (the `fetch`) calls\n\n\topts = {\n\t  :apikey => \"12345\",\n\t  :user_agent => \"MyCoolApp/1.0\"\n\t}\n\n\tclient = Altmetric::Client.new(opts)\n\t\t\nDefault `User-Agent` is currently `altmetric-ruby-client/0.0.1`\n\t\nBasic Usage\n-----------\n\n\trequire 'altmetric'\n\n\tclient = Altmetric::Client.new()\n\tstats = client.doi(\"10.1038/news.2011.490\")\n\t#do something with the stats\n\t\nThere are methods on the client object that match each of the Altmetric API entry points, e.g. `doi`, \n`arxiv`, `pmid`, etc.\n\nRead the Altmetric API documentation for notes on the structure of the responses and additional API parameters.\n\nRate Limiting\n-------------\n\nThe client object will automatically inspect all responses and extract the HTTP headers that Altmetric \nuses for [rate limiting](http://api.altmetric.com/index.html#rate_limiting). \n\nThe latest header values are automatically added as integers to the `Altmetric::Client::LIMITS` hash, \nkeyed on the header name. This simplifies monitoring limits over several requests, which may use different \nclients.\n\t\nLicense\n-------\n\nThis work is hereby released into the Public Domain.\n\nTo view a copy of the public domain dedication, visit http://creativecommons.org/licenses/publicdomain or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.\n ", 
  "id": 10194166
}