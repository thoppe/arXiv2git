{
  "read_at": 1462557943, 
  "description": "", 
  "README.md": "# Bandit Repair [![Build Status](https://travis-ci.org/Spirals-Team/bandit-repair.svg?branch=master)](https://travis-ci.org/Spirals-Team/bandit-repair) [![Coverage Status](https://coveralls.io/repos/github/Spirals-Team/bandit-repair/badge.svg?branch=master)](https://coveralls.io/github/Spirals-Team/bandit-repair?branch=master)\n\nThis is the repository of BanditRepair.\n\nBanditRepair is a system that systematically explores and assesses a set of possible runtime patches developed at Inria Lille.\n\nThis code is research code, released under the GPL licence.\n\nIf you use this code for academic research, please cite: BanditRepair: Speculative Exploration of Runtime Patches (Thomas Durieux, Youssef Hamadi, Martin Monperrus)\n```Bibtex\n@InProceedings{durieux2016banditrepair,\n    title={BanditRepair: Speculative Exploration of Runtime Patches},\n    author={Durieux, Thomas and Hamadi, Youssef and Monperrus, Martin},\n    journal={arXiv preprint arXiv:1603.07631},\n    year={2016}\n}\n```\n\n## Getting Started\n\n### Run the tests\n\n```Bash\nmvn test\n```\n\n### Run the evaluation\n\n1. Gets the NPE Dataset: https://github.com/Spirals-Team/npe-dataset\n2. Installs each bug on your system, in order to download the dependencies\n3. Configures the location of the dataset in src/main/resources/config.ini\n4. Creates the Bandit Repair jar with all dependencies: `mvn clean compile assembly:single`\n5. Executes Bandit Repair `java -jar target/npefix-0.3-jar-with-dependencies.jar` (see the execution usage below)\n6. Checks the output of the execution in the folder `output/GreedySelector/<program_name>/<timestamp>.json`\n\n#### Execution usage\n```Bash\njava -jar target/npefix-0.2-jar-with-dependencies.jar\n                          (-p|--project) <math-1117...> [(-m|--mode) <mode>] [(-x|--working) <workingDirectory>] [(-k|--m2) <~/.m2>] [(-e|--epsilon) <0.2>] [(-s|--seed) <randomSeed>] [(-l|--laps) <nbLaps>] [(-t|--timeout) <testTimeout>]\n\n  (-p|--project) <math-1117...>\n        The name of the buggy program to execute (e.g. collection-360, math-1117, ...).\n\n  [(-m|--mode) <mode>]\n        The execution mode of Bandit Repair:\n            * normal: Executes n times (the option --laps) the program and use the Epsilon Greedy algorithm to select the decision.\n            * exploration: Explores all possible decision sequences with a limit of n laps (defined by --laps)\n\n  [(-x|--working) <workingDirectory>]\n        The path to the evaluation working directory.\n\n  [(-k|--m2) <~/.m2>]\n        The m2 folder. (default: ~/.m2)\n\n  [(-e|--epsilon) <0.2>]\n        The Epsilon-Greedy epsilon (the probability to use the exploration vs exploitation). (default: 0.2)\n\n  [(-s|--seed) <randomSeed>]\n        The seed of the random generator.\n\n  [(-l|--laps) <nbLaps>]\n        Defines the number of laps. (default: 100)\n\n  [(-t|--timeout) <testTimeout>]\n        Defines the timeout in second of the each test execution. (default: 5)\n```\n\n#### Execution output\n```js\n{\n  \"executions\": [\n    /* all laps */\n    {\n      \"result\": {\n        \"error\": \"<the exception>\",\n        \"type\": \"<the oracle type>\",\n        \"success\": true\n      },\n      /* all decisions points */\n      \"locations\": [{\n        \"sourceEnd\": 12234,\n        \"executionCount\": 0,\n        \"line\": 352,\n        \"class\": \"org.apache.commons.collections.iterators.CollatingIterator\",\n        \"sourceStart\": 12193\n      }],\n      /* the runned test */\n      \"test\": {\n        \"name\": \"testNullComparator\",\n        \"class\": \"org.apache.commons.collections.iterators.TestCollatingIterator\"\n      },\n      /* all decision made during the laps */\n      \"decisions\": [{\n        /* the location of the laps */\n        \"location\": {\n          \"sourceEnd\": 12234,\n          \"line\": 352,\n          \"class\": \"org.apache.commons.collections.iterators.CollatingIterator\",\n          \"sourceStart\": 12193\n        },\n        /* the value used by the decision */\n        \"value\": {\n          \"variableName\": \"leastObject\",\n          \"value\": \"leastObject\",\n          \"type\": \"int\"\n        },\n        /* the value of the epsilon */\n        \"epsilon\": 0.4,\n        // the name of the strategy\n        \"strategy\": \"Strat4 VAR\",\n        \"used\": true,\n        /* the decision type (new, best, random) */\n        \"decisionType\": \"new\"\n      }],\n      \"startDate\": 1453918743999,\n      \"endDate\": 1453918744165,\n      \"metadata\": {\"seed\": 10}\n    },\n    ...\n  ],\n  \"searchSpace\": [\n    /* all detected decisions */\n    {\n      \"location\": {\n        \"sourceEnd\": 12234,\n        \"line\": 352,\n        \"class\": \"org.apache.commons.collections.iterators.CollatingIterator\",\n        \"sourceStart\": 12193\n      },\n      \"value\": {\n        \"value\": \"1\",\n        \"type\": \"int\"\n      },\n      \"epsilon\": 0,\n      \"strategy\": \"Strat4 NEW\",\n      \"used\": false,\n      \"decisionType\": \"random\"\n    },\n    ...\n  ],\n  \"date\": \"Wed Jan 27 19:19:37 CET 2016\"\n}\n```", 
  "id": 51009361
}