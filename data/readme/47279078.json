{
  "id": 47279078, 
  "read_at": 1462550287, 
  "description": "POC that we can build ML under 3 hours", 
  "README.md": "# Wat\n\nSimple text sentiment analyser.\n\n\n# Install\n\n```js\nnpm install ml-sentiment\nvar ml = require('ml-sentiment')\n```\n\n\n# How\n\nReturns a positive number for positive sentiment association\nand negative number for negative sentiment association.\n\n#### Basics\n\n```js\nvar longSentence = `Transform json to csv data. The difference to my other\nmodule json2csv is json2csv-stream uses streams for transforming the incoming\ndata. The module is built with the new streaming API from Node.js v0.10.0 but\nmaintains backwards compatibility to earlier Node.js versions. Listen for\nheader and line events or pipe the data directly to a readable stream.`\n\nvar ml = require('ml-sentiment')()\nml.classify(longSentence)\n//=> 0 ... (very boring encyclopedia like text)\n\nml.classify('Rainy day but still in a good mood')\n//=> 2 ... (overall positive sentiment)\n```\n\n#### Negations\n\n```js\nvar ml = require('./index.js')();\nml.classify(`not awesome`);\n//=> -3 (negative)\n\nml.classify(`awesome`);\n//=> 3 (positive)\n```\n\n# Credits\n\nOriginal model and data:\nFinn Arup Nielsen, \"A new ANEW: Evaluation of a word list for\nsentiment analysis in microblogs\", http://arxiv.org/abs/1103.2903\n\n\n# TODO\n[X] describe this stuff\n[X] negation of words: 'don't awesome'\n[X] how we got the data, and licence.. give credits\n[ ] normalize\n[ ] steamer better (test with utf-8)\n[ ] steamer with smieleys!\n[ ] dist for node 0.12\n[ ] integrate TravisCI\n", 
  "AFINN-README.txt": "AFINN is a list of English words rated for valence with an integer\nbetween minus five (negative) and plus five (positive). The words have\nbeen manually labeled by Finn Arup Nielsen in 2009-2011. The file\nis tab-separated. There are two versions:\n\nAFINN-111: Newest version with 2477 words and phrases.\n\nAFINN-96: 1468 unique words and phrases on 1480 lines. Note that there\nare 1480 lines, as some words are listed twice. The word list in not\nentirely in alphabetic ordering.  \n\nAn evaluation of the word list is available in:\n\nFinn Arup Nielsen, \"A new ANEW: Evaluation of a word list for\nsentiment analysis in microblogs\", http://arxiv.org/abs/1103.2903\n\nThe list was used in: \n\nLars Kai Hansen, Adam Arvidsson, Finn Arup Nielsen, Elanor Colleoni,\nMichael Etter, \"Good Friends, Bad News - Affect and Virality in\nTwitter\", The 2011 International Workshop on Social Computing,\nNetwork, and Services (SocialComNet 2011).\n\n\nThis database of words is copyright protected and distributed under\n\"Open Database License (ODbL) v1.0\"\nhttp://www.opendatacommons.org/licenses/odbl/1.0/ or a similar\ncopyleft license.\n\nSee comments on the word list here:\nhttp://fnielsen.posterous.com/old-anew-a-sentiment-about-sentiment-analysis\n\n\nIn Python the file may be read into a dictionary with:\n\n>>> afinn = dict(map(lambda (k,v): (k,int(v)), \n                     [ line.split('\\t') for line in open(\"AFINN-111.txt\") ]))\n>>> afinn[\"Good\".lower()]\n3\n>>> sum(map(lambda word: afinn.get(word, 0), \"Rainy day but still in a good mood\".lower().split()))\n2\n\n\n"
}