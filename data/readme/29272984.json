{
  "read_at": 1462551530, 
  "description": "Exploring the Space of Adversarial Images", 
  "README.md": "# Exploring the Space of Adversarial Images\n\n> Tabacof, Pedro and Valle, Eduardo. Exploring the Space of Adversarial Images. arXiv preprint arXiv:1510.05328, 2015. \n\nPlease cite us if you use this code. [ArXiv link](http://arxiv.org/abs/1510.05328)\n## Requirements\n\n[Torch7](https://github.com/torch/torch7)\n\nGFortran with BLAS\n\n## L-BFGS-B\n\nThe adversarial image optimization problem requires the box-constraints so that the distortions won't make the image go outside the pixel space (RGB = [0, 255]).\n\nFor this we use the Fortran library L-BFGS-B written by Nocedal, the author of the algorithm. To compile the library do the following:\n```bash\ncd lbfgsb\nmake lib\n```\nThis library is as fast the Torch7 Optim's LBFGS (wihout bound constraints).\n\n## MNIST\n\nFor MNIST you must train the classifier from scratch. A logistic regression should achieve about 7.5% error, and a standard convolutional network 1%.\n\n## ImageNet\n\nFor ImageNet you can use the pre-trained OverFeat network, which is a deep convolutional neural network that won the localization ILSVRC competition in 2013.\n\nFirst you must download the weights of the network (thanks to Jonghoon Jin):\n```bash\ncd overfeat\nsh install.sh\n```\n\n## Adversarial images\n\nNow you can create adversarial images using:\n```bash\nth adversarial.lua -i image.png\n```\n\nOptions:\n```\n-i: image file\n-cuda: use GPU support (must have CUDA installed on your computer - test this with require 'cutorch')\n-gpu: GPU device number\n-ub: unbounded optimization (allow the distortion to go outside the pixel space)\n-mc: probe the space around the adversarial image using white noise (default is Gaussian)\n-hist: use nonparametric noise instead of Gaussian (\"histogram\")\n-orig: probe the space around the original image instead\n-numbermc: number of probes\n-mnist: use MNIST instead of ImageNet dataset\n-conv: use convolutional network with MNIST (instead of logistic regression)\n-itorch: iTorch plotting\n-seed: random seed\n```\n\nThe resulting images and the distortions will be created on the same folder of the image.\n", 
  "id": 29272984
}