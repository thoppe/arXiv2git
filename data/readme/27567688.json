{
  "read_at": 1462557090, 
  "description": "Implement Dynamic Time Warping for sequence alignment in Julia.", 
  "README.md": "# DynamicTimeWarp\n\n[![Build Status](https://travis-ci.org/joefowler/DynamicTimeWarp.jl.svg?branch=master)](https://travis-ci.org/joefowler/DynamicTimeWarp.jl)\n\n## Dynamic Time Warping\n\nA method for aligning sequences in a way that is insensitive to\narbitrary \"warping\" (stretching or shifting) along the time (or \"time\") axis.\n[Wikipedia article](http://en.wikipedia.org/wiki/Dynamic_time_warping)\n\n\n## Features\n\n* Standard DTW. This algorithm requires O(MN) time and memory, where M, N are the lengths\n  of the two sequences to be aligned.\n* FastDTW (Salvador & Chan, Intelligent Data Analysis 2007), which works by\n  coarsening until DTW is easy, and then stepping back to the finest scales one at a\n  time in a way that\n  lets us search only \"a radius\" around the best DTW path from the next coarser scale.\n\n\n## To Do List\n\n- [*] Restricted DTW, where only a parallelogram is explored, not the full rectangular\n  space. (This is a speed/memory optimization.)\n- [*] FastDTW (Salvador & Chan, Intelligent Data Analysis 2007), which works by\n  coarsening until DTW is easy, and then stepping back to the finest scales one at a\n  time in a way that\n  lets us search only \"a radius\" around the best DTW path from the next coarser scale.\n- [*] Improve FastDTW code by creating a WindowedMatrix type, so that element access can\n   be easier in the dtwwindowed code.\n- [ ] Consider implementing SparseDTW [paper on arXiv](http://arxiv.org/abs/1201.2969)\n- [ ] DTW Barycenter Averaging (see paper by Petitjean et al. 2011).\n- [ ] Possibly a \"spectrum aligner\" where the data being warped are histograms. (Does this\n  affect anything? Maybe not needed.)\n- [ ] Learn the terminology and actually get proper references in place!\n- [ ] Some demonstration examples.\n  ", 
  "id": 27567688
}