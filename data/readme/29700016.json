{
  "read_at": 1462551629, 
  "description": "", 
  "README.md": "## Image Reconstruction Source Code\n\n### What does this package contain\n\n#### 1. Accelerated Proximal-Gradient Algorithms (NPG and NPGs)\n\nThe examples about this methods are under `npgEx` folder with filenames\nended with `Ex`, where the code can reproduce the figures appear in our\npaper.  The algorithm implementations are under folder `npg`, which use the\nsome utility functions under `utils` folder.\n\n##### References\n\n1. R. Gu and A. Dogandzic. (Feb. 2015). Reconstruction of nonnegative\n   sparse signals using accelerated proximal-gradient algorithms. *arXiv*:\n   [1502.02613](http://arxiv.org/abs/1502.02613).\n\n<!---\nR. Gu and A. Dogandzic, \"Nesterov's Proximal-Gradient Algorithms for Reconstructing Nonnegative Signals with Sparse Transform Coefficients,\" 2014.\n--->\n\n\n####2. Beam Hardening Correction Algorithms\n\nAll examples and data for our blind beam hardening correction method are\nunder folder `bhcEx` with filenames ended with `Ex`.  The figures in our\npaper can be reproduced by first run `*Ex`, e.g., `yangEx`, followed by\n`*Ex('plot')`, e.g., `yangEx('plot')`.  Algorithm implementations are under\n`bhc`.\n\n##### References\n\n1. R. Gu and A. Dogandzic, Beam hardening correction via mass attenuation\n   discretization, in *Proc. IEEE Int. Conf. Acoust., Speech, Signal\n   Process.*, Vancouver, Canada, May 2013, pp. 1085-1089.\n\n1. R. Gu and A. Dogandzic. (Sep. 2015). Polychromatic X-ray CT Image\n   Reconstruction and Mass-Attenuation Spectrum Estimation. *arXiv*:\n   [1509.02193](http://arxiv.org/abs/1509.02193).\n\n### How to Install\n\nTo install this package, first download the repository by running\n\n    git clone https://github.com/isucsp/imgRecSrc.git\n\nafter downloading, from MATLAB change your current folder to `imgRecSrc/`\nand first execute `setupPath.m` to add necessary paths to the environment.\n\nFor X-ray CT examples, the projection and back projection operator\nsubroutines may be called from MATLAB.  Since they are written in `c`\nlanguage, to prepare MATLAB recognizable `MEX` files, go to `imgRecSrc/prj`\nand compile the necessary files.  Instructions on compiling the code are\nprovided for both `UNIX` and `Windows`:\n\n#### For `UNIX`\n\nrequire: gcc, cuda toolkit (optional) and GPU (optional)\n\nExecute `make cpu` to compile all cpu implementations.  If you have GPU\nequipped, run `make gpu` to compile GPU implementation of the X-ray CT\nprojection operators.  The matlab code will automatically choose to run on\nGPU if equipped.\n\nIf errors are reported while compiling the `*.c`/`*.cu` files under\n`imgRecSrc/prj`, please edit the first few lines in\n`imgRecSrc/prj/Makefile` to make sure the path for your `CUDA` installation\nis correct.\n\n#### For `Windows`\n\nrequire: Visual Studio, cuda toolkit (optional) and GPU (optional)\n\nExecute `imgRecSrc/setupPath.m` can automatically compile all needed files\nand add paths.\n\nIf there is a GPU equipped in your PC, follow the following steps:\n\n* Open the `VS Native Tools Command Prompt` via `Start -> Microsoft Visual\nStudio -> Visual Studio Tools`;\n\n* Use `cd` command to change directory to your `imgRecSrc/prj`;\n\n* Run `nvcc -c gpuPrj.cu` to generate the `obj` file;\n\n* Execute `imgRecSrc/setupPath.m`.\n\n### Note\n\nThe comments in some of `*.m` files may contain greek letters, which\nare `UTF-8` encoded.  Please open in an appropriately configured text\neditor.\n\n", 
  "id": 29700016
}