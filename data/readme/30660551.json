{
  "read_at": 1462552042, 
  "description": "C++ library of fast, approximate math functions, primarily for Intel AVX2.", 
  "README.md": "libsimd.h\n----------\n\nC++ library of fast, approximate math function for Intel AVX.\n\nHow to use?\n----------\nInclude the relevant header in your file, e.g.:\n\n    #include \"libsimdrcp.h\"\n\nYou need to enable the relevant compiler flags, see below for GCC and Intel compilers.\n\nTo compile with gcc, use e.g.\n\n    g++ my_source.cpp -o my_exec -O3 -mfma -mavx2 -ffast-math\n\nTo compile with icpc, use e.g.\n\n    icpc my_source.cpp -o my_exec -O3 -march=core-avx2 -fma\n\n\nCurrently supported functions:\n----------\n\nCalculates 1/x, using one Newton-Raphson iterations on the start guess from the approximate AVX intrinsic _mm256_rcp_ps. Accurate to 32-bit precision, but faster than `_m256_div_ps(ONE, q)`.\n\n    #include \"libsimdrcp.h\"\n    __m256 _mm256_rcp1s_ps(const __m256 &q)\n\nCalculates 1/sqrt(x), using one Newton-Raphson iterations on the start guess from the approximate AVX intrinsic _mm256_rsqrt_ps. Accurate to 32-bit precision, but faster than `_m256_div_ps(ONE, _mm256_sqrt_ps(q))`.\n\n    #include \"libsimdrsqrt.h\"\n    __m256 _mm256_rsqrt1s_ps(const __m256 &q)\n\nCalculates exp(x) using a bit shifting technique. Extremely fast, but has an error of about 10%.\n\n    #include \"libsimdexp.h\"\n    __m256 _mm256_expfaster_ps(const __m256 &q)\n\nOnly valid for -126 < x < 0.0.  Calculates exp(x) via bit shifting techniques and the Newton-Raphson approximation. Not super fast, but has an error of about 0.0001% or 0.001%, depending on which approximation is used for the reciprocal 1/x. If high accuracy is desired, use _mm256_rcp1s_ps() instead of _mm256_rcp_ps().\n\n    #include \"libsimdexp.h\"\n    __m256 _mm256_expfastsmallneg_ps(const __m256 &q)\n\nPrints a __m256 vector to std. out.\n\n    #include \"libsimdtools.h\"\n    void _mm256_print_ps(const __m256 &q)\n\n\nLicense:\n----------\nThe license for this software has very little restriction. If you do use libsimd for academic publications, please cite this GitHub repository. \n\n    Anders S. Christensen (2015) \"libsimd - a C++ library of fast, approximate math functions for Intel AVX.\" https://github.com/andersx/libsimd\n\nThere will be a preprint on arXiv soon, if I have enough time to wrap things up.\n\n", 
  "id": 30660551
}