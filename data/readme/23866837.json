{
  "read_at": 1462558305, 
  "description": "A C++ header-only, precision-independent library for performing numerical integration", 
  "README.md": "[![Build Status](https://travis-ci.org/tbs1980/NumericalIntegration.svg?branch=master)](https://travis-ci.org/tbs1980/NumericalIntegration)\n\n# C++ Numerical Integration\n\n####  A C++ header-only, precision-independent library for performing numerical integration. This project is intended to be easily utilized in conjunction with the [Eigen](http://eigen.tuxfamily.org/index.php?title=Main_Page) C++ library.  (For a very simple way to incorporate this Numerical Integration capability as one of the unsupported submodules in your normal Eigen package, just clone our fork of the eigen library from this [Bitbucket Repository](https://bitbucket.org/tbs1980/eigen-numerical-integration-module) and use the normal commands install it!)  \n\n\t$ hg clone ssh://hg@bitbucket.org/tbs1980/eigen-numerical-integration-module\n\t$ cd eigen-numerical-integration-module/\n\t$ mkdir build\n\t$ cd build\n\t$ cmake ..\n\t$ make\n\t$ sudo make install\n\n![Gaussian quadrature](./gauss_quadrature.png)\n\nAdaptive Quadrature Numerical Integration routine in the Gauss Kronrod method capable of multiprecision calculation of Gauss Kronrod nodes/weights utilizing Laurie/Gautschi and Piessens'/Patterson's methods for the desired number of nodes/ruleset for the quadrature calculations.  Considerations have also been also paid in this effort to allow the future integration of the additional QUADPACK routines.\n\nThe original QUADPACK FORTRAN77 code can be found here:\n\t(http://www.netlib.org/quadpack/)\n\n\tNote: The naming of functions and variable has been adapted to favor either the associated\n\tjournal publications' naming or simply better descriptive names over the original\n\tQUADPCK FORTRAN77 source code.\n\n## Gauss-Kronrod Node/Weight Calculations\n\nC++ functionality has been created for the calculation of Gauss-Kronrod Quadrature Weights and Abscissa based on previous work by Dirk Laurie, Walter Gautschi, and Robert Piessens', et. al.  This work has also been templated/extended to allow multiple precision by Pavel Holoborodko, Sreekumar Thaitara Balan, Mark Sauder, and Matt Beall.  Additional contribution to the Piessens' method for calculations of the nodes/weights was provided by John Burkardt.\n\nLaurie's (a.k.a. Golub-Welsch), algorithm as implemented is outlined in the following publication:\n\n\tCalculation of Gauss-Kronrod Quadrature Rules, Dirk P. Laurie\n\tMathematics of Computation, Volume 66, Number 219, July 1997, Pages 1133-1145\n\tS 0025-5718(97)00861-2:\n\nWalter Gautschi's OPQ Matlab library and the work cited above can be found at:\n\n\thttps://www.cs.purdue.edu/archives/2002/wxg/codes/OPQ.html,\n\tOrthogonal Polynomials, Quadrature, and Approximation: Computational Methods and Software (in Matlab),\n\tcan be found at: https://www.cs.purdue.edu/homes/wxg/Madrid.pdf\n\nMonegato method used in [quadpackcpp](http://quadpackpp.sourceforge.net/) is under development\n\n\tSome remarks on the construction of extended Gaussian quadrature rules\", Giovanni Monegato,\n\tMath. Comp., Vol. 32 (1978) pp. 247-252. http://www.jstor.org/stable/2006272 .\n\nThe capabilities of this library have been greatly expanded through multiprecision templating via MPFRC++.  The homepage of MPFRC++ can be found here:\n\t(http://www.holoborodko.com/pavel/mpfr/)\n\n\n## Requirements\n\n\t* [Eigen library] (http://eigen.tuxfamily.org/index.php?title=Main_Page )\n    \n\t(If extended precision is needed, as will be the case for computing the Gauss-Kronrod nodes/weights or if desired for integration computations, MPFR C++ will also be required.) \n    \n\t* [The GNU Multiple Precision Arithmetic Library] (https://gmplib.org/ )\n\t* [The GNU MPFR Library] (http://www.mpfr.org/ )\n\t* [MPFR C++] (http://www.holoborodko.com/pavel/mpfr/ )\n\nDebian-based linux users can install dependencies with aptitude package manager:\n\n\t$sudo apt-get install libeigen3-dev\n    \n    (and if your application requires extended precision)\n    \n    $sudo apt-get install libmpfrc++-dev\n\n## Compilation\n\nA compile script has been added to the top level directory, from a terminal you may simply run: ./compile.sh\n\n\n(The following compilation flags must be passed)\n\n\t* -DEIGEN3_INCLUDE_DIR\n\t* -DGMP_ROOT\n\t* -DMPFR_ROOT\n\t* -DMPFRCPP_ROOT\n\n\t$ mkdir build\n\t$ cd build\n\t$ cmake -DEIGEN3_INCLUDE_DIR=path_to_Eigen3 -DGMP_ROOT=path_GMP_root_dir -DMPFR_ROOT=path_to_MPFR_root_dir -DMPFRCPP_ROOT=path_to_MPFRC++_root_dir  path_to_GaussKronrod\n\t$ make\n\nFor example,\n\n\t$ cmake ../ -DEIGEN3_INCLUDE_DIR=/arxiv/libraries/ubuntu/gcc/eigen-3.2.1/include/eigen3 -DGMP_ROOT=/arxiv/libraries/ubuntu/gcc/gmp-6.0.0 -DMPFR_ROOT=/arxiv/libraries/ubuntu/gcc/mpfr-3.1.2 -DMPFRCPP_ROOT=/arxiv/libraries/ubuntu/gcc/mpfrc++-3.5.9\n\t$ make\n\n## Contributing to NumericalIntegration project\n\nContributions are most welcome  :smile: . Please submit a pull request or use the [issues](https://github.com/tbs1980/NumericalIntegration/issues) facility to raise any comments  :+1: .\n\n(You can let people know that this Repository was useful to you by clicking the \"Star\" in the upper right of the repository home page!)\n\n## Credits\n\nHere's an alphabetical list: (note to contributors: do add yourself!)\n\nname | contributions\n-----|--------------\nSreekumar T. Balan | Laurie-Gautschi and Monegato methods\nMatt Beall | Adaptive quadrature and Piessens method\nMark Sauder | Adaptive quadrature, Piessens method, unit-tests\n", 
  "id": 23866837
}