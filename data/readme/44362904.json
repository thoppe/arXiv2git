{
  "read_at": 1462556463, 
  "description": "Code used in the paper \"Stability of Surface Contacts for Humanoid Robots...\" (ICRA 2015)", 
  "README.md": "# Stability of Surface Contacts for Humanoid Robots: Closed-Form Formulae of the Contact Wrench Cone for Rectangular Support Areas\n\nSource code for http://arxiv.org/abs/1501.04719\n\n## Abstract\n\nHumanoid robots locomote by making and breaking contacts with their\nenvironment. A crucial problem is therefore to find precise criteria for\na given contact to remain stable or to break. For rigid surface contacts, the\nmost general criterion is the Contact Wrench Condition (CWC). To check whether\na motion satisfies the CWC, existing approaches take into account a large\nnumber of individual contact forces (for instance, one at each vertex of the\nsupport polygon), which is computationally costly and prevents the use of\nefficient inverse-dynamics methods. Here we argue that the CWC can be\nexplicitly computed without reference to individual contact forces, and give\nclosed-form formulae in the case of rectangular surfaces -- which is of\npractical importance. It turns out that these formulae simply and naturally\nexpress three conditions: (i) Coulomb friction on the resultant force, (ii) ZMP\ninside the support area, and (iii) bounds on the yaw torque. Conditions (i) and\n(ii) are already known, but condition (iii) is, to the best of our knowledge,\nnovel. It is also of particular interest for biped locomotion, where undesired\nfoot yaw rotations are a known issue. We also show that our formulae yield\nsimpler and faster computations than existing approaches for humanoid motions\nin single support, and demonstrate their consistency in the OpenHRP simulator. \n\n<img src=\"https://raw.githubusercontent.com/stephane-caron/icra-2015/master/.illustration.png\" height=\"250\" />\n\nAuthors:\n[Stephane Caron](https://scaron.info),\n[Quang-Cuong Pham](https://www.normalesup.org/~pham/) and\n[Yoshihiko Nakamura](http://www.ynl.t.u-tokyo.ac.jp/)\n\n## Requirements\n\n- [CVXOPT](http://cvxopt.org/) (1.1.7)\n- [OpenRAVE](https://github.com/rdiankov/openrave) (0.9.0)\n- [NumPy](http://www.numpy.org/) (1.8.2)\n- [TOPP](https://github.com/quangounet/TOPP/commit/5370e95f635ac9e50538bb748fd93cee4758fcc9)\n\nFor OpenRAVE, the code has been tested with commit\n`f68553cb7a4532e87f14cf9db20b2becedcda624` in branch `latest_stable`. You may\nneed to [fix the Collision report\nissue](https://github.com/rdiankov/openrave/issues/333#issuecomment-72191884).\n\nYou will also need the ``model.dae`` COLLADA model for HRP4 (md5sum\n``dcea527e4fb2e7abae64a27a017102e4`` for our version), as well as the\n``model.py`` helper scripts in the library folders. Unfortunately it is unclear\nwhether we can release these files here due to copyright problems.\n\n## Usage\n\nThere are two scripts in the repository. Most of the code is organized in the\n`dmotions` module, which is an early version of\n[pymanoid](https://github.com/stephane-caron/pymanoid).\n\n### [generate\\_motion.py](https://github.com/stephane-caron/icra-2015/blob/master/generate_motion.py)\n\nScript generating the complete motion (including retiming) and writing it as\nPOS files into `openhrp/motions/`. These files can then be executed in OpenHRP.\n\n### [check\\_polyhedron.py](https://github.com/stephane-caron/icra-2015/blob/master/check_polyhedron.py)\n\nCode used to double-check the validity of the analytical wrench cone by random\nsampling. Writes down a success rate to the standard output, and fires up a 3D\nplot displaying valid (green) and erroneous (red) points. See the paper for\ndetails.\n", 
  "id": 44362904
}