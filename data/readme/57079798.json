{
  "read_at": 1462547877, 
  "description": "", 
  "README.md": "# ArXivTool\n\nThis is a project which currently (Apr 25) will scrape ArXiv \nemails from Gmail (`ScrapeEmails.py`) and parse the emails into \na json corpus of recent ArXiv papers. Another script (`AbstractAnalysis.py`)\ndoes some basic Latent Semantic Analysis (LSA) to embed the abstracts\ninto a lower dimensional space.\n\n##Obtaining OAuth2 Credentials for Gmail API\n\nIn order to use the `ScrapeEmails.py` you will need the proper credentials to use the Google API. To do this, follow\nthe following instructions\n\n- Navigate to (https://console.developers.google.com/project)\n- Create a new project, named ArXiv Tool. \n- Enter Arxiv Tool project, go to the credentials page \n- \"Create Credentials\" and choose OAuth2 client ID.\n- Choose other for type of application and call the type \"Python Project\" or something like that, and hit create.\n- A pop-up displaying your credentials will be shown, hit OK\n- These credentials will now show up on your credentials page, hit the download button and put into the main folder of this project\n- Rename credentials file as \"client_secret.json\"\n- The first time you run `ScrapeEmails.py` you will be prompted to log-in to your Gmail account, but should be set after that\n- Be careful not to include sensitive information into your github repo. The `.gitignore` file is set up to ignore the .credentials folder that is made in `ScrapeEmails.py` and the client_secret.json, but other files could be pushed to your repo\n- In order to use the Google API you will need to first run this command `pip install --upgrade google-api-python-client`\n\n##Using `ScrapeEmail.py`\n\nA lot of the code in `ScrapeEmail.py` was taken from the Google API python quickstart tutorial found [here](https://developers.google.com/gmail/api/quickstart/python#step_3_set_up_the_sample)\n\nThe main function takes two arguments, the query format for your email and a saving option. \nThe query string should be what you would type into the Gmail search to get ONLY your ArXiv notification emails.\nFor instance if you have a folder just for these emails name ArXiv, the query would be \"label:ArXiv\". Another good place to start might be \"from:no-reply@arxiv.org\". The saving option denotes whether or not you want to save the parsed emails to a json file or not.\n\n##Using `AbstractAnalysis.py`\n\nGiven that you have a json of abstracts saved as `FullCorpus.json` in the project folder. You can simply run `AbstractAnalysis.py` to get a 500 dimensional representation of all the abstracts. For now I recommend running this\nscript from an IDE or IPython environment so you can explore the embeddings and/or use the matrix of distances to find similar abstracts to abstracts of interest.\n\n\n\n\n\n\n", 
  "id": 57079798
}