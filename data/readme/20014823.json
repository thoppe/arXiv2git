{
  "read_at": 1462546669, 
  "description": "***discontinued use official repo=>***   UNOFFICIAL repo of Delphes3", 
  "README_4LHCb": "Delphes 4 LHCb\n==============\n\nThe card \"delphes_card_LHCb.tcl\" contains a preliminary parametrization of the LHCb detector. \n\n- ParticlePropagator\n\nparticles are propagated in a constant B field.\n\n- ChargedHadronMomentumSmearing/ElectronEnergySmearing/MuonMomentumSmearing\n\ncharged particles momenta are smeared according to detector resolution\n\n- TrackMerger\n\ncharged particles are merged into single collection for simpler future processing\n\n- ImpactParameterSmearing\n\ncharged particles transverse IP are smeared according to known LHCb tracking\nperformance.\n\n\n- IdentificationMap\n\nThis module is a recent addition in order to map particle misidentification rates\nand reconstruction efficiencies. \n\nAn example is given in the card but can be expanded if needed. \n\n- ECAL/HCAL\n\nCalorimeter modules are used to parametrize the energy response and angular\nresolution of neutral objects such as photons/neutral hadrons. \n\n- TreeWriter \n\nuser specifies here which collections are stored in the output. \nBy default tracks, neutral hadrons and photons are stored in this card.\nTracks contain muons, electrons, and charged hadrons. \n\n\nQuick start with Delphes\n========================\n\n1) Compile:\n\n  make\n\n2) Simulate p p -> b b~ events \n\n  wget http://cp3.irmp.ucl.ac.be/downloads/pp_bb.hep.gz\n  gunzip pp_bb.hep.gz\n  ./DelphesSTDHEP cards/delphes_card_LHCb.tcl delphes_output.root pp_bb.hep\n\n\nFor more details, please visit:\n\n  https://cp3.irmp.ucl.ac.be/projects/delphes\n\n\n", 
  "README": "Quick start with Delphes\n========================\n\nCommands to get the code:\n\n   wget http://cp3.irmp.ucl.ac.be/downloads/Delphes-3.2.0.tar.gz\n\n   tar -zxf Delphes-3.2.0.tar.gz\n\nCommands to compile the code:\n\n   cd Delphes-3.2.0\n\n   make\n\nFinally, we can run Delphes:\n\n   ./DelphesHepMC\n\nCommand line parameters:\n\n   ./DelphesHepMC config_file output_file [input_file(s)]\n     config_file - configuration file in Tcl format\n     output_file - output file in ROOT format,\n     input_file(s) - input file(s) in HepMC format,\n     with no input_file, or when input_file is -, read standard input.\n\nLet's simulate some Z->ee events:\n\n   wget http://cp3.irmp.ucl.ac.be/downloads/z_ee.hep.gz\n   gunzip z_ee.hep.gz\n   ./DelphesSTDHEP cards/delphes_card_CMS.tcl delphes_output.root z_ee.hep\n\nor\n\n   curl -s http://cp3.irmp.ucl.ac.be/downloads/z_ee.hep.gz | gunzip | ./DelphesSTDHEP cards/delphes_card_CMS.tcl delphes_output.root\n\nFor more detailed documentation, please visit \n\nhttps://cp3.irmp.ucl.ac.be/projects/delphes/wiki/WorkBook\n\n\nConfigure Delphes on lxplus.cern.ch\n====================================\n\ngit clone git://github.com/delphes/delphes.git Delphes\n\ncd Delphes\n\nsource /afs/cern.ch/sw/lcg/app/releases/ROOT/5.34.32/x86_64-slc6-gcc48-opt/root/bin/thisroot\n\nmake \n\n\nSimple analysis using TTree::Draw\n=================================\n\nNow we can start ROOT and look at the data stored in the output ROOT file.\n\nStart ROOT and load Delphes shared library:\n\n   root -l\n   gSystem->Load(\"libDelphes\");\n\nOpen ROOT file and do some basic analysis using Draw or TBrowser:\n\n   TFile::Open(\"delphes_output.root\");\n   Delphes->Draw(\"Electron.PT\");\n   TBrowser browser;\n\nNote 1: Delphes - tree name, it can be learned e.g. from TBrowser\n\nNote 2: Electron - branch name; PT - variable (leaf) of this branch\n\nComplete description of all branches can be found in\n\n   doc/RootTreeDescription.html\n\nThis information is also available at\n\n   https://cp3.irmp.ucl.ac.be/projects/delphes/wiki/WorkBook/RootTreeDescription\n\n\nMacro-based analysis\n====================\n\nAnalysis macro consists of histogram booking, event loop (histogram filling),\nhistogram display.\n\nStart ROOT and load Delphes shared library:\n\n   root -l\n   gSystem->Load(\"libDelphes\");\n\nBasic analysis macro:\n\n{\n  // Create chain of root trees\n  TChain chain(\"Delphes\");\n  chain.Add(\"delphes_output.root\");\n  \n  // Create object of class ExRootTreeReader\n  ExRootTreeReader *treeReader = new ExRootTreeReader(&chain);\n  Long64_t numberOfEntries = treeReader->GetEntries();\n  \n  // Get pointers to branches used in this analysis\n  TClonesArray *branchElectron = treeReader->UseBranch(\"Electron\");\n\n  // Book histograms\n  TH1 *histElectronPT = new TH1F(\"electron pt\", \"electron P_{T}\", 50, 0.0, 100.0);\n\n  // Loop over all events\n  for(Int_t entry = 0; entry < numberOfEntries; ++entry)\n  {\n\n    // Load selected branches with data from specified event\n    treeReader->ReadEntry(entry);\n  \n    // If event contains at least 1 electron\n    if(branchElectron->GetEntries() > 0)\n    {\n      // Take first electron\n      Electron *electron = (Electron*) branchElectron->At(0);\n      \n      // Plot electron transverse momentum\n      histElectronPT->Fill(electron->PT);\n      \n      // Print electron transverse momentum\n      cout << electron->PT << endl;\n    }\n\n  }\n\n  // Show resulting histograms\n  histElectronPT->Draw();\n}\n\n\nMore advanced macro-based analysis\n==================================\n\nThe 'examples' directory contains ROOT macros Example1.C, Example2.C and Example3.C.\n\nHere are the commands to run these ROOT macros:\n\n   root -l\n   .X examples/Example1.C(\"delphes_output.root\");\n\nor\n\n   root -l examples/Example1.C'(\"delphes_output.root\")'\n", 
  "id": 20014823, 
  "readme.md": "[Delphes3](https://cp3.irmp.ucl.ac.be/projects/delphes) \n=========\n\n### Authors\n\nJ\\. de Favereau, C. Delaere, P. Demin, A. Giammanco, V. Lemaitre, A. Mertens, and M. Selvaggi.\n\n\n### Original Repository\n\nAvailable on [GitHub](https://github.com/delphes/delphes).\n\n### References\n\n * [JHEP **1402** (2014) 057](http://dx.doi.org/10.1007/JHEP02%282014%29057) [[arXiv:1307.6346](http://arxiv.org/abs/1307.6346)].\n * https://cp3.irmp.ucl.ac.be/projects/delphes\n\nNote that the following packages are included as externals.\n\n  * [ExRootAnalysis](https://cp3.irmp.ucl.ac.be/projects/ExRootAnalysis),\n  * [FastJet](http://fastjet.fr/) by Cacciari, Salam and Soyez ([citation guide](http://fastjet.fr/about.html)),\n  * [Hector](https://cp3.irmp.ucl.ac.be/projects/cp3admin/wiki/UsersPage/Physics/Hector) by J. de Favereau ([JINST **2** P09005](http://dx.doi.org/10.1088/1748-0221/2/09/P09005) [[arXiv:0707.1198](http://arxiv.org/abs/0707.1198)]),\n  * ~~[ProMC](http://atlaswww.hep.anl.gov/asc/promc/) by S. Chekanov et al. ([1306.6675](http://arxiv.org/abs/1306.6675), [1311.1229](http://arxiv.org/abs/1311.1229)),~~\n  * subset (?) of [Tcl C API](http://wiki.tcl.tk/14054).\n"
}