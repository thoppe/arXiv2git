{
  "read_at": 1462547133, 
  "description": "Principal Component Analysis (PCA) for Missing and/or Noisy Data", 
  "README.md": "### empca: Weighted Expectation Maximization Principal Component Analysis ###\n\nClassic PCA is great but it doesn't know how to handle noisy or missing\ndata properly.  This module provides Weighted Expectation Maximization PCA,\nan iterative method for solving PCA while properly weighting data.\nMissing data is simply the limit of weight=0.\n\nGiven data[nobs, nvar] and weights[nobs, nvar],\n\n    m = empca(data, weights, options...)\n\nThat returns a Model object m, from which you can inspect the eigenvectors,\ncoefficients, and reconstructed model, e.g.\n\n    pylab.plot( m.eigvec[0] )\n    pylab.plot( m.data[0] )\n    pylab.plot( m.model[0] )\n    \nIf you want to apply the model to new data:\n\n    m.set_data(new_data, new_weights)\n    \nand then it will recalculate m.coeff, m.model, m.rchi2, etc. for the new data.\n\nm.R2() is the fraction of data variance explained by the model, while\nm.R2vec(i) is the amount of variance explained by eigenvector i.\n\nThis implementation of EMPCA does *not* subtract the mean from the data.\nIf you don't subtract the mean yourself, it will still work, with\nthe first eigenvector likely being something similar to the mean.\n    \nFor comparison, two alternate methods are also implemented which also\nreturn a Model object:\n\n    m = lower_rank(data, weights, options...)\n    m = classic_pca(data)  #- but no weights or even options...\n\nEverything is self contained in empca.py .  Just put that into your\nPYTHONPATH and \"pydoc empca\" for more details.  For a quick test\non toy example data, run\n\n    python empca.py\n\nThis requires numpy and scipy; it will make plots if you have pylab installed.\n\nThe paper S. Bailey 2012, PASP, 124, 1015 describes the underlying math\nand is available as a pre-print at:\n\nhttp://arxiv.org/abs/1208.4122\n\nIf you use this code in an academic paper, please include a citation\nas described in CITATION.txt, and optionally an acknowledgement such as:\n\n> This work uses the Weighted EMPCA code by Stephen Bailey,\n> available at https://github.com/sbailey/empca/\n\nThe examples in the paper were prepared with version v0.2 of the code.\n\nStephen Bailey, Summer 2012\n\n", 
  "id": 3794507
}