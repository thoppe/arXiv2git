{
  "read_at": 1462550306, 
  "description": "", 
  "README.md": "<<<<<<< HEAD\nDeep Metric Learning Using Triplet Network\n==========================================\nThis code replicates the results from the paper \"Deep metric learning using Triplet network\" (http://arxiv.org/abs/1412.6622).\n\nIt can train a TripletNet on any of the {Cifar10/100, STL10, SVHN, MNIST} datasets.\n\n##Data\nYou can get the needed data using the following repos:\n* CIFAR10/100: https://github.com/soumith/cifar.torch.git\n* STL10: https://github.com/eladhoffer/stl10.torch\n* SVHN: https://github.com/torch/tutorials/blob/master/A_datasets/svhn.lua\n* MNIST: https://github.com/andresy/mnist\n\n##Dependencies\n* Torch (http://torch.ch)\n* \"eladtools\" (https://github.com/eladhoffer/eladtools) for optimizer.\n* \"nngraph\" (https://github.com/torch/nngraph) for TripletNet configuration.\n* \"cudnn.torch\" (https://github.com/soumith/cudnn.torch) for faster training. Can be avoided by changing \"cudnn\" to \"nn\" in models.\n\n##Models\nAvailable models are at the \"Models\" directory. The basic Model.lua was used in the paper, while NiN based models achieve slightly better\nresults.\n\n##Training\nYou can start training using:\n```lua\nth Main.lua -dataset Cifar10 -LR 0.1 -save new_exp_dir\n```\n\n##Additional flags\n|Flag             | Default Value        |Description\n|:----------------|:--------------------:|:----------------------------------------------\n|modelsFolder     |  ./Models/           | Models Folder\n|network          |  Model.lua           | Model file - must return valid network.\n|LR               |  0.1                 | learning rate\n|LRDecay          |  0                   | learning rate decay (in # samples\n|weightDecay      |  1e-4                | L2 penalty on the weights\n|momentum         |  0.9                 | momentum\n|batchSize        |  128                 | batch size\n|optimization     |  sgd                 | optimization method\n|epoch            |  -1                  | number of epochs to train (-1 for unbounded)\n|earlyStop\t\t  |  7\t\t\t\t\t | stop training if validation error is increasing 7 times in a row\n|splitTrainVal\t  | 0.8\t\t\t\t\t | split train set into train (80%) and validation (20%) set\n|threads          |  8                   | number of threads\n|type             |  cuda                | float or cuda\n|devid            |  1                   | device ID (if using CUDA)\n|load             |  none                | load existing net weights\n|save             |  time-identifier     | save directory\n|dataset          |  Cifar10             | Dataset - Cifar10, Cifar100, STL10, SVHN, MNIST\n|normalize        |  1                   | 1 - normalize using only 1 mean and std values\n|whiten           |  false               | whiten data\n|augment          |  false               | Augment training data\n|preProcDir       |  ./PreProcData/      | Data for pre-processing (means,Pinv,P)\n=======\n# TripletNet\n>>>>>>> 489a9cdbfa21c1dc7c00d6f67c39ab03c01d151a\n", 
  "id": 47432740
}