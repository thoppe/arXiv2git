{
  "read_at": 1462556236, 
  "description": "", 
  "README.md": "# Independent Study Report\n\n### ArXiV Paper Extraction:\n- Code: https://github.com/nisarg64/ArXiv-Paper-Extraction\n- Purpose: Word2vec/Doc2vec algorithm requires a large dataset to accurate word vectors. This script was used to extract a large corpus of Computer Science research papers published in the last 15 years. Around 3200 papers were collected\n- Reference: http://arxiv.org/help/api/index#about\n\n### Sentiment Analysis using anew dataset\n- Code: https://github.com/nisarg64/Sentiment-Analysis-ANEW\n- Purpose: Performed sentiment analysis on computer science dataset to find the obvious sentiment of the computer science text.\n- Reference: http://www.csc.ncsu.edu/faculty/healey/maa-16/text/\n\n### Word2Vec-Doc2Vec Agorithms:\n- Code: https://github.com/nisarg64/Word2Vec-Doc2Vec\n- Purpose: Implemented word2vec/doc2vec models using python's gensim package to improve the document embeddings for CSC791 dataset.\n- Reference: https://www.kaggle.com/c/word2vec-nlp-tutorial\n\n### Sentiment Analysis using Doc2vec Algorithm:\n- Code: https://github.com/nisarg64/Sentiment-Analysis-Word2Vec\n- Purpose: Working on implementing sentiment analysis using word2vec/doc2vec algorithm\n\n### Sentiment Analysis using Recursive Neural Network Algorithm:\n- Code: https://github.com/nisarg64/Sentiment-Analysis-RNN\n- Purpose: Working on implementing sentiment analysis using recursive neural network algorithm as described in Stanford's RNN paper\n\n### Sentiment Analysis in Apache Spark using Pyspark and MLLib:\n- Code: https://github.com/nisarg64/Sentiment-Analysis-Pyspark\n- Purpose: Working on implementing Sentiment Analysis in Apache Spark using Pyspark and MLLib libraries\n\n", 
  "id": 45089784
}