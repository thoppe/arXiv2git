{
  "read_at": 1462551421, 
  "description": "align BS-Seq reads and extract methylation without intermediate temp files", 
  "README.md": "bwa-meth\n========\n\nFast and accurante alignment of BS-Seq reads.\n\n## Update 2016\n\n`bwa-meth` is still among (if not *the*) best aligners for BS-Seq.\nWhile it is fairly stable, I will continue to support the alignment\npart of `bwa-meth`--fixing any bugs or updating as needed.\n\nThere are now several (likely better) alternatives for tabulation\nand SNP calling than provided here so I will not develop those further.\n\nFor tabulation, bias, and plotting, use [PileOMeth](https://github.com/dpryan79/PileOMeth)\n\nFor SNP calling (a more modern BisSNP), use [biscuit](https://github.com/zwdzwd/biscuit)\n\n\n## Intro\n\nThis works for single-end reads and for **paired-end reads from the\ndirectional protocol** (most common).\n\nUses the method employed by methylcoder and Bismark of *in silico*\nconversion of all C's to T's in both reference and reads.\n\nRecovers the original read (needed to tabulate methylation) by attaching it\nas a comment which **bwa** appends as a tag to the read.\n\nPerforms favorably to existing aligners gauged by number of on and off-target reads for a capture method that targets CpG-rich region. Some off-target regions may be enriched, but all aligners are be subject to the same assumptions.\nSee manuscript: http://arxiv.org/abs/1401.1129 for details.\nOptimal alignment is the upper-left corner. Curves are drawn by varying the\nmapping quality cutoff for alingers that use it.\n\nThis image is on real reads and represents an attempt to find good parameters\nfor all aligners tested.\n\n![Untrimmed reads comparison](https://gist.githubusercontent.com/brentp/bf7d3c3d3f23cc319ed8/raw/d5f1ebcc53b924a05a5980159bfcb97494ec34f2/real.gif)\n\nNote that *bwa-meth* and *Last* perform well without trimming.\n\nrun.sh scripts for each method are here: https://github.com/brentp/bwa-meth/tree/master/compare\nI have done my best to have each method perform optimally, but no doubt there\ncould be improvements.\n\nQuickStart\n==========\n\nWithout installation, you can use as `python bwameth.py` with install, the\ncommand is `bwameth.py`.\n\nThe commands:\n\n    bwameth.py index $REF\n    bwameth.py --reference $REF some_R1.fastq.gz some_R2.fastq.gz --prefix some.output\n\nwill create `some.output.bam` and `some.output.bam.bai`.\nTo align single end-reads, specify only 1 file.\n\nSee the **full example** at: https://github.com/brentp/bwa-meth/tree/master/example/\n\nInstallation\n============\n\nThe following snippet should work for most systems that have samtools and bwa\ninstalled and the ability to install python packages. (Or, you can send this\nto your sys-admin). See the dependencies section below for further instructions: \n\n```Shell\n\n    # these 4 lines are only needed if you don't have toolshed installed\n    wget https://pypi.python.org/packages/source/t/toolshed/toolshed-0.4.0.tar.gz\n    tar xzvf toolshed-0.4.0.tar.gz\n    cd toolshed-0.4.0\n    sudo python setup.py install\n\n    wget https://github.com/brentp/bwa-meth/archive/v0.10.tar.gz\n    tar xzvf v0.10.tar.gz\n    cd bwa-meth-0.10/\n    sudo python setup.py install\n\n```\n\nAfter this, you should be able to run: `bwameth.py` and see the help.\n\nDependencies\n------------\n\n`bwa-meth` depends on \n\n + python 2.7+ (including python3)\n   - `toolshed` library. can be installed with: \n      * `easy_install toolshed` or\n      * `pip install toolshed`\n\n   - if you don't have root or sudo priviledges, you can run\n     `python setup.py install --user` from this directory and the bwameth.py\n     executable will be at: ~/.local/bin/bwameth.py\n\n   - if you do have root or sudo run: `[sudo] python setup.py install` from\n     this directory\n\n   - users unaccustomed to installing their own python packages should \n     download anaconda: https://store.continuum.io/cshop/anaconda/ and\n     then install the toolshed module with pip as described above.\n\n + samtools command on the `$PATH` (https://github.com/samtools/samtools)\n\n + bwa mem from: https://github.com/lh3/bwa\n\n\nusage\n=====\n\nIndex\n-----\n\nOne time only, you need to index a reference sequence.\n\n    bwameth.py index $REFERENCE\n\nIf your reference is `some.fasta`, this will create `some.c2t.fasta`\nand all of the bwa indexes associated with it.\n\nAlign\n-----\n\n    bwameth.py --threads 16 \\\n         --prefix $PREFIX \\\n         --reference $REFERENCE \\\n         $FQ1 $FQ2\n         \nThis will create $PREFIX.bam and $PREFIX.bam.bai. The output will pass\nPicard-tools ValidateSam and will have the\nreads in the correct location (flipped from G => A reference).\n\nHandles clipped alignments and indels correctly. Fastqs can be gzipped\nor not.\n\nThe command above will be sent to BWA to do the work as something like:\n\n    bwa mem -L 25 -pCM -t 15  $REFERENCE.c2t.fa \\\n            '<python bwameth.py c2t $FQ1 $FQ2'\n\nSo the converted reads are streamed directly to bwa and **never written\nto disk**. The output from that is modified by `bwa-meth` and streamed\nstraight to a bam file.\n\nBias\n----\n\nIt is well known that methylation estimates from the bases at the ends of reads\nare biased (or just incorrect). We can plot these using, e.g.:\n\n    python bias-plot.py $PREFIX.bam $REF\n\nWhich will create the output files $PREFIX.bias.txt and $PREFIX.bias.png\nThe latter looks like this\n\n![bias-plot](https://gist.githubusercontent.com/brentp/bf7d3c3d3f23cc319ed8/raw/d8c41bacd7b290881b2b34c707c33a61936cd861/bwa-real.bias.png \"Bias Plot\")\n\nThis plot requires that *matplotlib* and *seaborn* are installed. If they\nare not available, then only the text file will be created.\n\nTabulate\n--------\n\nCurrently, `bwa-meth` calls Bis-SNP to call methylation for CpG's and genotypes \nfor SNPs. **Note** that we can use the *bias plot* from above to inform our\ntrimming. Below, we will trim 3 bases from the ends of the reads.\n\nE.g.:\n\n    bwameth.py tabulate \\\n                --trim 3,3 \\\n                --map-q 60 \\\n                --bissnp BisSNP-0.82.2.jar \\\n                --prefix out \\\n                -t 12 \\\n                --reference $REF \\\n                $BAM1 $BAM2 ... $BAMN\n\nThis will use BisSNP to perform multi-sample SNP and CpG calling to create\n`out.cpg.vcf` and `out.snp.vcf` as well as a BED file of methylation for\neach input BAM.\n", 
  "id": 14875103
}