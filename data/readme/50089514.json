{
  "read_at": 1462552532, 
  "description": "A Python script to enumerate influential people based on wikipedia.", 
  "README.md": "# wikipedia_people\n\nA Python script to collect data on influential people from wikipedia. The purpose is to programmatically generate a\ndata set similar to the one used in this Wait But Why blog post (horizontal history):\n\nhttp://waitbutwhy.com/2016/01/horizontal-history.html\n\nCurrently it collects length of a persons wikipedia entry, the number of links that point to their page, and the year of their demise. A possible next step is to parse the categories in more detail, i.e. artist, scientist, politician, etc... or to apply PageRank, similar to this http://arxiv.org/abs/1405.7183\n\nThe data are written as csv files in the data directory. Each file is named by the year of birth, i.e.,\nwiki_XXXX.csv, where XXXX is the year of birth for each person listed in the file. I did not include a header in the data\nfiles in order to simplify\nconcatenation of the files.\nThere is an example header provided in the header.txt file in the data directory.\n\n__Note:__ The name field sometime contains commas and double quotes which may cause problems with importing the csv files. I removed the extra commas in the all.csv file and am working on removing both commas and quotation marks from the individual year files.\n  \n`length,linkshere,pagelinkshere,year_birth,year_demise,name`\n\nThe column meanings are:\n```\nlength: length of the article. Specifically, the page size property exposed by the wikipedia API.\nlinkshere: count of the wikipedia API property linkshere.\npagelinkshere: count of the wikipedia API property linkshere, filtered to include only other wikipedia pages.\n               Some pages have lots of links from Talk or User pages, which are less relevant for determining\n               cultural and historical significance, and this measure removes those.\nyear_birth: name says it all\nyear_demise:\nname: title of the page. Usually this is the persons name, but sometimes has addition information, e.g.,\n      William Smith (lexicographer)\n```\n\nThe best way to assess cultural and historical significance from these data is debatable, but `pagelinkshere` is a reasonable default metric to use.\nYou can run the shell script `top10.sh` to get a list of the top 10, over all years, sorted by `pagelinkshere`, e.g.,\n```\n$ ./top10.sh\n1889 1945 Adolf Hitler\n1707 1778 Carl Linnaeus\n1809 1865 Abraham Lincoln\n1882 1945 Franklin D. Roosevelt\n1874 1965 Winston Churchill\n1819 1901 Queen Victoria\n1732 1799 George Washington\n1769 1821 Napoleon\n1859 1926 Sidney Lee\n1878 1953 Joseph Stalin\n```\n\nOptionally you may include the command line argument N to list the top N, e.g.,\n\n```\n$ ./top10.sh 20\n1889 1945 Adolf Hitler\n1707 1778 Carl Linnaeus\n1809 1865 Abraham Lincoln\n1882 1945 Franklin D. Roosevelt\n1874 1965 Winston Churchill\n1819 1901 Queen Victoria\n1732 1799 George Washington\n1769 1821 Napoleon\n1859 1926 Sidney Lee\n1878 1953 Joseph Stalin\n1858 1919 Theodore Roosevelt\n1890 1969 Dwight D. Eisenhower\n1743 1826 Thomas Jefferson\n1902 1983 Nikolaus Pevsner\n1908 1973 Lyndon B. Johnson\n1856 1924 Woodrow Wilson\n1756 1791 Wolfgang Amadeus Mozart\n1869 1948 Mahatma Gandhi\n1685 1750 Johann Sebastian Bach\n1818 1883 Karl Marx\n```\n", 
  "id": 50089514
}