{
  "README": "\n-----------------------------------------------------------------------\n\n\nCopyrigtht 2014 Georgios Karagiannis\n\nThis file is part of PISAA_Ising2D.\n\nPISAA_Ising2D is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation version 2 of the License.\n\nPISAA_Ising2D is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with PISAA_Ising2D.  If not, see <http://www.gnu.org/licenses/>.\n\n-----------------------------------------------------------------------\n\n\nDESCRIPTION :\n-------------\n\nA C code implementation of PISAA for the 2D image denoising application. \n\nPISAA is a stochastic optimisation algorithm that aims at overcoming the local trapping issue.\n\nThe Ferrite-Pearlite image is included.  \n\nKaragiannis, G., Konomi, B., Lin, G., & Liang F. (2015). Parallel and Interacting Stochastic Approximation Annealing algorithms for global optimisation, arXiv:1508.04876 [stat.CO]\n\nCONTACT DETAILS :\n-----------------\n\nGeorgios Karagiannis\n\nPostdoctoral research associate\nDepartment of Mathematics, Purdue University\n150 N. University Street\nWest Lafayette, IN 47907-2067, USA\n\nTelephone: +1 (765) 496-1007\n\nEmail: gkaragia@purdue.edu\n\nContact email: georgios.stats@gmail.com\n\nREQUIREMENTS :\n--------------\n\nC compiler (ANSI C, C99, or later)\n\nThis code is tasted successfully with GCC, SUN, INTEL C compilers\n\nFILES :\n-------\n\nmakefile                    : Makefile\n\npisaa.c                     : The main function\n\nCrossover_int_operations.c  : Crossover operations\nCrossover_int_operations.h  : Header file\n\nMutation_int_operations.c   : Mutation operations\nMutation_int_operations.h   : Header file\n\nMH_int_updates.c            : Metropolis-Hastings updates to generate a seed\nMH_int_updates.h            : Header file\n\nSelf_adjastment_prosedure.c : Functions related to the self adjusting mechanism\nSelf_adjastment_prosedure.h : Header file\n\ncost_ising2D.c              : The cost function\ncost_ising2D.h              : Header file\n\nuniformrng.c                : Uniform random number generator\nnormalrng.c                 : Normal random number generator\nRNG.h                       : Header file\n\nnrutil.c                    : Functions to treat array allocations\nnrutil.h                    : Header file\n\nFPphotomicro_240x320_bw.dat : The Ferrite-Pearlite image data-set\n\noutput_files                : Folder for the output of the program \n\nexe                         : Binary file  \n\n      input flags :\n      \n         -ID        Reference number\n         -Data      file with the data; \n         -Niter     number of iterations\n         -Npop      population size\n         -Nsam      size of sample obtained\n         -Gwarm     burn in parameter of gain function\n         -Ghigh     high value of gain function\n         -Gpow      power of gain function\n         -Hlow      low limit of grid\n         -Hhigh     high limit of grid\n         -Hsize     size of grid\n         -Hzeta     power of desired probability\n         -Hconst    theta normalisation constant\n         -Twarm     burn in parameter of temperature sequence\n         -Tlow      low value of temperature sequence\n         -Thigh     high value of temperature sequence\n         -Tpow      power of temperature sequence\n        \n      output files :\n      \n        ./output_files/hist-n=%d-r=%d               The approximated values of \n                                                        thetas, and normalised \n                                                        thetas \n        ./output_files/fz_best_trace-n=%d-r=%d      Best value discovered, the \n                                                        whole chain\n        ./output_files/fz_best-n=%d-r=%d            Best value discovered, \n                                                        originally\n        ./output_files/fz_better-n=%d-r=%d          Best value discovered,  \n                                                        after refined\n\n      examples :\n      \n        make build CC=gcc CFLAGS=-O2 LDFLAGS=-lm\n      \n        ./exe -ID 1 -Data ./FPphotomicro_240x320_bw.dat -Niter 20000000 \\\n                -Npop 5 -Nsam 100 \n\nCOMMENTS :\n----------\n\n- The output gives `mh0 rate=-nan'. This is reasonable. It is referred to the standard Simulated Annealing algorithm which is not used.\n \nFUTURE UPDATES :\n----------------\n\n- Add a flag that allows one to externally choose the mutation and crossover operations used as well as set the operation rates.\n\n- Make the code use openMP and openMPI.\n\n- Remove the code related to mh0 option.\n\n\n", 
  "read_at": 1462554778, 
  "description": "Parallel and interacting simulated annealing approximation (Image denoising application)", 
  "id": 45494406
}