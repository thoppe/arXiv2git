{
  "read_at": 1462550324, 
  "description": "Cosmological Realizations for Intensity Mapping Experiments", 
  "README.ForGet": "ForGet\n\n1 Introduction.\n\nForGet generates realizations of different galactic and extragalactic\nforegrounds relevant to intensity mapping experiments. 4 types of\nforegrounds are currently implemented:\n a) Galactic synchrotron (polarized and unpolarized).\n b) Galactic free-free (Bremsstrahlung emission).\n c) Extra-galactic free-free.\n d) Extra-galactic point sources.\nThe foregrounds b-d are simply generated as gaussian realizations of\nthe angular power-spectra C_l(nu1,nu2) modelled by Santos, Cooray\n& Knox, 2005, with the parameters given in our companion paper.\n\nOn the other hand, galactic synchrotron is arguably the most relevant\nforeground for intensity mapping. Not only does it have the largest\namplitude by far, but also its polarized part is not spectrally smooth\ndue to Faraday rotation within the galaxy, which is potentially harmful\nin the context of foreground subtraction due to polarization leakage.\nOn top of this, since it is a galactic foreground, synchrotron emission\nis not isotropic, being larger close to the galactic plane and dropping\ntowards high galactic latitudes. For these reason a slightly different\nmethod was used to simulate this foreground, the details of which can\nbe found in arXiv:1405.1751.\n\nIn what follows we will briefly describe the compilation, usage, input\nand output of ForGet.\n\n\n2 Compilation and usage.\n\nThese instructions are the same for both ForGet and JoinT.\nTo compile ForGet and JoinT, open the Makefile and edit it according\nto your system. The default compilation options should work for most\nsystems.\n\nForGet and JoinT use 3 external packages:\n - CFITSIO. FITS format library.\n - HEALPix. C library should be installed (version >=3.10).\n - LIBSHARP. Spherical Harmonic Transform library.\nThe paths to the corresponding header files and libraries should be\ncorrectly set in the Makefile.\n\nOnce the Makefile has been editted, typing 'make' should generate\nthe executables 'ForGet' and 'JoinT'. To run them just type\n\n> ./<exec_name> <param_file>\n\nwhere <exec_name> is either of the executables and <param_file> is the\npath to their corresponding parameter file (see section 3).\n\n\n3 Parameter file.\n\nThe behaviour of ForGet is mainly controlled by the input param file.\nThe param file is basically a set of name-value pairs. Any blank lines\nand anything beyond a #-symbol will be ignored. We provide a sample\nparam file (param_ForGet_sample.ini) that includes all the input\nparameters needed by ForGet. The comments included in this file\nexplain the meaning and functionality of these parameters.\n\n\n4 Output.\n\nThe output of ForGet is a set of fits-files containing the HEALPix\nmaps corresponding to the foreground selected for the run in different\nfrequency bands. For instance, for the values used in param_ForGet_sample.ini,\nthe output maps would be stored in test_001.fits - test_150.fits. These\nmaps will be stored with RING ordering. If running with do_polarization= 1,\neach output FITS file will contain the three Stokes parameters (I,Q,U).\n", 
  "README.JoinT": "JoinT\n\n1 Introduction.\n\nJoinT is a convenience tool provided with GetHI and ForGet that\ncombines the output from both programs and adds some instrument-dependent\neffects to generate a full set of mock temperature maps. The process\nis:\n a) Read and add the temperature maps generated by GetHI (cosmological\n    signal) and ForGet (different foregrounds).\n b) Add contamination due to polarized synchrotron emission using a \n    constant polarization leakage fraction (if required).\n c) Impose a Gaussian beam with a given FWHM based on a few single-dish\n    parameters.\n d) Include Gaussian noise according to some input parameters (system\n    temperature, integration time, etc.).\n\nIn what follows we will briefly describe the compilation, usage, input\nand output of ForGet.\n\n\n2 Compilation and usage.\n\nSee section 2 in README.ForGet.\n\n\n3 Parameter file.\n\nThe behaviour of JoinT is mainly controlled by the input param file.\nThe param file is basically a set of name-value pairs. Any blank lines and\nanything beyond a #-symbol will be ignored. We provide a sample param\nfile (param_JoinT_sample.ini) that includes all the input parameters\nneeded by JoinT. The comments included in this file explain the meaning\nand functionality of these parameters.\n\n\n4 Output.\n\nThe output of JoinT is a set of fits-files containing the HEALPix\nmaps corresponding to the combined foregrounds + cosmological signal + noise.\nFor instance, for the values used in param_JoinT_sample.ini, the output maps\nwould be stored in test_001.fits - test_150.fits. These maps will be stored\nwith RING ordering.\n", 
  "README.GetHI": "GetHI\n\n1 Introduction.\n\nGetHI generates random realizations of the temperature fluctuations\ndue to the 21 cm emission of neutral hydrogen in the late Universe\n(z <~ 3-4). The method used by GetHI can be summarized as follows:\n a) Generate a three-dimensional Gaussian realization of the matter\n    density field in a Cartesian grid.\n b) Generate the corresponding radial velocity field by solving the\n    linear continuity equation. This will be used later to include\n    redshift-space distortions (RSDs).\n d) Calculate the redshift of each grid cell and linearly evolve the\n    density and velocity fields to that redshift. Include a redshift-\n    dependent linear bias for the density field corresponding to the\n    neutral hydrogen bias (see section 5).\n c) Perform a lognormal transformation on the Gaussian density field.\n    The lognormal transformation (Coles & Jones, 1993) enforces a\n    physical (>0) density and takes care of part of the non-linear\n    evolution.\n e) Calculate the neutral hydrogen mass contained in each grid cell.\n    for this GetHI must use a particular prescription for the \n    neutral hydrogen fraction x_HI(z) (see section 5).\n d) Interpolate the Cartesian grid to a set of spherical shells. Each\n    shell corresponds to a frequency interval and to a redshift\n    interval (nu=nu_21cm/(1+z)). When performing this interpolation\n    the velocity field must be taken into account to include RSDs.\n    The spherical shells are pixelized using HEALPix.\n\nIn what follows we will briefly describe the compilation, usage,\ninput and output of GetHI.\n\n\n2 Compilation and usage.\n\nTo compile GetHI, open the Makefile and edit it according to your\nsystem. The default options (except for the paths to the external\nlibraries) should work for most systems. GetHI may be very memory-\ndemanding. To minimize the memory overhead use single precision\nfloating point (USE_PRECISION = yes).\n\nOpenMP parallelization is enabled by setting the option USE_OMP\nto \"yes\".\n\nMPI parallelization is enabled by setting the option USE_MPI\nto \"yes\".\n\nGetHI uses 4 external packages:\n - GSL. The GNU Scientific Library (tested for versions 3.*)\n - FFTW. The Fastest Fourier Transform of the West (versions 3.*)\n - CFITSIO. FITS format library.\n - HEALPix. The C library should be installed (version >=3.10).\n - libsharp. The library should be installed.\nThe paths to the corresponding headers and libraries should be correctly\nset in the Makefile.\n\nOnce the Makefile has been editted, typing 'make' should generate\nthe executable 'GetHI'. To run GetHI just type\n\n> ./GetHI <param_file>\n\nwhere <param_file> is the path to the parameter file described in\nsection 3.\n\n\n3 Parameter file.\n\nThe behaviour of GetHI is mainly controlled by the input param file. The\nparam file is basically a set of name-value pairs. Any blank lines, and \nanything beyond a #-symbol will be ignored. We provide a sample param\nfile (param_sample.ini) that includes all the input parameters needed by\nGetHI. The comments included in this file explain the meaning and\nfunctionality of these parameters.\n\n\n4 Output.\n\nThe main output of GetHI is a set of fits-files containing the HEALPix\nmaps corresponding to the 21cm temperature fluctuations in different\nfrequency bands. For instance, for the values used in param_sample.ini,\nthe output maps would be stored in test_001.fits - test_150.fits. These\nmaps will be stored with RING ordering.\n\nGetHI also generates a frequency table with the format:\n    i  nu0  nuf  z0  zf,\nwhere i is the map number for the different output maps, [nu0,nuf] is the\nfrequency range for that map and [z0,zf] is the corresponding redshift\nrange. This frequency table is written in <prefix>_nuTable.dat, where\n<prefix> is the output prefix chosen in the param file.\n\n\n5 Note on x_HI(z) and b_HI(z).\n\nGetHI uses two model-dependent ingredients to generate the cosmological\nsignal: the redshift-dependent neutral hydrogen fraction x_HI(z) and the\nneutral hydrogen bias. By default GetHI uses a constant bias of 1 and:\n  x_HI(z) = 0.008*(1+z), \nwhich is a rough fit to the measurements of TODO (z=0.1) and TODO (z=1.5).\nThese models are very simplistic and the user may want to use other \nprescriptions. In order to do this, the source code itself must be altered,\nhowever we have structured the code so that the necessary changes are\nminimal. Thus, in order to change the prescription for x_HI and/or b_HI,\nthe user only needs to modify the functions \"fraction_HI\" and \"bias_HI\" in\nthe file \"src/user_defined.c\".\n", 
  "README": "CRIME - Cosmological Realizations for Intensity Mapping Experiments\n\nCRIME is a set of computational tools that can be used to generate mock\nrealizations of intensity mapping observations of the neutral hydrogen\ndistribution. CRIME is made up of 3 separate tools:\n - GetHI:  generates realizations of the temperature fluctuations due to\n           the 21cm emission of neutral hydrogen. Optionally it can also\n\t   generate a realization of the point-source continuum emission\n\t   (for a given population) by sampling the same density distribution,\n\t   although the use of this feature is discouraged for performance\n\t   reasons (see the original paper for more details).\n - ForGet: generates realizations of the different galactic and\n           extra-galactic foregrounds relevant for intensity mapping\n\t   experiments. ForGet uses some external datasets (e.g. the\n\t   Haslam 408 MHz map), which are stored in the folder \"data\".\n - JoinT:  this is a convenience utility that joins the temperature maps\n           generated by GetHI and ForGet and includes several\n\t   instrument-dependent effects (in an overly simplistic way).\n\nThe source code can be found in the folder \"src/\", and further details\nregarding the functionality of each of the programs is provided in\nthe corresponding README files. Besides these, we also provide a set of\nconvenience shell scripts that combine these 3 tools so that they can\nbe run in one go. These are located in the folder \"script\".\n\nWhen in doubt, bear in mind that by default CRIME uses the following units:\n - Lenghts: Mpc/h\n - Frequency: MHz\n - Temperature: mK\n - Faraday depths: rad/m^2\n\nLicense:\nCRIME (including GetHI, ForGet and JoinT) are distributed under the GPL\nlicense (see COPYING in the root directory). We kindly ask you to cite\nthe program's website \"http://intensitymapping.physics.ox.ac.uk/CRIME.html\"\nand accompanying paper \"arXiv:1405.1751\" when using it for published results.\n\nContact:\nRegarding bugs, suggestions, questions or petitions, feel free to contact\nthe author:\n    David Alonso: david.alonso@astro.ox.ac.uk\n", 
  "id": 48548435
}