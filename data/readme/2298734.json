{
  "read_at": 1462552179, 
  "description": "Rational Hybrid Monte Carlo simulation of QCD with staggered fermions on GPU", 
  "README.md": "Rational Hybrid Montecarlo with non improved staggered fermions\n===============================================================\n\n---\n**Developers and mantainers**  \n*Claudio Bonati* (C++ framework, CUDA kernels) (<bonati@df.unipi.it>)  \n*Guido Cossu* (CUDA kernels) (<cossu@post.kek.jp>)  \n\n*History*:  \n**Version 0.1**  9/2011     CUDA kernels\n\n---\n\n## 1. Features \n\n\nPerforms Rational Hybrid Monte Carlo simulation of QCD with  N_f flavors\nof staggered (non improved) fermions. \nExcept some minor functions, all the calculations are performed using\nNVIDIA gpus, implementing a CUDA version of all the relevant kernels \n(Dirac operator, Dirac operator inversion, gauge and momenta update).\n\nSee the following reference for more details:  \n*'QCD simulations with staggered fermions on GPUs'*  \n[Arxiv Paper 1106.5673](http://inspirebeta.net/record/916054)\n\n\n## 2. Compilation\n\n\nThe typical compilation follows the pattern:\n\n`./configure && make`\n\nthis will compile a code to run in a single core CPU.\n\n### 3. Enabling CUDA routines\n\nIn order to enable CUDA routines type the following command (also look at the \nvarious options in `configure --help`)\n\n`./configure --enable-cuda=ARCH`\n\nwhere ARCH should be substituted by one of the following strings \"sm_XX\" \nin order to choose the target NVIDIA architecture\n\n*  *sm_10*  ISA_1, Basic features  \n*  *sm_11*  atomic memory operations on global memory  \n*  *sm_12*  atomic memory operations on shared memory, vote instructions  \n*  *sm_13* double precision floating point support (Tesla Cards)    \n*  *sm_20*  Fermi architecture support  \n\nplease refer to the original [NVIDIA documentation](http://developer.nvidia.com/cuda-toolkit-40) for more details \non which cards support the several architectures.\n\n## 4. Issues\n\n\nSome newer compilers, like GNU `gcc 4.5`, are incompatible with the NVIDIA `nvcc`\ncompiler (CUDA 4.0). In order to solve this problem you should install a different \nversion of the compiler, e.g. `gcc 4.4`, in the directory `PATH_TO_COMPILER` and then\nconfigure with the following command\n\n`./configure --enable-cuda=ARCH --with-cuda_comp=PATH_TO_COMPILER \nCXX=PATH_TO_COMPILER/g++ CC=PATH_TO_COMPILER/gcc`\n\nAlso, if the mandatory library [MPFR](http://www.mpfr.org/) (for Multiple Precision in rational approximations) is \ninstalled in a non standard location (not `/usr/lib`) use the flag `--with-mpfr=PATH` where `PATH` is the location\nof the library in your system\n\n## 5. Known bugs\n\n * Some older versions of `autoreconf` fail to build a working `configure` file. Usually the one shipped is working.\n\nIf you find any bug please report any to the developers on GitHub issues:\n\n[RHMC on GPU issues](https://github.com/coppolachan/RHMC-on-GPU/issues)\n\n", 
  "id": 2298734
}