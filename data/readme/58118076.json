{
  "read_at": 1462556763, 
  "description": "SPheno with improved build system (spheno.hepforge.org)", 
  "README.md": "SPheno [![Build Status](https://travis-ci.org/JP-Ellis/SPheno.svg?branch=master)](https://travis-ci.org/JP-Ellis/SPheno)\n======\n\nSPheno stands for S(upersymmetric) Pheno(menology).\n\nThe code calculates the SUSY spectrum using low energy data and a user supplied\nhigh scale model as input.  The spectrum is then used for calculating the\nfollowing:\n\n- Two- and three-body decay modes of supersymmetric particle as well\nas of Higgs bosons;\n- The production cross sections for supersymmetric particle and Higgs bosons in e^+ e^- annihilation;\n- The branching of the decay $b \\to s \\gamma$\n- Contributions to anomalous magnetic moment of the muon;\n- Contributions to the $\\rho$ parameter due to sfermions.\n\nThe code is written in F90 with an emphasis on easy generalisability.  The\nstructure is set such that complex phases as well as the extension to include\nthe flavour structure can be done in a straight forward way.  The 2-loop\nrenormalization group equations as well as the one-loop finite corrections a la\nBagger, Matchev, Pierce and Zhang are included.  In addition the two-loop\ncorrections to the neutral Higgs boson masses (a la Brignole, Degrassi, Slavich\nand Zwirner) and to the mu-parameter (a la Dedes and Slavich) are included.\nStarting with version 2.2.2 the SUSY Les Houches Accord is supported as well as\nthe SPA conventions (for details see hep-ph/0511344).\n\nStarting with version 3.0 the complete flavour and CP structure of the MSSM as\nwell as bilinear R-parity violation has been implemented.  The input and output\nis done via he SUSY Les Houches Accord 2 .  Moreover, starting with version\n3.1.10 also parts of the proposal to include seesaw models has been implemented,\nsee the corresponding chapter of the Les Houches Proceedings 2011 and with\nversion 3.1.10 also parts of the Flavour Les Houches Accord have been\nimplemented.\n\nIf you use SPheno to write a paper, please cite the SPheno manuals:\n- W. Porod, Comput. Phys. Commun. 153 (2003) 275\n  [arXiv:hep-ph/0301101](http://de.arxiv.org/abs/hep-ph/0301101); and\n- W. Porod and F. Staub, Comput. Phys. Commun. 183 (2012) 2458\n  [arXiv:1104.1573](http://arxiv.org/abs/1104.1573)\n\nMore information is provided in the manuals in the `doc/` folder.\n\nIn case of problems, please send an email to\n[porod@physik.uni-wuerzburg.de](mailto:porod@physik.uni-wuerzburg.de) explaining\nthe problem.  Useful informations is in general contained in the file\nMessages.out; moreover, you should provide me with the input files used so that\nI can try to repeat the run and to decect the source of the problem.\n\n\nInstallation\n------------\n\nSPheno can be download from [Hepforge](https://spheno.hepforge.org/).  After\ndownload and extracting the archive, it can be compiled with:\n\n```sh\nmkdir build\ncd build\ncmake ..\nmake\nmake install\n```\n\nBy default, `make install` installs the library and binary into the same\ndirectory as the source; however, this can be customized by adding\n`-DCMAKE_INSTALL_PREFIX=/foo/bar` to the `cmake` command.\n\n\n### SARAH Models\n\nFor models generated by [SARAH](https://sarah.hepforge.org/) (or by other\nmeans), the SPheno output should be copied into a new directory inside `models/`\nthat has the same name as your main model.  For example, if the model name is\n`SM`, then running `MakeSPheno[]` in Mathematica will create\n\n```\n$SARAH_OUTPUT/SM/EWSB/SPheno\n```\n\nand the contents of that folder should then be copied into `models/SM`.  The\nmodel-specific SPheno executable and library can now be generated by running the\nsame steps as above, but adding `-DMODELS=SM` to the `cmake` command.  Multiple\nmodels can be specified by separating them with commas:\n`-DMODELS=SM,MSSM,THDM-II`.\n\nAs an example, here's the whole procedure for the `SM` model:\n\n```sh\nmkdir models/SM\ncp $SARAH_OUTPUT/$MODEL/EWSB/SPheno/. models/SM\nmkdir build\ncd build\ncmake -DMODELS=SM\nmake\nmake install\n```\n\nNote that if your file system supports it, you can create a symbolic link in the\n`models/` directory linking to `$SARAH_OUTPUT/$MODEL/EWSB/SPheno`.  This has the\nadvantage that if you change the model in SARAH, you don't need to copy them\nover to SPheno again.  The whole procedure is:\n\n```sh\nln -s $SARAH_OUTPUT/$MODEL/EWSB/SPheno models/$MODEL\nmkdir build\ncd build\ncmake -DMODELS=$MODEL\nmake\nmake install\n```\n\n\nRunning\n-------\n\nTo run SPheno, it simply needs to be given an input file:\n```sh\n./bin/SPheno input/LesHouches.in\n```\nThis will generate two files:\n- `SPheno.spc`: contains all information about masses, mixing matrices, decay\n  widths, branching ratios and production cross sections.  The numbers should be\n  identical to the ones given in the file SPheno.spc.mSugra provided you did not\n  change the file `LesHouches.in`;\n- `Messages.out` containing warnings and error messages.\n\nSome example LesHouches files are provided in the `input/` directory.\n\nPackage Content\n---------------\n\nThe package consists of the following files fortran 90 modules:\n\n- `SPheno3.f90`: main program containing also the input/output routines\n- `BranchingRatios.f90`: module for the calculation of the decay widths and\n  branching ratios of SUSY particles and Higgs bosons\n- `Chargino3.f90`: module, containing routines for the calculation of\n  three-body decays of charginos\n- `Control.f90`: module containing routines for warning and error handling\n- `Couplings.f90`: module, containing routines for the calculation of the\n  couplings\n- `DecayFunctions.f90`: module, containing generic routines for the\n  calculation of two-body decays\n- `EplusEminusProduction.f90`: module, containing routines for the calculation\n  of the production cross sections in e+ e- annihilation\n- `Gluino3.f90`: module, containing routines for the calculation of three-body\n  decays of the gluino\n- `InputOutput.f90`: module, containing routines for input and output\n- `LHC_observables.f90`: module, containing routines for LHC observables,\n  e.g. edge variables\n- `LoopCouplings.f90`: module, containing routines for the calculation of the\n  running couplings\n- `LoopFunctions.f90`: module, contining 1-loop and 2-loop functions\n- `LoopMasses.f90`: module, containing the routines for the calculation of the\n  loop masses\n- `LowEnergy.f90`: module, containing routines for the calculation of low\n  energy observables\n- `Mathematics.f90`: module, containing numerical routines\n- `MathematicsQP.f90`: module, containing numerical routines with quadrupole\n  precision\n- `Model_data.f90`: module containing variables concerning SUSY parameters,\n  masses, decay widths and branching ratios\n- `Neutralino3.f90`: module, containing routines for the calculation of\n  three-body decays of neutralinos\n- `NMSSM_tools.f90`: module, containing first modules for the NMSSM\n- `RGEs.f90`: module, containing the RGEs\n- `RPtools.f90`: module, containing additional modules for R-parity violation\n- `Slepton3Body.f90`: module, containing routines for the calculation of\n  three-body decays of sleptons\n- `SPheno3.f90`: The main program for the package.\n- `StandardModel.f90`: module, storing the Standard Model parameters\n- `Stop3BodyDecays.f90`: module, containing routines for the calculation of\n  three-body decays of the lighter stop\n- `SugraRuns.f90`: module, containing the routines for setting the boundary\n  conditions, controlling the running of the parameters as well as calculating\n  the spectrum in case of high scale models\n- `SusyDecays.f90`: module, containing routines for the calculation of all\n  two-body decays of supersymmetric particles and Higgs bosons\n- `SusyMasses.f90`: module, containing the routines for the calculation of\n  supersymmetric masses at tree level\n- `ThreeBodyPhaseSpace.f90`: module, containing routines for the calculation\n  of the phase space integrals for three-body decays of fermions\n- `ThreeBodyPhaseSpaceS.f90`: module, containing routines for the calculation\n  of the phase space integrals for three-body decays of scalars\n- `TwoLoopHiggsMass.f90`: module, containing the 2-loop routines for the\n  calculation of neutral Higgs boson masses and mu\n\nIn addition the following set of input files are provided:\n\n- `LesHouches.in`: mSUGRA input file (same as LesHouches.in.mSugra)\n- `LesHouches.in.mSUGRA_NUHM`: mSUGRA input file but with non-universal Higgs\n  mass parameters\n- `LesHouches.in.AMSB`: AMSB input file\n- `LesHouches.in.GMSB`: GMSB input file\n- `LesHouches.in.mNUHM`: mSUGRA scenario but fixing Higgs sector at the\n  electroweak scale using the pole mass of the pseudoscalar Higgs boson and the\n  mu parameters\n- `LesHouches.in.SeesawI`: example of an mSUGRA scenario combined with seesaw\n  type I\n- `LesHouches.in.SeesawII`: example of an mSUGRA scenario combined with seesaw\n  type II, requires the compilation with option `-DSEESAWIII`\n- `LesHouches.in.SeesawIII`: example of an mSUGRA scenario combined with\n  seesaw type III, requires the compilation with option `-DSEESAWIII`\n\nThe package includes also sample output data corresponding to the\ninput files specified above, denoted by `SPheno.out.xyz` and\n`SPheno.spc.xyz`, where `xyz` stands for any of the models above in the\ndirectory `input/`.\n", 
  "id": 58118076
}