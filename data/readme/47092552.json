{
  "read_at": 1462554553, 
  "description": "Code for 15-859-Z Final Project (Algorithmic Superpower Randomization)", 
  "README.md": "Implementations of Luby and Ghaffari MIS Algorithms\n=====================\n\nOrganization\n--------\n\nThe code is located in the apps/ directory, as Luby.C and Ghaffari.C\nExample inputs are provided in the inputs/ directory. \n\nThis project was built on top of Ligra: https://github.com/jshun/ligra. Please\nlook there for further exposition on framework internals.\n\nLuby's algorithm: http://www.eecs.berkeley.edu/~jshun/simple-analysis.pdf\nGhaffari's algorithm: http://arxiv.org/abs/1506.05093\n\nCompilation\n--------\n\nCompilation is done from within the apps/ directory. \n\nRequirements\n--------\n\nCompilers (one of the following)\n\n* Intel icpc compiler\n* g++ &gt;= 4.8.0 with support for Cilk+, \n* OpenMP\n\nAfter the appropriate environment variables are set, to compile,\nsimply run\n\n```\n$ make -j 16  #compiles with 16 threads (thread count can be changed)\n```\n\nThe following commands cleans the directory:\n```\n$ make clean #removes all executables\n```\n\nRunning code \n-------\nThe applications take the input graph as input as well as an optional\nflag \"-s\" to indicate a symmetric graph.  Symmetric graphs should be\ncalled with the \"-s\" flag for better performance. For example:\n\n```\n$ ./Luby -s ../inputs/rMatGraph_J_5_100\n``` \n\nInput Format \n-----------\nThe input format of unweighted graphs should be in the following format\n \n The adjacency graph format from the Problem Based Benchmark Suite\n (http://www.cs.cmu.edu/~pbbs/benchmarks/graphIO.html). The adjacency\n graph format starts with a sequence of offsets one for each vertex,\n followed by a sequence of directed edges ordered by their source\n vertex. The offset for a vertex i refers to the location of the start\n of a contiguous block of out edges for vertex i in the sequence of\n edges. The block continues until the offset of the next vertex, or\n the end if i is the last vertex. All vertices and offsets are 0 based\n and represented in decimal. The specific format is as follows:\n\nAdjacencyGraph  \n&lt;n>  \n&lt;m>  \n&lt;o0>  \n&lt;o1>  \n...  \n&lt;o(n-1)>  \n&lt;e0>  \n&lt;e1>  \n...  \n&lt;e(m-1)>  \n", 
  "id": 47092552
}