{
  "read_at": 1462545894, 
  "description": "InfiniTAM Modification", 
  "README.md": "#InfiniTAM\n\nThis is the software modified by HaoLi based on \"InfiniTAM\".\n\nInfiniTAM: http://www.robots.ox.ac.uk/~victor/infinitam/\n\n#1. Building the System\n\n###1.1 Requirements\n\nSeveral 3rd party libraries are needed for compiling InfiniTAM. The given version numbers are checked and working, but different versions might be fine as well. Some of the libraries are optional, and skipping them will reduce functionality.\n\n  - cmake (e.g. version 2.8.10.2 or 3.2.3)  \n    REQUIRED for Linux, unless you write your own build system  \n    OPTIONAL for MS Windows, if you use MSVC instead  \n    available at http://www.cmake.org/\n\n  - OpenGL / GLUT (e.g. freeglut 2.8.0 or 3.0.0)  \n    REQUIRED for the visualisation  \n    the library should run without  \n    available at http://freeglut.sourceforge.net/\n\n  - CUDA (e.g. version 6.0 or 7.0)  \n    OPTIONAL but REQUIRED for all GPU accelerated code  \n    at least with cmake it is still possible to compile the CPU part without  \n    available at https://developer.nvidia.com/cuda-downloads\n\n  - OpenNI (e.g. version 2.2.0.33)  \n    OPTIONAL but REQUIRED to get live images from suitable hardware  \n    also make sure you have freenect/OpenNI2-FreenectDriver if you need it  \n    available at http://structure.io/openni\n\n  - libpng (e.g. version 1.6)  \n    OPTIONAL, allows to read PNG input files  \n    available at http://libpng.org\n\n  - libuvc (e.g. github version from 2015-JUL-10)  \n    OPTIONAL, allows to get live images from Intel Realsense cameras  \n    currently this is only in branch mcguire-steve/master  \n    available at https://github.com/mcguire-steve/libuvc\n\n  - doxygen (e.g. version 1.8.2)  \n    OPTIONAL, builds a nice reference manual  \n    available at http://www.doxygen.org/\n\n###1.2 Build Process\n\n  To compile the system, use the standard cmake approach:\n```\n  $ mkdir build\n  $ cd build\n  $ cmake /path/to/InfiniTAM -DOPEN_NI_ROOT=/path/to/OpenNI2/\n  $ make\n```\n  To create a doxygen documentation, just run doxygen:\n```\n  $ doxygen Doxyfile\n```\n  This will create a new directory doxygen-html/ containing all the\ndocumentation.\n\n###1.3 Odds and Ends\n\nPadding the data structure ITMVoxel in ITMLibDefines.h with one extra byte may or may not improve the overall performance on certain GPUs. On a NVidia GTX 680 it appears to do, on a GTX 780 it does not. Have a try yourself if you need the speed.\n\nOn Mac OS X 10.9 there are currently some issues with libc++ vs. libstdc++ in conjunction with CUDA. They eventually manifest in error messages like:\n```\nUndefined symbols for architecture x86_64: \n\"std::ios_base::Init::Init()\", referenced from:\n      __GLOBAL__I_a in libITMLib.a(ITMLib_generated_ITMColorTracker_CUDA.cu.o)\n      __GLOBAL__I_a in libITMLib.a(ITMLib_generated_ITMDepthTracker_CUDA.cu.o)\n     [...]\n```\nIn the current version of InfiniTAM these errors are avoided by specifying ```CMAKE_CXX_FLAGS=-stdlib=libstdc++``` whenever clang is detected as complier. However, future versions of CUDA might not require this anymore or even get confused and/or require ```CUDA_HOST_COMPILER=/usr/bin/clang``` instead.\n\nIf a version of GLUT other than freeglut is used, the InfiniTAM sample application has problems on exit, as it is currently not explicitly cleaning up CUDA memory or closing the OpenNI device. Use freeglut to avoid this if you experience any problems.\n\n\n#2. Sample Programs\n\nThe build process should result in an executable InfiniTAM, which is the main sample program. For a version without visualisation, try InfiniTAM_cli. If compiled with OpenNI support, both should run out-of-the-box without problems for live reconstruction. If you have calibration information for your specific device, you can pass it as the first argument to the program, e.g.:\n```\n  $ ./InfiniTAM Teddy/calib.txt\n```\nIf no OpenNI support has been compiled in, the program can be used for offline processing:\n```\n  $ ./InfiniTAM Teddy/calib.txt Teddy/Frames/%04i.ppm Teddy/Frames/%04i.pgm\n```\nThe arguments are essentially masks for sprintf and the %04i will be replaced by a running number, accordingly.\n\n\n#3. Additional Documentation\n\nApart from the doxygen documentation there should also be a technical report\nshipped along with this package. It is also available from the official project\nwebsite. Further technical information is to be found in:\n```\n@article{InfiniTAM_ISMAR_2015,\nauthor = {{K{\\\"a}hler}, O. and\n\t\t  {Prisacariu}, V.~A. and\n\t\t  {Ren}, C.~Y. and\n\t\t  {Sun}, X. and\n\t\t  {Torr}, P.~H.~S and\n\t\t  {Murray}, D.~W.},\ntitle = \"{Very High Frame Rate Volumetric Integration of Depth Images on Mobile Device}\",\njournal = \"{IEEE Transactions on Visualization and Computer Graphics \n\t   (Proceedings International Symposium on Mixed and Augmented Reality 2015}\",\nvolume = {22},\nnumber = {11},\nyear = 2015\n```\n\nand\n\n```\n@article{2014arXiv1410.0925P,\nauthor = {{Prisacariu}, V.~A. and\n\t\t  {K{\\\"a}hler}, O. and\n\t\t  {Cheng}, M.~M. and\n\t\t  {Ren}, C.~Y. and\n\t\t  {Valentin}, J. and\n\t\t  {Reid}, I.~D. and\n\t\t  {Murray}, D.~W.},\ntitle = \"{A Framework for the Volumetric Integration of Depth Images}\",\njournal = {ArXiv e-prints},\narchivePrefix = \"arXiv\",\neprint = {1410.0925},\nyear = 2014\n}\n```\n\n------\n\n###History:\n\n- 2015-JUL-10: updated dependencies, added reference to ISMAR paper\n- 2014-OCT-06: initial public release\n\n", 
  "id": 41076231
}