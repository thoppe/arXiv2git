{
  "read_at": 1462558701, 
  "description": "The information sieve for discrete variables.", 
  "README.md": "#The Information Sieve\n\nRecent work establishes results that allow the efficient construction of representations that are *maximally informative* \nabout the data. A recent extension allows us to build maximally\ninformative representations in an incremental way. The other advantage of this approach is that it keeps track of\n *remainder information*, so that we can enable lossy and lossless compression. \n  \nThis is described here: \n*The Information Sieve*\nGreg Ver Steeg and Aram Galstyan, ICML 2016, http://arxiv.org/abs/1507.02284\n\nPapers describing previous work:     \n*Discovering Structure in High-Dimensional Data Through Correlation Explanation*    \nGreg Ver Steeg and Aram Galstyan, NIPS 2014, http://arxiv.org/abs/1406.1222        \n      \n*Maximally Informative Hierarchical Representions of High-Dimensional Data*    \nGreg Ver Steeg and Aram Galstyan, AISTATS 2015, http://arxiv.org/abs/1410.7404    \n\n###Dependencies\n\nSieve requires numpy and scipy. If you use OS X, I recommend installing the Scipy Superpack:             \nhttp://fonnesbeck.github.io/ScipySuperpack/\n\n###Install\n\nTo install, download using the link on the right or clone the project by executing this command in your target directory:\n```\ngit clone https://github.com/gregversteeg/sieve.git\n```\nUse *git pull* to get updates. The code is under heavy development. \nPlease feel free to raise issues or request features using the github interface. \n\n## Basic Usage\n\n### Example\n\n```python\nimport corex as ce\n\nX = np.array([[0,0,0,0,0], # A matrix with rows as samples and columns as variables.\n              [0,0,0,1,1],\n              [1,1,1,0,0],\n              [1,1,1,1,1]], dtype=int)\n\ns = sieve.Sieve(max_layers=2)  # Initialize. Can limit number of layers (default is automatic) and pass kwargs to CorEx\ns.fit(X)\n\ns.labels  # Each variable/column is associated with one Y_j\ns.tcs  # TC(X; Y) for each latent factor\ns.layers[0].corex  # Access the CorEx object \n\n```\n\nMore examples are in the paper and in the tests and paper_figures folder. \n\n### CorEx outputs\n\nSee https://github.com/gregversteeg/CorEx for more info about the CorEx module (the one \nincluded here is a simplified version.)", 
  "id": 36261986
}