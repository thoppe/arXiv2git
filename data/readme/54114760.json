{
  "read_at": 1462555765, 
  "description": "", 
  "README.md": "# Caffe\n\n[![Travis Build Status](https://api.travis-ci.org/Microsoft/caffe.svg?branch=master)](https://travis-ci.org/Microsoft/caffe) Travis (Linux build)\n\n[![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/58wvckt0rcqtwnr5/branch/master?svg=true)] (https://ci.appveyor.com/project/pavlejosipovic/caffe-3a30a) AppVeyor (Windows build)\n\n[![License](https://img.shields.io/badge/license-BSD-blue.svg)](LICENSE)\n\nCaffe is a deep learning framework made with expression, speed, and modularity in mind.\nIt is developed by the Berkeley Vision and Learning Center ([BVLC](http://bvlc.eecs.berkeley.edu)) and community contributors.\n\nCheck out the [project site](http://caffe.berkeleyvision.org) for all the details like\n\n- [DIY Deep Learning for Vision with Caffe](https://docs.google.com/presentation/d/1UeKXVgRvvxg9OUdh_UiC5G71UMscNPlvArsWER41PsU/edit#slide=id.p)\n- [Tutorial Documentation](http://caffe.berkeleyvision.org/tutorial/)\n- [BVLC reference models](http://caffe.berkeleyvision.org/model_zoo.html) and the [community model zoo](https://github.com/BVLC/caffe/wiki/Model-Zoo)\n- [Installation instructions](http://caffe.berkeleyvision.org/installation.html)\n\nand step-by-step examples.\n\n## Windows Setup\n**Requirements**: Visual Studio 2013\n\n### Pre-Build Steps\nCopy `.\\windows\\CommonSettings.props.example` to `.\\windows\\CommonSettings.props`\n\nBy defaults Windows build requires `CUDA` and `cuDNN` libraries.\nBoth can be disabled by adjusting build variables in `.\\windows\\CommonSettings.props`.\nPython support is disabled by default, but can be enabled via `.\\windows\\CommonSettings.props` as well.\n3rd party dependencies required by Caffe are automatically resolved via NuGet.\n\n### CUDA\nDownload `CUDA Toolkit 7.5` [from nVidia website](https://developer.nvidia.com/cuda-toolkit).\nIf you don't have CUDA installed, you can experiment with CPU_ONLY build.\nIn `.\\windows\\CommonSettings.props` set `CpuOnlyBuild` to `true` and set `UseCuDNN` to `false`.\n\n### cuDNN\nDownload `cuDNN v3` or `cuDNN v4` [from nVidia website](https://developer.nvidia.com/cudnn).\nUnpack downloaded zip to %CUDA_PATH% (environment variable set by CUDA installer).\nAlternatively, you can unpack zip to any location and set `CuDnnPath` to point to this location in `.\\windows\\CommonSettings.props`.\n`CuDnnPath` defined in `.\\windows\\CommonSettings.props`.\nAlso, you can disable cuDNN by setting `UseCuDNN` to `false` in the property file.\n\n### Python\nTo build Caffe Python wrapper set `PythonSupport` to `true` in `.\\windows\\CommonSettings.props`.\nDownload Miniconda 2.7 64-bit Windows installer [from Miniconda website] (http://conda.pydata.org/miniconda.html).\nInstall for all users and add Python to PATH (through installer).\n\nRun the following commands from elevated command prompt:\n\n```\nconda install --yes numpy scipy matplotlib scikit-image pip\npip install protobuf\n```\n\n#### Remark\nAfter you have built solution with Python support, in order to use it you have to either:  \n* set `PythonPath` environment variable to point to `<caffe_root>\\Build\\x64\\Release\\pycaffe`, or\n* copy folder `<caffe_root>\\Build\\x64\\Release\\pycaffe\\caffe` under `<python_root>\\lib\\site-packages`.\n\n### Matlab\nTo build Caffe Matlab wrapper set `MatlabSupport` to `true` and `MatlabDir` to the root of your Matlab installation in `.\\windows\\CommonSettings.props`.\n\n#### Remark\nAfter you have built solution with Matlab support, in order to use it you have to:\n* add the generated `matcaffe` folder to Matlab search path, and\n* add `<caffe_root>\\Build\\x64\\Release` to your system path.\n\n### Build\nNow, you should be able to build `.\\windows\\Caffe.sln`\n\n## License and Citation\n\nCaffe is released under the [BSD 2-Clause license](https://github.com/BVLC/caffe/blob/master/LICENSE).\nThe BVLC reference models are released for unrestricted use.\n\nPlease cite Caffe in your publications if it helps your research:\n\n    @article{jia2014caffe,\n      Author = {Jia, Yangqing and Shelhamer, Evan and Donahue, Jeff and Karayev, Sergey and Long, Jonathan and Girshick, Ross and Guadarrama, Sergio and Darrell, Trevor},\n      Journal = {arXiv preprint arXiv:1408.5093},\n      Title = {Caffe: Convolutional Architecture for Fast Feature Embedding},\n      Year = {2014}\n    }\n", 
  "id": 54114760
}