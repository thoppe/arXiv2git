{
  "id": 14658235, 
  "read_at": 1462556824, 
  "Readme.txt": "a. Software that needs to be installed (if any), with URL's to download and instructions to install them.\nPython 2.7: http://www.python.org/download/releases/2.7/\nIGraph Python Module: http://igraph.sourceforge.net/\nNumpy: http://www.numpy.org/\nScipy: http://www.scipy.org/\n\nb. Environment variable settings (if any) and OS it should/could run on.\nThe program has been tested on Ubuntu 13.10 (64bit)\n\nc. Instructions on how to run the codes.\n\nSet local configuration in config.py\n\n# Local Configuration\nDATA_URL=\"../data\"\n\n## Virus Propagation configuration\n# Transmission probabilities\nB1 = 0.20\nB2 = 0.01\n\n# Healing probabilities\nD1 = 0.7\nD2 = 0.6\n\n# Number of available vaccines\nK1 = 200\n\nd. Instructions on how to interpret the results.\nAll results are in the ipython notebook\n\ne. Sample input and output files.\ninput files: given by TA\nstatic and alternate network graphs\n\n\nf. Citations to any software you may have used.\n\n\n", 
  "README.md": "Virus Propagation\n=================\n\nVirus Propagation on Static Contact Networks and Alternating Contact Networks\n\nView [IPython Notebook](http://nbviewer.ipython.org/github/sagarjauhari/virus_propagation/blob/master/P4%20-%20Virus%20Propagation%20in%20Networks.ipynb)\n\n- [Epidemic Threshold](https://github.com/sagarjauhari/virus_propagation/blob/master/vpm.py#L26): Theoretical analysis of virus propagation based on effective strength [1]\n- [Simulation](https://github.com/sagarjauhari/virus_propagation/blob/master/vpm.py#L141) of virus propagation across the network\n- Analylsis of different immunization policies\n    - [Policy A](https://github.com/sagarjauhari/virus_propagation/blob/master/vpm.py#L31): Select k random nodes for immunization.\n    - [Policy B](https://github.com/sagarjauhari/virus_propagation/blob/master/vpm.py#L40): Select the k nodes with highest degree for immunization.\n    - [Policy C](https://github.com/sagarjauhari/virus_propagation/blob/master/vpm.py#L49): Select the node with the highest degree for immunization. Remove this node (and its incident edges) from the contact network. Repeat until all vaccines are administered.\n    - [Policy D](https://github.com/sagarjauhari/virus_propagation/blob/master/vpm.py#L49): Find the eigenvector corresponding to the largest eigenvalue of the contact network's adjacency matrix. Find the k largest (absolute) values in the eigenvector. Select the k nodes at the corresponding positions in the eigenvector.\n\n\n\n##References\n[1] Prakash, B. Aditya, et al. \"Got the Flu (or Mumps)? Check the Eigenvalue!.\" arXiv preprint arXiv:1004.0060 (2010).\n", 
  "description": "Virus Propagation on Networks"
}