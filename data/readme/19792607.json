{
  "read_at": 1462546767, 
  "description": "robust multiple sparce canonical correlation analysis", 
  "README.md": "rmscca\n======\n\nrobust multiple sparce canonical correlation analysis \n\nAs described in the manuscript, **Robust Sparse Multiple Canonical Correlation** by J. Coleman, J. Replogle, G. Chandler and J. Hardin.  Available at http://arxiv.org/abs/1410.3355\n\nThe functions needed in the analysis are the following:\n\n\nAll programs\n------------\n\n* scca.CVperm (does the cross validation and permutation -- all the work to get over curse of dimensionality)\n* scca.function (does the thresholding for calculating lambda values.  Very important function for scca.CVperm)\n* sample.sigma12.function (calculates the cross covariance matrix, K)\n\n\n\nOnly simulating (both null and correlated data)\n-----------------------------------------------\n\n* Cov.suped  (makes the correlation matrices for X and Y)\n* sim.setup (simulates the data!)\n* build.B  (generates the relationships between X and Y)\n\n\nInterpreting results\n--------------------\n\n* parse.breast (count things from the breast cancer results)\n* interpret.results.curveonly  (uses the Q-permutation curve to count positives / negatives)\n* results (more parsing output)\n* results.helper (more parsing output)\n* determine.true.vals (for the blocking)\n\n\n\n###  To run  ###\n\n# Null: nullSimScript.R\n\t- generates null data with k=0 (i.e., B==0).  Only uses the first CC to determine if anything is called significant.\n    - type I error is calculated using null_results.R\n\n# Breast cancer data:  dataScript2.R (only chrom2)  dataScript.R (all chrom in parallel)\n\t- Uses the .csv files from the PMA package.  \n\t- the main function doing the work is scca.CVperm\n\t- the output contains the list of coefficients and correlations for both spearman and pearson\n\n# Simulated data: fullSimScript.R\n\t- Simulates data, runs the RMSCCA code, counts things like \"complete groups\", false positives, etc.  Output is as given by interpret_results_curveonly.R.  \n    - Data is parsed and plotted using plot_results.R.\n\n\n\n\n", 
  "id": 19792607
}