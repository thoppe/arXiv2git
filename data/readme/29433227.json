{
  "read_at": 1462551796, 
  "description": "Modified Hierarchy-Exclusion Graph (MHEX Graph)", 
  "README.md": "## Modified Hierarchy-Exclusion Graph (MHEX Graph)  \nCreated by Ronghang Hu (huronghang@hotmail.com) at Department of Electronic Engineering, Tsinghua University.\n\n### Usage Example\n1. build an MHEX Graph from ImageNET synsets (DAG label hierarchy)\n<pre><code>meta_1k = load('+imagenet/meta_1k.mat');\nG_1k = build_mhex_from_synsets(meta_1k.synsets_1k);\n</code></pre>\n2. dump matrix M1 and M2 in [1] to files for inference\n<pre><code>dump_mhex_mats(G_1k, 'mhex_mats_imagenet_1k.mat', true);\n</code></pre>\n3. load M1 and M2 in Caffe.  \n3.1. your mhex layers in Caffe network prototxt should look like\n<pre><code># MHEX Graph\n# MHEX M1\nlayers {\n  name: \"mhex_mat1\"\n  # set bottom to your input scores\n  bottom: \"fc8_1k\"\n  top: \"mhex_mat1\"\n  type: INNER_PRODUCT\n  blobs_lr: 0\n  blobs_lr: 0\n  weight_decay: 0\n  weight_decay: 0\n  # set num_output to |V_L|, number of leaf nodes\n  inner_product_param { num_output: 1000 }\n}\n# MHEX Softmax\nlayers {\n  name: \"mhex_softmax\"\n  bottom: \"mhex_mat1\"\n  top: \"mhex_softmax\"\n  type: SOFTMAX\n}\n# MHEX M2\nlayers {\n  name: \"mhex_mat2\"\n  bottom: \"mhex_softmax\"\n  # output marginal probabilities\n  top: \"mhex_mat2\"\n  type: INNER_PRODUCT\n  blobs_lr: 0\n  blobs_lr: 0\n  weight_decay: 0\n  weight_decay: 0\n  # set num_output to |V|, number of internal + leaf nodes\n  inner_product_param { num_output: 1860 }\n}\n</code></pre>  \n3.2. Use the tool `load_mhex_into_caffe.py` in package `pymhex` to load M1 and M2 from MATLAB file dumped in step 2 into a Caffe network. Set parameter `caffe_model=''` if you want to initialize your network from scratch. Otherwise (if you want to start by fine-tuning from a pre-trained network), set it to the path to your pre-trained caffemodel file.  \n3.3. Train your network in Caffe by loading the network weights generated by `load_mhex_into_caffe.py`.  \n\n### License  \nMHEX Graph is released under the Simplified BSD License (refer to the LICENSE file for details).\n\n### References  \n[1] R. Hu, Modified Hierarchy-Exclusion Graph for Efficient Inference and Training on DAG Label Hierarchies, in Tech Report, 2015  \n[2] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev, J. Long, R. Girshick, S. Guadarrama and T. Darrell, Caffe: Convolutional Architecture for Fast Feature Embedding, in arXiv preprint arXiv:1408.5093, 2014.\n", 
  "id": 29433227
}