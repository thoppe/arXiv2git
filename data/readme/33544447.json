{
  "read_at": 1462511929, 
  "README.org": "PeakSegJoint: supervised joint peak detection ([[http://arxiv.org/abs/1506.01286][arXiv:1506.01286]])\n\n[[https://travis-ci.org/tdhock/PeakSegJoint][https://travis-ci.org/tdhock/PeakSegJoint.png?branch=master]]\n\nThere are two major differences between PeakSegJoint and all of the\nother peak detection algorithms for ChIP-seq data analysis:\n\n- *Supervised machine learning:* PeakSegJoint is trained by providing\n  labels ([[file:inst/exampleData/manually_annotated_region_labels.txt][example]]) that indicate regions with and without peaks. So if\n  you see false positives (a peak called where there is clearly only\n  background noise) or false negatives (no peak called where there\n  should be one) you can add labels to correct PeakSegJoint, and it\n  learns and gets more accurate as more labels are added. In contrast,\n  other peak detection methods are *unsupervised*, meaning that they\n  usually have 10-20 parameters, and no obvious way to train them,\n  yielding arbitrarily inaccurate peaks that can NOT be corrected\n  using labels.\n- *Joint peak detection in any number of samples or cell types* so the\n  model can be easily interpreted to find similarities or differences\n  between samples (PeakSegJoint outputs a binary matrix, samples x\n  peaks). In contrast, it is not easy to find similarities and\n  differences between samples using single-sample peak detection\n  methods (e.g. [[https://github.com/taoliu/MACS][MACS]]), and other multi-sample peak detection methods\n  are limited to one (e.g. [[https://github.com/mahmoudibrahim/jamm][JAMM]]) or two (e.g. [[https://code.google.com/p/pepr-chip-seq/][PePr]]) cell types\n  (assuming all samples of the same cell type are replicates with the\n  same peak pattern).\n\n** Example output\n\n[[http://cbio.ensmp.fr/~thocking/data/PeakSegJoint-H3K4me3-test/figure-train-errors/][Train error data viz, 8 samples of H3K4me3 data]].\n\n[[http://cbio.ensmp.fr/~thocking/data/PeakSegJoint-H3K4me3-test/figure-test-errors/][Test error data viz, 8 samples of H3K4me3 data]].\n\n** R installation instructions and usage examples\n\nThis R package contains [[file:src/PeakSegJoint.c][C code that implements the fast\nheuristic JointZoom algorithm]] described in the [[http://arxiv.org/abs/1506.01286][PeakSegJoint paper]]\n[[[https://github.com/tdhock/PeakSegJoint-paper][source]]]. It also contains [[file:R/fista.R][an R implementation of a\nFast Iterative Shinkage-Thresholding Algorithm (FISTA) for\nL1-regularized interval regression with the squared hinge loss]].\n\n#+BEGIN_SRC R\n  install.packages(\"devtools\")\n  devtools::install_github(\"tdhock/PeakSegJoint\")\n  library(PeakSegJoint)\n  example(PeakSegJointSeveral) # JointZoom approximate segmentation algo.\n  example(PeakSegJointError) # Number of incorrect labels.\n  example(IntervalRegressionProblems) # FISTA convex optimization algo.\n#+END_SRC\n\n** Create a labeled data set\n\nFirst, plot the coverage of several samples of the same experiment\ntype in a genome browser ([[https://www.broadinstitute.org/igv/][IGV]] or [[http://genome.ucsc.edu/cgi-bin/hgGateway][UCSC]]). To compute the coverage you\ncan use [[http://bedtools.readthedocs.org/en/latest/content/tools/genomecov.html][bedtools genomecov -bg]] to get a bedGraph file and then use\n[[http://genome.ucsc.edu/goldenPath/help/bigWig.html][bedGraphToBigWig]] to convert it to a bigwig file that can be viewed on\na genome browser. The coverage data can be either normalized\n(non-integer values) or raw (integer valued count data), with or\nwithout lines for zero coverage. Create a track hub to visualize them\non UCSC ([[https://github.com/tdhock/blueprint/blob/master/portal/H3K27ac_TDH/MantleNeutrophilErythroblast_trackDb.txt][example]]).\n\nThen, visually identify several regions with and without peaks, saving\nthose labels to a file. [[file:inst/exampleData/manually_annotated_region_labels.txt][Example labels file]]: there are two cell types,\nbcell and tcell. Note that for the labels file, you may use only\n[[http://cbio.ensmp.fr/~thocking/chip-seq-chunk-db/][peakStart, peakEnd, noPeaks, and peaks]] labels.\n\nThen, put that label file in the same directory as several\nsub-directories that have names that match the labels file. [[file:inst/exampleData/][Example\ndata set]]: the tcell subdirectory contains two bigwig files, and the\nbcell subdirectory contains two bigwig files. To download the bigwig\nfiles listed in a track hub, save the track hub to the same directory\nas the labels file ([[https://github.com/tdhock/blueprint/tree/master/portal/H3K27ac_TDH][example]]), and then run [[file:exec/downloadTrackDbBigWigs.R][downloadTrackDbBigWigs.R]]:\n\n#+BEGIN_SRC shell\nRscript downloadTrackDbBigWigs.R path/to/trackDb.txt\n#+END_SRC\n\n** Run PeakSegJoint on a cluster with qsub\n\nThen, run [[file:exec/00_AllSteps_qsub.R][00_AllSteps_qsub.R]] which will run the analysis in parallel\non a cluster with qsub:\n\n#+BEGIN_SRC shell\nRscript 00_AllSteps_qsub.R path/to/labels.txt\n#+END_SRC\n\nNote that you should copy 00_AllSteps_qsub.R and change the PBS\nheaders to reflect your cluster configuration.\n\n** Run PeakSegJoint on your laptop\n\nIf you don't have access to a cluster with qsub, you can still run the\n[[file:exec/][steps]] in sequence on one computer. For example [[file:tests/testthat/test-bash-noinput.R][test-bash-noinput.R]]\nuses bash instead of qsub, via\n\n#+BEGIN_SRC shell\nQSUB='echo INTERACTIVE && bash' JOBS=2 Rscript 00_AllSteps_qsub.R path/to/labels.txt\n#+END_SRC\n\n", 
  "description": "Supervised segmentation for jointly finding peaks in several ChIP-seq samples", 
  "id": 33544447
}