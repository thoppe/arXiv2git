{
  "read_at": 1462556805, 
  "description": "Python port of Mikolov's word2phrase.c from the word2vec toolkit", 
  "README.md": "word2phrase\n===========\n\nPython port of Mikolov's word2phrase.c from the word2vec toolkit\n\nGiven a document or documents this program attempts to learn phrases.\nIt does so by progressively joining adjacent pairs of words with an '_' character.\nYou can then run the code multiple times to create multiword phrases.\n\nTake a look at [example.py](example.py) for an example of using this code from Python. The example requires the textblob module (available via pip) to tokenize the input.\n\nThe OCaml directory contains a simple ocaml implementation of the code.\n\nExample using the text8 corpus used in Mikolov's experiments:\n```\n$ time python word2phrase.py --train=text8 --output=text8-phrase-py --min-count=5 --threshold=500.0\n# Now count instances of phrases.  We separate phrases with an underscore\n$ cat text8-phrase-py| tr ' ' '\\n' | grep '_' | python wordcount.py 20\n9913 united_states\n7100 th_century\n6761 external_links\n4942 new_york\n3147 rather_than\n2371 united_kingdom\n2184 prime_minister\n1602 soviet_union\n1507 civil_war\n1464 main_article\n1266 no_longer\n1247 science_fiction\n1100 don_t\n1095 new_zealand\n1069 hong_kong\n1067 http_www\n1019 north_america\n998 los_angeles\n959 roman_catholic\n940 air_force\n```\n\n###More Information\nFor more detail on the (very simple) approach ere check out: https://code.google.com/p/word2vec/\nand Mikolov's paper: http://arxiv.org/abs/1310.4546\n", 
  "id": 14692161
}