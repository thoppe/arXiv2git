{
  "id": 33720178, 
  "read_at": 1462511583, 
  "README.rst": "\npyunicorn\n=========\n\n``pyunicorn`` (**Uni**\\ fied **Co**\\ mplex Network and **R**\\ ecurre\\ **N**\\ ce\nanalysis toolbox) is a fully object-oriented Python package for the advanced\nanalysis and modeling of complex networks. Above the standard measures of\ncomplex network theory such as degree, betweenness and clustering coefficient\nit provides some **uncommon but interesting statistics** like Newman's random\nwalk betweenness. ``pyunicorn`` features novel **node-weighted (node splitting\ninvariant)** network statistics as well as measures designed for analyzing\n**networks of interacting/interdependent networks**.\n\nMoreover, ``pyunicorn`` allows to easily **construct networks from uni- and\nmultivariate time series data** (functional (climate) networks and recurrence\nnetworks). This involves linear and nonlinear measures of time series analysis\nfor constructing functional networks from multivariate data as well as modern\ntechniques of nonlinear analysis of single time series like recurrence\nquantification analysis (RQA) and recurrence network analysis.\n\nCode\n----\n`Stable releases <https://github.com/pik-copan/pyunicorn/releases>`_,\n`Development version <https://github.com/pik-copan/pyunicorn>`_\n\n`Changelog <docs/source/changelog.rst>`_, `Contributions <CONTRIBUTIONS.rst>`_\n\nDocumentation\n-------------\nFor extensive HTML documentation, jump right to the `pyunicorn homepage\n<http://www.pik-potsdam.de/~donges/pyunicorn/>`_. Recent `PDF versions\n<http://www.pik-potsdam.de/~donges/pyunicorn/docs/>`_ are also available.\n\nOn a local development version, HTML and PDF documentation can be generated\nusing ``Sphinx``::\n\n    $> pip install --user -e .\n    $> cd docs; make clean html latexpdf\n\nDependencies\n------------\n``pyunicorn`` relies on the following open source or freely available packages\nwhich have to be installed on your machine.\n\nRequired:\n  - `Numpy <http://numpy.scipy.org/>`_ 1.8+\n  - `Scipy <http://www.scipy.org/>`_ 0.14+\n  - `Weave <https://github.com/scipy/weave>`_ 0.15+\n  - `igraph, python-igraph <http://igraph.sourceforge.net/>`_ 0.7+\n\nOptional *(used only in certain classes and methods)*:\n  - `PyNGL <http://www.pyngl.ucar.edu/Download/>`_ (for class NetCDFDictionary)\n  - `netcdf4-python <http://code.google.com/p/netcdf4-python/>`_ (for classes\n    Data and NetCDFDictionary)\n  - `Matplotlib <http://matplotlib.sourceforge.net>`_ 1.3+\n  - `Matplotlib Basemap Toolkit <http://matplotlib.org/basemap/>`_ (for drawing\n    maps)\n  - `mpi4py <http://code.google.com/p/mpi4py/>`_ (for parallelizing costly\n    computations)\n  - `Sphinx <http://sphinx-doc.org/>`_ (for generating documentation)\n  - `Cython <http://cython.org/>`_ 0.21+ (for compiling code during\n    development)\n\nInstalling\n----------\n**Stable release**\n    Via the Python Package Index::\n\n        $> pip install pyunicorn\n\n**Development version**\n    For a simple system-wide installation::\n\n        $> pip install .\n\n    Depending on your system, you may need root privileges. On UNIX-based\n    operating systems (Linux, Mac OS X etc.) this is achieved with ``sudo``.\n\n    For development, especially if you want to test ``pyunicorn`` from within\n    the source directory::\n\n        $> pip install --user -e .\n\nTest suite\n----------\nBefore committing changes to the code base, please make sure that all tests\npass. The test suite is managed by `tox <https://testrun.org/tox/>`_ and\nconfigured to use system-wide packages when available. Thus to avoid frequent\nwaiting, we recommend you to install the current versions of the following\npackages::\n\n    $> pip install tox nose networkx Sphinx\n    $> pip install pylint pytest pytest-xdist pytest-flakes pytest-pep8\n\nThe test suite can be run from anywhere in the project tree by issuing::\n\n    $> tox\n\nTo expose the defined test environments and target them independently::\n\n    $> tox -l\n    $> tox -e py27-units,py27-pylint\n\nTo test single files::\n\n    $> tests/test_doctests.py core.network      # doctests\n    $> nosetests -vs tests/core/TestNetwork.py  # unit tests\n    $> pylint pyunicorn/core/network.py         # code analysis\n    $> py.test pyunicorn/core/network.py        # style\n\nMailing list\n------------\nNot implemented yet.\n\nReference\n---------\nPlease acknowledge and cite the use of this software and its authors when\nresults are used in publications or published elsewhere. You can use the\nfollowing reference:\n\n    J.F. Donges, J. Heitzig, B. Beronov, M. Wiedermann, J. Runge, Q.-Y. Feng, L. Tupikina, V. Stolbova, R.V. Donner, N. Marwan, H.A. Dijkstra, and J. Kurths,\n    Unified functional network and nonlinear time series analysis for complex systems science: The pyunicorn package,\n    `Chaos 25, 113101 (2015), doi:10.1063/1.4934554,\n    <http://dx.doi.org/10.1063/1.4934554>`_\n    `Preprint: arxiv.org:1507.01571 [physics.data-an].\n    <http://arxiv.org/abs/1507.01571>`_\n\nLicense\n-------\n``pyunicorn`` is `BSD-licensed <LICENSE.txt>`_ (3 clause).\n", 
  "description": "Unified Complex Network and Recurrence Analysis Toolbox"
}