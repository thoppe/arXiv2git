{
  "read_at": 1462555828, 
  "description": "", 
  "README.md": "# Hash-based Similarity Detection \n(project @ DoingDataScience WU course)\n\n## Introduction\nMotivation\nGoal: find similar columns/tables\n\n## Related Work\n\nHashing - an approach transforming the data item to a low-dimensional representation, or equivalently a short code consisting of a sequence of bits [2]. \"Most hash functions are used to separate and obscure data, so that similar data hashes to very different keys.\" [3]\n\nLocality-sensitive hashing (LSH) - a simple and powerful technique, which places similar documents with identical hash into the same bucket, performing probabilistic dimension reduction of high-dimensional data and solving the approximate or exact Near Neighbor Search. [Indyk and Motwani, 1998] [4,8]\nNilsimsa [9] - an LSH algorithm for text similarity comparisons, which is traditionally employed for spam detection in emails. Unlike hashes, a small change in the message results in a small change in the nilsimsa code.\n\nSimHash [3,5-7] - an easy and very fast algorithm used to compare two datasets (e.g. texts).\n\nDistance measures:\nHamming distance measures the proportion of positions in the hash at which the corresponding symbols are different.\n\n## Method\nHash-based Similarity Detection Algorithm:\nRead csv tables from the dataset\nFind similar columns:\nCompute hash for each column (hash features) ?\nCompute hash similarities (compare columns)\nFind similar tables:\nCompute hash for each table (hash features, e.g. columns or their hashes)\nCompute table similarities (compare tables)\n\n## References\n[1] Das Sarma, Anish, et al. \"Finding related tables.\" Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data. ACM, 2012.\nhttp://i.stanford.edu/~anishds/publications/sigmod12/modi255i-dassarma.pdf\n\n[2] Hashing for Similarity Search: A Survey.\nhttp://arxiv.org/pdf/1408.2927.pdf\n\n[3] SimHash: Hash-based Similarity Detection.\nhttp://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.473.7179&rep=rep1&type=pdf\n\n[4] Similarity search in high dimensions via hashing.\nhttps://www.cs.princeton.edu/courses/archive/spring13/cos598C/Gionis.pdf\n\n[5] http://matpalm.com/resemblance/simhash/\n\n[6] Similarity Estimation Techniques from Rounding Algorithms.\nhttp://www.cs.princeton.edu/courses/archive/spring04/cos598B/bib/CharikarEstim.pdf\n\n[7] A Python Implementation of Simhash Algorithm.\nhttps://github.com/leonsim/simhash\n\n[8] LSH Algorithm and Implementation (E2LSH).\nhttp://www.mit.edu/~andoni/LSH/\n\n[9] https://github.com/diffeo/py-nilsimsa/\n", 
  "id": 53198716
}