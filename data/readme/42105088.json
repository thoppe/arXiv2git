{
  "read_at": 1462548754, 
  "description": "Messing around hamming distance.", 
  "README.md": "# Dancing-around-hamming-distance\n\nCollection of various code snippets using hamming distance for image retrival.\n\n1. http://www.cs.toronto.edu/~norouzi/research/mlh/ Minimal Loss Hashing for Compact Binary Codes.\n2. http://www.cs.toronto.edu/~norouzi/research/mih/ Fast Exact Search in Hamming Space with Multi-Index Hashing.\n3. https://github.com/kevinlin311tw/caffe-cvprw15 Deep Learning of Binary Hash Codes.\n4. http://www.cs.huji.ac.il/~yweiss/SpectralHashing/ Spectral Hashing.\n\nDatases:\n\n1. http://groups.csail.mit.edu/vision/TinyImages/\n2. http://www.cs.toronto.edu/~kriz/cifar.html\n3. http://www.vision.caltech.edu/Image_Datasets/Caltech101/\n4. http://www.robots.ox.ac.uk/~vgg/data/oxbuildings/\n\n\n~~~\ntags: hamming distance, hamming embedding, binary codes, locality sensitive hashing, semantic hashing, min-hash.\n\nEfficient hamming distance computation:\nHammingDistance(x,y) = HammingWeight(x^y)\nhttps://en.wikipedia.org/wiki/Hamming_weight#Efficient_implementation\nhttp://notabs.org/blcutil/\nhttp://stackoverflow.com/questions/12380478/bits-counting-algorithm-brian-kernighan-in-an-integer-time-complexity\nhttps://web.archive.org/web/20100604050922/http://infolab.stanford.edu/~manku/bitcount/bitcount.c\nhttp://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetKernighan\nhttps://github.com/mariusmuja/flann/search?utf8=%E2%9C%93&q=hamming\nhttps://github.com/mariusmuja/flann/blob/6f1d8f808f2605488c2882ce8fcfa3d5569576bc/doc/references.bib\nhttp://cage.ugent.be/~klein/papers/popc-article.pdf\n\nhttps://github.com/mrgloom/metric-tree-demo\n\nTODO:\n\n1. Semantic hashing.\n    https://github.com/gynnash/AutoEncoder\n    http://www.cs.toronto.edu/~hinton/MatlabForSciencePaper.html \n    http://www.cs.toronto.edu/~fritz/absps/sh.pdf\n    http://www.cs.toronto.edu/~amnih/cifar/talks/salakhut_talk.pdf\n2. Locality sensitive hashing with hamming distance.\n    http://stackoverflow.com/questions/12952729/how-to-understand-locality-sensitive-hashing\n\nDeep learning:\nhttps://github.com/BVLC/caffe/wiki/Model-Zoo#deep-learning-of-binary-hash-codes-for-fast-image-retrieval\nhttps://github.com/kevinlin311tw/Caffe-DeepBinaryCode\nhttps://github.com/kevinlin311tw/caffe-cvprw15\nhttps://www.cs.toronto.edu/~hinton/csc2535/notes/lec8b.pdf\nhttp://arxiv.org/pdf/1404.1777v2.pdf\nhttps://github.com/kevinlin311tw/Caffe-DeepBinaryCode\n\nBinary features (BRIEF, ORB, BRISK):\nhttp://www.cs.ubc.ca/~lowe/papers/12mujaCRV.pdf \nhttp://infoscience.epfl.ch/record/126376/files/OzuysalFL07.pdf\n\nhttp://frahm.web.unc.edu/files/2014/01/Fast-Organization-of-Large-Photo-Collections.pdf\nhttp://www.cv-foundation.org/openaccess/content_cvpr_2015/papers/Gong_Web_Scale_Photo_2015_CVPR_paper.pdf\n\nPresentations:\ntoo complicated math, some relations to spectral hashing.\nhttps://www.robots.ox.ac.uk/~vgg/rg/slides/binarycodes.pdf\nhttps://www.robots.ox.ac.uk/~vgg/rg/\n\nCosine distance:\nApproaches different from hamming distance - \"Randomly project points to low dimensional bit signatures such that cosine distance is approximately preserved\". \n\nPerceptive hash:\nhttps://github.com/JohannesBuchner/imagehash\n~~~\n", 
  "id": 42105088
}