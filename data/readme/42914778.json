{
  "read_at": 1462548939, 
  "description": "Coq formalization accompanying the paper: A Verified Information-Flow Architecture", 
  "README.md": "# verified-ifc\nCoq formalization accompanying the paper: A Verified Information-Flow Architecture\n\nArthur Azevedo de Amorim, Nathan Collins, Andre DeHon, Delphine Demange, Catalin Hritcu, David Pichardie, Benjamin C. Pierce, Randy Pollack, and Andrew Tolmach. A Verified Information-Flow Architecture. In 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL), pages 165-178. ACM, January 2014.\nhttp://www.crash-safe.org/node/29\n- Extended version submitted to Special Issue on Verified Information Flow Security, September 2015.\nhttp://arxiv.org/abs/1509.06503\n\nThere are two subdirectories:\n\n`/basic_machines`         corresponds to the basic model discussed in sections 3-10 of the paper.\n`/extended_machines`      corresponds to the machine extensions discussed in section 11\n\nNearly everything developed in `/basic_machines` reappears in `/extended_machines`,\nbut sometimes in modified form.\n\nWe recommend that you start by exploring `/basic_machines`. Consult the `README`\nand the `Main.v` file to get a top-level view of the results.\n\n`/extended_machines` contain a longer `README` that is intended to help\nguide you to the important differences in this developments.\n\nThe code is known to work with Coq 8.4.\n", 
  "id": 42914778
}