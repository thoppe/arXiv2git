{
  "read_at": 1462553973, 
  "description": "My own small agda implementations and experiments", 
  "README.md": "Misc-Agda-Files\n===============\n\nThese are an assortment of functions and programs made by Anthony Hart in the programming language Agda\n(http://wiki.portal.chalmers.se/agda/pmwiki.php).\n\nCurrently, the directory has the following files;\n\nsorting.agda\n- Includes a general definition of Sorted Lists over Total Orders, and an implementation of insertion sort.\n- Includes three different implementations of Merge Sort, one of them passing the termination checker.\n- Includes an implementation of the discrete log base 2.\n- Includes a proof that the natural numbers form a total order with <=, for testing the sorting functions.\n\nBLC.agda\n- Includes a very nice implementation of the (untyped) Lambda Calculus\n- Includes an implementation of the SK Calculus (untested, probably wrong)\n- Includes functions for translating back and forth between SK and Lambda calculi (untested)\n- Includes an implementation of the Jot language (http://semarch.linguistics.fas.nyu.edu/barker/Iota/#Goedel) (untested)\n- Includes a definition and a (messy) implementation of deBrujin Lambda Calculus\n- Includes functions for translating back and forth between deBrujin terms and lambda terms\n- Includes an implementation of the Binary Lambda Calculus, the reason the file is called BLC\n  (http://homepages.cwi.nl/~tromp/cl/LC.pdf)\n\nFixedPoint.agda\n- File created to formalize some of the results in http://arxiv.org/pdf/math/0305282v1.pdf\n- Contains a proof of Lawvere's fixed point theorem over types and functions (I hope to extend it to the full theorem at some point.)\n- Contains a proof of Cantor's Theorem as an instance.\n- Contains disproof of Church's thesis\n\nMuRecursion.agda\n- Contains an implementation of the m-recursive functions\n", 
  "id": 27180969
}