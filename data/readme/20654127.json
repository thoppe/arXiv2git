{
  "read_at": 1462547232, 
  "description": "Active learning of GP hyperparameters following Garnett, et al., \"Active Learning of Linear Embeddings for Gaussian Processes,\" (UAI 2014).", 
  "README.md": "Active GP Hyperparameter Learning\n=================================\n\nThis is a MATLAB implementation of the method for actively learning GP\nhyperparameters described in\n> Garnett, R., Osborne, M., and Hennig, P. Active Learning of Linear\n> Embeddings for Gaussian Processes. (2014). 30th Conference on\n> Uncertainty in Artificial Intelligence (UAI 2014).\n\nGiven a GP model on a function *f*:\n\n![p(f | \\theta) = GP(f; mu(x; \\theta), K(x, x'; \\theta))][1]\n\nthis routine sequentially chooses a sequence of locations *X* =\n{*x*<sub>*i*</sub>} to make observations with the goal of learning the\nGP hyperparameters *&theta;* as quickly as possible. This is done by\nmaintaining a probabilistic belief *p*(*&theta;* | *D*) and selecting\neach observation location by maximizing the Bayesian active learning\nby disagreement (BALD) criterion described in\n\n> N. Houlsby, F. Huszar, Z. Ghahramani, and M. Lengyel. Bayesian\n> Active Learning for Classification and Preference\n> Learning. (2011). arXiv preprint arXiv:1112.5745 [stat.ML].\n\nThis implementation uses the approximation to BALD described in the\nGarnett, et al. paper above, which relies on the \"marginal GP\" (MGP)\nmethod for approximate GP hyperparameter marginalization.\n\nThe main entrypoint is `learn_gp_hyperparameters.m`. See `demo/demo.m`\nfor a simple example usage.\n\nDependencies\n------------\n\nThis code is written to be interoperable with the GPML MATLAB\ntoolbox, available here:\n\n  http://www.gaussianprocess.org/gpml/code/matlab/doc/\n\nThe GPML toolbox must be in your MATLAB path for this function to\nwork. This function also depends on the gpml_extensions repository,\navailable here:\n\n  https://github.com/rmgarnett/gpml_extensions/\n\nas well as the marginal GP (MGP) implementation available here:\n\n  https://github.com/rmgarnett/mgp/\n\nBoth must be in your MATLAB path. Finally, the optimization of\nthe GP log posterior requires Mark Schmidt's minFunc function:\n\n  http://www.di.ens.fr/~mschmidt/Software/minFunc.html\n\n[1]: http://latex.codecogs.com/svg.latex?p(f%20%5Cmid%20%5Ctheta)%20%3D%20%5Cmathcal%7BGP%7D%5Cbigl(f%3B%20%5Cmu(x%3B%20%5Ctheta)%2C%20K(x%2C%20x%27%3B%20%5Ctheta)%5Cbigr)\n", 
  "id": 20654127
}