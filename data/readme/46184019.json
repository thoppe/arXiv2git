{
  "read_at": 1462554802, 
  "description": "sparse principal component analysis as a nonlinear eigenproblem", 
  "README.md": "# Sparse PCA via Nonlinear IPM\r\n\r\n\r\nThis archive contains a Matlab implementation of Sparse PCA\r\nusing the *inverse power method for nonlinear eigenproblems (NIPM)*,\r\nintroduced in the paper [1]. To compute multiple principal components, \r\nthe deflation scheme described in [2] is used.\r\n\r\n\r\n\r\n\r\n\r\n## Usage\r\n\r\n#### Computing a set of sparse loading vectors:\r\n\r\n    F = sparsePCA(X, card, num_comp, num_runs, verbosity);\r\n\r\n#### Input variables\r\n\r\n    X           data matrix (num x dim)\r\n    card        desired number of non-sparse components (cardinality) of output    \r\n                for each principal component; card can be either a vector of size \r\n                num_comp x 1, or a scalar (in this case all components will have \r\n                the same cardinality)\r\n    num_comp    number of principal components\r\n    num_runs    number of additional runs of inverse power method with random \r\n                initialization (default: 0)\r\n    verbosity   determines how much information is displayed (0-2, default: 1)\r\n\r\n#### Output variables\r\n\r\n    F           the sparse loading vectors\r\n    adj_var     the contributions to the adjusted variance of each component\r\n    cum_var     the cumulative adjusted variance\r\n\r\n\r\n#### Computing all loading vectors with cardinalities in a given range:\r\n\r\n    [cards, vars, F] = computeTradeOffCurve(X, card_min, card_max, num_runs, verbosity);\r\n\r\n#### Input variables\r\n\r\n    X           data matrix (num x dim)\r\n    card_min    desired number of non-sparse components of output (cardinality)\r\n    card_max    if specified, all vectors with cardinality values in intervall \r\n                [card_min,card_max] are computed (default: card_max=card_min)\r\n    num_runs    number of runs of IPM with random initialization (default: 0)\r\n    verbosity   determines frequency of console output (values 0-2, default: 1)\r\n\r\n#### Output variables\r\n\r\n    cards       the cardinalities (number of nonzeros) of the returned vectors \r\n    vars        the corresponding variances\r\n    F           the sparse loading vectors\r\n\r\n\r\n## References\r\n\r\n[1] M. Hein and T. Buhler. \r\n*An Inverse Power Method for Nonlinear Eigenproblems with Applications \r\nin 1-Spectral Clustering and Sparse PCA*. \r\nAdvances in Neural Information Processing Systems 23 (NIPS 2010).\r\nExtended version available at http://arxiv.org/abs/1012.0774.\r\n\r\n[2] T. Buhler. \r\n*A flexible framework for solving constrained ratio problems\r\nin machine learning*. Ph.D. Thesis, Saarland University, 2015. \r\nAvailable at http://scidok.sulb.uni-saarland.de/volltexte/2015/6159/.\t\r\n\r\n\t\r\n## License \r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nIf you use this code for your publication, please include a reference \r\nto the paper \"An inverse power method for nonlinear eigenproblems with \r\napplications in 1-spectral clustering and sparse PCA\".\r\n\r\n \r\n## Contact\r\n\r\nCopyright 2010-2015 Thomas Buhler and Matthias Hein (tb/hein@cs.uni-saarland.de).\r\nMachine Learning Group, Saarland University, Germany (http://www.ml.uni-saarland.de)\r\n", 
  "id": 46184019
}