{
  "read_at": 1462545905, 
  "description": "Evolving Cascade Neural Network (ECNN) Matlab script", 
  "README.md": "# ECNN\nEvolving Cascade Neural Network (ECNN) Matlab script\n with Ripley's benchmark\n\nWritten by V. Schetinin \"A Learning Algorithm for Evolving Cascade\nNeural Networks\". Neural Proc Letters, 17, 2003, available on http://arxiv.org/abs/cs/0504055\n\nAbstract. A new learning algorithm for Evolving Cascade Neural Networks \n(ECNNs) is described. An ECNN starts to learn with one input node and then\nadding new inputs as well as new hidden neurons evolves it. The trained \nECNN has a nearly minimal number of input and hidden neurons as well as\nconnections. The algorithm was successfully applied to classify artifacts\nand normal segments in clinical electroencephalograms (EEGs). The EEG \nsegments were visually labeled by EEG-viewer. The trained ECNN has \ncorrectly classified 96.69% of the testing segments. It is slightly \nbetter than a standard fully connected neural network. \n\nParameters:\n  XA1 is the training data \n  XB1 is the validtaion data\n  YA1 is the training target vector\n  YB1 is the validation target vector\n  delta1 = 0.001 is the error gradient goal\n  kappa1 = 1.0 is the learning rate\n  kmax1 = 100 maximal number of training epochs\n  f_show_train = 1 to show the ECNN error on the DB\n   \n RUN:\n 1. [XA,XB,XC,YA,YB,YC]=ecnn_data(0); \n     to download the data with n dummy var\n 2. Net1=ecnn_train(XA,XB,YA,YB,0.001,1.,100,1);\n     Here Net1 is the trained ECNN \n 3. Z=ecnn_test(Net1,XC,YC); \n     to test the trained ECNN\n\n Calls functions:\n   set_global_vars\n   unit_train\n   fit_unit_weights\n   eccn_add_unit   \n", 
  "id": 41213218
}