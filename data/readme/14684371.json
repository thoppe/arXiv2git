{
  "read_at": 1462556888, 
  "description": "", 
  "README.md": "OVERVIEW\n========\n\nThis folder contains Python code used to study the dynamics of RNA polymerase II (RNA Pol-II). \nThe associated manuscript is \"A Probabilistic Model of Transcription Dynamics applied to Estrogen Signalling in Breast Cancer Cells,\" \nby Ciira wa Maina et al. and available as an arxiv preprint here [arXiv:1303.4926](http://arxiv.org/abs/1303.4926). \n\n\nREQUIREMENTS\n============\nThe programs require Python 2.7 or later and the following python libraries\n\n1. numpy >= 1.6.1\n2. scipy >= 0.9.0\n3. pylab\n\n\nINSTALLATION\n============\nDownload the following files in this folder and place them in a folder of your choice.\n\n1. PyPolII.py\n2. conv_gp_funcs.py\n3. Example data folder Data/\n\n\nTo run the program open an Ipython shell and type\n\n\trun PyPolII.py [-h] -i INPUT_FILE -l GENE_LEN [-n NUM_TRY] [-t TRANS]\n                  [-o OUT_DIR] [-s RND_SEED]\n\nor type\n\n\tpython PyPolII.py [-h] -i INPUT_FILE -l GENE_LEN [-n NUM_TRY] [-t TRANS]\n                  [-o OUT_DIR] [-s RND_SEED]\n\ndirectly in the command line.   \n\nThe input arguments are\n\n\t-h, --help            show this help message and exit\n\t-i INPUT_FILE, --input_file INPUT_FILE\n\t\t        Properly Formatted Input file. It is assumed that the\n\t\t        file name is in the form <gene name>.txt\n\t-l GENE_LEN, --gene_length GENE_LEN\n\t\t        Gene length\n\t-n NUM_TRY, --num_try NUM_TRY\n\t\t        Number of random initializations when performing\n\t\t        maximum likelihood optimization\n\t-t TRANS, --trans TRANS\n\t\t        Parameter transformation flag. When true, the\n\t\t        parameters are transformed using a logit function\n\t\t        before optimization.\n\t-o OUT_DIR, --out_dir OUT_DIR\n\t\t        The complete path of the output directory to store\n\t\t        program output. The outputs are a plot of the inferred\n\t\t        pol-II segment profiles, <gene name>.pdf, a text file\n\t\t        with the delays of each segment <gene name_delay>.txt\n\t\t        and a text file with the gene transcription speed in\n\t\t        kilobases per second <gene name_speed>.txt. If not\n\t\t        supplied the outputs are stored in the current\n\t\t        directory.\n\t-s RND_SEED, --rnd_seed RND_SEED\n\t\t        Random Seed\n\n\n\n\n\n\nEXAMPLE\n=======\n\n\nExecuting \n\n\trun PyPolII.py -i Data/ACTN1.txt -l 105244 -s 123\n\nwill run the model using data of pol-II occupancy for the ACTN1 gene for 5 segments \nand compute the delays of the segments. A figure of the inferred profiles, a file \nwith the delays and a file with the computed transcription speed are generated. Examples are contained in the Results folder. The transcription speed is computed from the segment delays using a linear regression through the origin as described in the paper. In this case the computed speed is *2.8 kilobases per second*. This result is also displayed on the command line as \n\t\n\tACTN1 2.8 kilobases per second\n\n\n\nInput Format\n------------\n\nThe input file contains the average RNA Pol-II occupancy in reads per million (RPM) over the different gene segments.\nFor each gene segment, the time series of pol-II occupancy is stored as a column vector. The example file *ACTN1.txt* \ncontains the data \n\t\n\tTime\tSegment 1\tSegment 2\tSegment 3\tSegment 4\tSegment 5\n\n\t 0\t3.07168506\t1.44841574\t1.30610211\t1.28456781\t1.17783258\n\t 5\t4.50312281\t2.27195979\t1.36380291      1.29378391    \t1.24780128\n\t ...\n\t 320    3.71889119\t1.77794631\t1.65309992\t1.63749413\t1.76234051\n\nWhere the first column contains the time at which the measurements were taken and the remaining 5 columns are the time\nseries of pol-II occupancy for the 5 gene segments.\n\n\nParallel Execution\n==================\n\nTo allow for the processing of a large number of genes, the program *ParPyPolII.py* allows parallel execution.\nThis program requires the *IPython.parallel* module which is dependant on \n\n1. pyzmq\n2. tornado\n\nThese can be installed by typing\n\n\tsudo pip install pyzmq tornado\n\nTo run the code in parallel, we must first start a controller and a number of engines by typing for example\n\n\t$ ipcluster start -n 4\n\nwhich starts 4 engines.\n \nWe can then run our program in the *Ipython* shell by typing\n\n\trun ParPyPolII.py [-h] -i GENE_LIST -d DATA_DIR -o OUT_DIR [-n NUM_TRY]\n                     [-t TRANS] [-s RND_SEED]\n\nThe input arguments are \n\n\t-h, --help            show this help message and exit\n\t-i GENE_LIST, --gene_list GENE_LIST\n\t\t        Properly formatted input file containing gene names\n\t\t        and gene lengths. For each gene, the corresponding\n\t\t        data should be in the input data directory with the\n\t\t        name <gene name>.txt\n\t-d DATA_DIR, --data_dir DATA_DIR\n\t\t        The complete path of the directory containing properly\n\t\t        formatted data.\n\t-o OUT_DIR, --out_dir OUT_DIR\n\t\t        The complete path of the output directory to store\n\t\t        program output. The outputs are a plot of the inferred\n\t\t        pol-II segment profiles, <gene name>.pdf, a text file\n\t\t        with the delays of each segment <gene name_delay>.txt\n\t\t        and a text file with the gene transcription speed in\n\t\t        kilobases per second <gene name_speed>.txt.\n\t-n NUM_TRY, --num_try NUM_TRY\n\t\t        Number of random initializations when performing\n\t\t        maximum likelihood optimization\n\t-t TRANS, --trans TRANS\n\t\t        Parameter transformation flag. When true, the\n\t\t        parameters are transformed using a logit function\n\t\t        before optimization.\n\t-s RND_SEED, --rnd_seed RND_SEED\n\t\t        Random Seed\n\n\nThe file *GENE_LIST* contains a list of genes to be processed as well as their lengths in base pairs separated by a tab (see *gene_list.txt*). For example\n\n\tTPM1\t22196\n\tWDR1\t42611\n\nFor each of the genes in the list, the input data in the format shown above is located in the data directory *DATA_DIR*.\n\nExecuting \n\t\n\trun ParPyPolII.py -i gene_list.txt  -d /home/.../Data/ -o /home/.../Results/  -s 123\n\nwill run the model for the genes in *gene_list.txt* on the parallel engines. We assume that the file containing definitions for the convolved Gaussian processes (*conv_gp_funcs.py*) is located in the current working directory. The results are stored in the output directory.\n\n\t\n\t \nCitation\n========\n\nIf you use this program please cite\n\nC. wa Maina, F. Matarese, K. Grote, H. G. Stunnenberg, G. Reid, A. Honkela, N. D. Lawrence, and M. Rattray,\n\"A Probabilistic Model of Transcription Dynamics applied to Estrogen Signalling in Breast Cancer Cells,\"\n[arXiv:1303.4926](http://arxiv.org/abs/1303.4926). \n\n\n\n\n", 
  "id": 14684371
}