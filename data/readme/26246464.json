{
  "README": "NAME\n    Catmandu::Plack::unAPI - unAPI webservice based on Catmandu\n\nDESCRIPTION\n    Catmandu::Plack::unAPI implements an unAPI web service as PSGI\n    application.\n\nSYNOPSIS\n    Set up an \"app.psgi\" for instance to get data via <http://arxiv.org>\n    identifier using Catmandu::Importer::ArXiv:\n\n        use Catmandu::Plack::unAPI;\n        use Catmandu::Importer::ArXiv;\n\n        Catmandu::Plack::unAPI->new(\n            query => sub {\n                my ($id) = @_;\n                return if $id !~ qr{^(arXiv:)?[0-9abc/.]+}i;\n                Catmandu::Importer::ArXiv->new( id => $id )->first;\n            }\n        )->to_app;\n\n    Retrieving items from a Catmandu::Store is even simpler:\n\n        Catmandu::Plack::unAPI->new( store => $store )->to_app;\n\n    Start the application, e.g. with \"plackup app.psgi\" and query via unAPI:\n\n        curl 'localhost:5000'\n        curl 'localhost:5000?id=1204.0492&format=json'\n\nCONFIGURATION\n    query\n        Code reference with a query method to get an item (as reference) by\n        a given identifier (HTTP request parameter \"id\"). If the method\n        returns undef, the application returns HTTP 404. If the methods\n        returns a scalar, it is used as error message for HTTP response 400\n        (Bad Request).\n\n    store\n        Instance of Catmandu::Store or store name and options as array\n        reference to query items from.\n\n    formats\n        Hash reference with format names mapped to MIME type,\n        Catmandu::Exporter configuration and (optional) documentation for\n        each format. By default only JSON and YAML are configured as\n        following:\n\n            json => {\n                type     => 'application/json',\n                exporter => [ 'JSON', pretty => 1 ],\n                docs     => 'http://json.org/'\n            },\n            yaml => {\n                type     => 'text/yaml',\n                exporter => [ 'YAML' ],\n                docs     => 'http://en.wikipedia.org/wiki/YAML'\n            }\n\nLIMITATIONS\n    An exporter is instanciated for each request, so performance may be low\n    depending on configuration.\n\n    The error response is always \"text/plain\", this may be configurable in a\n    future release.\n\n    Timeouts are not implemented yet.\n\nAUTHOR\n    Jakob Voss <jakob.voss@gbv.de>\n\nCOPYRIGHT AND LICENSE\n    Copyright 2014- Jakob Voss\n\n    This library is free software; you can redistribute it and/or modify it\n    under the same terms as Perl itself.\n\nSEE ALSO\n    <http://unapi.info/>\n    Catmandu::Plack::REST\n\n", 
  "read_at": 1462553868, 
  "description": "Read-only release history for Catmandu-Plack-unAPI", 
  "id": 26246464
}