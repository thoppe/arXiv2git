{
  "id": 29437987, 
  "read_at": 1462551851, 
  "README.rst": "Recognition of coastal precipitation\n++++++++++++++++++++++++++++++++++++\n\nThis repository contains source-code for the recognition of coastal rainfall \nproject.\n\nFor more details, see the scientific publication \n`Global detection and analysis of coastline associated rainfall using objective pattern recognition\n<http://arxiv.org/abs/1501.06265>`_ (arXiv:1501.06265).\n\nIt includes these modules and configuration files:\n\n * Pattern - python module to run apply the pattern recognition\n * Submit  - python module to submit the recognition jobs to a linux cluster\n * config  - configuration file to run the pattern recognition\n * setup   - text file that defines the threshold combinations to create\n   a threshold ensemble\n\nPrerequisites\n=============\n\n\n`Python 2.7 Release <http://www.python.org/>`_ is needed to run the code.\n\nPython packages\n---------------\nAdditionally the following python packages must be installed on the system\nto run the pattern recognition:\n\n * `Numpy <http://www.numpy.org/>`_\n * `SciPy <http://scipy.org/>`_\n * `OpenCV <http://opencv.org/>`_\n * `Netcdf4-Python <http://netcdf4-python.googlecode.com>`_\n\nAll packages are open source and should be available via the package manager of\nyour OS.\n\nTo install the packages for Ubuntu 12.04 and later, and Debian wheezy and later::\n\n   apt-get install python-numpy python-scipy python-opencv python-netcdf\n\nOn Arch 2012.07.15 and later::\n  \n  pacman -S python2-numpy python2-scipy opencv\n  python2-netcdf4 (via AUR)\n\nOn Mac OS X 10.6 and later (via port reposetory system)::\n   \n   port install py27-numpy py27-scipy py27-netcdf4 opencv +python27\n\nData and format\n---------------\nThe code expects ``daily`` rainfall input files in netcdf format. As long as it\nis sub-daily the temporal resolution doesn't matter. Also any spatial resolution\ncan be used to run the code. \n\nYou will also need to supply a land-sea mask in netcdf format. \nThis mask has to have the same spatial resolution as the rainfall \nestimates and is supposed to be a 2D-array (latlon).\n\nIf you wish to create an ensemble of different threshold setups you might want\nto take a look into the ``setup`` file. Here all possible threshold combinations\nare defined. You can change, delete or add definitions. But note that the names\nof each definition should start with ``config`` followed by a 2 digit integer \nsuch as config01.\n\nFor the application of the rainfall threshold a climatology of monthly mean rain \ndata is needed. Therefore a multi year monthly mean in a netcdf file should be\ncreated form the rainfall data. Note that unit MUST be the same as for the \nrainfall estimates. For instance we are looking for a monthly average of 3hly\nrainfall data and not for a monthly average of daily rainfall data.\n\n\nBuilding\n========\nAdditional building should not be necessary\n\n\nUsage\n=====\nThe pattern recognition can be used in two ways::\n * in single threading mode\n * in multithreading mode via parallel batch system (pbs)\n\nRegardless of the mode you are running the code you will have to edit the file\nconfig. This file provides all necessary parameters to run the code. The\nfollowing variables are set:\n  \n * folder = the directory of the rainfall estimates.\n   The data must have the following structure: ``folder/YYYY/product-YYYY_MM_DD.nc``.\n   If folder is set to ``/srv/data/rain/`` and the rainfall product is\n   called ``Cmoprh`` the data is expected to have the following structure:\n   ``/mnt/data/rain/1998/Cmorph-1998_01_01.nc`` for the 01. Jan 1998.\n\n * head = the leading string of all filenames, usually the rainfall product\n   name\n * targetdir = the directory where the pattern recognition data is stored\n * slmfile   = the filename of the land-sea mask in netcdf-format\n * ensemble  = should be a threshold setup ensemble be created (boolean)\n * reso      = the spatial resolution of the data in km\n * area      = the threshold that is supposed to be meso-scale \n   usually 500 km but you can change it.\n * ecce      = the threshold for eccentricity (see publication for details)\n * beam      = the threshold for the straight length variation\n * perc      = the threshold for the rain intensity in percentiles\n * NOTE: If you choose to create a threshold ensemble the variables ecce, beam, prec\n   have no effect.\n * monmean   = netcdf file where a climatology for monthly mean rainfall data\n   is stored.\n * erase      = The pattern detection can operate more successfully when small \n   islands are erased from the slm-data.  Should this be done (boolean). \n   Note: tha  this feature is available but not very well tested\n * size       = If erase is set to true what is the maximum size of \n   islands that should be deleted (km^2)\n * scale     = how many boxes representing the coastal area (boxcounting)\n * varname   = the name of the rainfall variable in the netcdf-file\n * lon       = the name of the longitude variable in the netdf-file\n * lat       = the name of the latitude variable in the netcdf-file\n * time      = the name of the time variable in the netcdf-file\n * units     = the unit of the rainfall estimates\n * name      = your name\n * institution = the name of your institution\n\nThe module that reads the configuration is written in a way that you can add\nany variable you want to the config file. It simply has to have the following\nstructure::\n\n key = value\n\nRunning in the single mode\n--------------------------\nIf you want to run the pattern recognition in single processing mode simply run\nthe Pattern script with the following command line options::\n\n python Pattern FirstDate LastDate configXX\n\nWhere FirstDate is the starting data and LastData the last date. Note that the \ndates have to be in YYYY-MM-DD format. \n\nThe config parameter is optional and only used if you want to create a threshold\nensemble. the configXX value must be defined in the ``setup`` file.\n\nNote: You you are using a config parameter the ``targetdir`` variable is changed\naccordingly. So if you set ``config01`` as config parameter and set \n``/srv/data/PatternDetect/`` as targetdir variable ``Config01`` will be added to the \ntargetdir string.\n\nExamples::\n\n   1) python Pattern 1998-01-01 2012-12-31 config13\n   2) python Pattern 1998-01-01 2012-12-31\n\n1) Run the pattern recognition between 01. Jan 1998 and 31. Dec 2012 for threshold\nsetup ``config13`` as defined in the ``setup`` file. \n\n2) Same as 1) but without a threshold ensemble.\n\nFor more information run::\n   \n   python Pattern --help\n\nRunning in paralell mode (PBS)\n------------------------------\nIt is also possible to send several pattern recognition jobs to a Linux cluster\nto speed up the process of the recognition.\n\nIn general there are two scenarios:\n\n * distribution of jobs to create a threshold ensemble\n * distribution of jobs between dates\n\nIf you choose to create a threshold ensemble and want to distribute the jobs\nsimply run::\n\n   python submit --config=config01,config02,...,configNN FirstDate LastDate\n\nIf you don't want to create a threshold ensemble but yet want to send the job \nto a Linux cluster simply run::\n\n   python submit FirstDate LastDate\n\nNote the FirstDate and LastDate have the same meaning and format as in running\nin single mode\n\nPlease type::\n\n   python submit --help\n\nto get more info like the maximum number of jobs that are submitted to the \nlinux cluster.\n\n\nIf you want to change the header string of the PBS script or change the \nsubmit command (e.g. to llsubmit) please edit the source-code of submit. \nHeader and submit command are defined in the very beginning of the script.\n\n\nTesting\n=======\n\nSome fake rain data with a land-sea mask is comes with the code. The data is\nstored in .test in this directory. If you want to test the pattern recognition\nsimply run::\n\n   python Pattern --test\n\n\nContributing\n============\n\nWe welcome all types of contributions, from blueprint designs to\ndocumentation to testing to deployment scripts.\n\n\nBugs\n====\n\nBugs should be filed to **martin.bergemann@monash.edu**\n", 
  "description": "Global recognition and analysis of coastline associated rainfall using objective pattern recognition"
}