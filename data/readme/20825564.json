{
  "README": "This repositiory contains both python and matlab files to load training and testing data for the brain decoding competition\nAll of the python scripts require the scipy stack. I just use the Anaconda python distribution, which can be found here\nhttp://continuum.io/downloads\n\nPython scripts: \nmake_features.py - makes features from the mat files. The training data will be stored\nin a matrix called X_train. Each row of X_train is an observation and each column is a feature.\nThe labels for the observations are stored in the vector called y_train. Before you can run \nthis script you need to have downloaded all of the data from the Kaggle website.\n\nMatlab scripts:\nmake_features.m - Does the same thing as the python version of make_features. \ncreate_features.m - A function used by make_features \n\nMy Approach so Far: \n    So far I compress the features using Kernel Principal Component Analysis (KernelPCA). A description of the\nKernelPCA can be found here http://scikit-learn.org/stable/auto_examples/decomposition/plot_kernel_pca.html\nThis both reduces the dimensionality of the data and maps it to a higher dimensional space. A sigmoid Kernel is used. \n    I then use Logisitic Regression with Stochastic Gradient Descent. This is just a generic linear classifier\nwhich is really fast to train. A description Stochastic Gradient Descent and Logistic Regression can be found here\nhttp://scikit-learn.org/stable/modules/sgd.html#classification    \n\n\nIdeas to Increase Performance: \n    Take a look at this paper http://arxiv.org/pdf/1404.4175v1.pdf. It talks about transfer learning. I think I really need to incorporate the \ndensity ratio mentioned in this paper to really get an increase in the accuracy. This allows the samples in the training set to be weighted\nbased on how similar they are to samples in the test set. \n    I also need to extract some useful features. As of right now I am only using the time series data. \n    \n    \nLet me know if you have any questions or ideas and Thanks!!!!\n", 
  "read_at": 1462547411, 
  "description": "Kaggle Competition", 
  "id": 20825564
}