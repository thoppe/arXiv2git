{
  "read_at": 1462551138, 
  "description": "a MPI-based parallel mapper and launcher", 
  "README.md": "pyina\n=====\na MPI-based parallel mapper and launcher\n\nAbout Pyina\n-----------\nThe pyina package provides several basic tools to make MPI-based\nhigh-performance computing more accessable to the end user. The goal\nof pyina is to allow the user to extend their own code to MPI-based\nhigh-performance computing with minimal refactoring.\n\nThe central element of pyina is the parallel map-reduce algorithm.\nPyina currently provides two strategies for executing the parallel-map,\nwhere a strategy is the algorithm for distributing the work list of\njobs across the availble nodes.  These strategies can be used \"in-the-raw\"\n(i.e. directly) to provide map-reduce to a user's own mpi-aware code.\nFurther, pyina provides the \"ez_map\" interface, which is a map-reduce\nimplementation that hides the MPI internals from the user. With ez_map,\nthe user can launch their code in parallel batch mode -- using standard\npython and without ever having to write a line of parallel python or MPI code.\n\nThere are several ways that a user would typically launch their code in\nparallel -- directly with \"mpirun\" or \"mpiexec\", or through the use of a\nscheduler such as torque or slurm. Pyina encapsulates several of these\n'launchers', and provides a common interface to the different methods of\nlaunching a MPI job.\n\nPyina is part of pathos, a python framework for heterogenous computing.\nPyina is in the early development stages, and any user feedback is\nhighly appreciated. Contact Mike McKerns [mmckerns at caltech dot edu]\nwith comments, suggestions, and any bugs you may find. A list of known\nissues is maintained at http://trac.mystic.cacr.caltech.edu/project/pathos/query.\n\n\nMajor Features\n--------------\nPyina provides a highly configurable parallel map-reduce interface\nto running MPI jobs, with::\n\n* a map-reduce interface that extends the python 'map' standard\n* the ability to submit batch jobs to a selection of schedulers\n* the ability to customize node and process launch configurations\n* the ability to launch parallel MPI jobs with standard python\n* ease in selecting different strategies for processing a work list\n\n\nCurrent Release\n---------------\nThe latest released version of pyina is available from::\n    http://trac.mystic.cacr.caltech.edu/project/pathos\n\nPyina is distributed under a 3-clause BSD license.\n\nDevelopment Release\n-------------------\nYou can get the latest development release with all the shiny new features at::\n    http://dev.danse.us/packages.\n\nor even better, fork us on our github mirror of the svn trunk::\n    https://github.com/uqfoundation\n\nCitation\n--------\nIf you use pyina to do research that leads to publication, we ask that you\nacknowledge use of pyina by citing the following in your publication::\n\n    M.M. McKerns, L. Strand, T. Sullivan, A. Fang, M.A.G. Aivazis,\n    \"Building a framework for predictive science\", Proceedings of\n    the 10th Python in Science Conference, 2011;\n    http://arxiv.org/pdf/1202.1056\n\n    Michael McKerns and Michael Aivazis,\n    \"pathos: a framework for heterogeneous computing\", 2010- ;\n    http://trac.mystic.cacr.caltech.edu/project/pathos\n\nMore Information\n----------------\nProbably the best way to get started is to look at a few of the\nexamples provided within pyina. See `pyina.examples` for a\nset of scripts that demonstrate the configuration and launching of\nmpi-based parallel jobs using the `ez_map` interface. Also see\n`pyina.examples_other` for a set of scripts that test the more raw\ninternals of pyina. The source code is also generally well documented,\nso further questions may be resolved by inspecting the code itself, or through \nbrowsing the reference manual. For those who like to leap before\nthey look, you can jump right to the installation instructions. If the aforementioned documents\ndo not adequately address your needs, please send us feedback.\n\nPyina is an active research tool. There are a growing number of publications and presentations that\ndiscuss real-world examples and new features of pyina in greater detail than presented in the user's guide. \nIf you would like to share how you use pyina in your work, please send us a link.\n", 
  "id": 11032662
}