{
  "read_at": 1462544957, 
  "description": "A tiny python2.7 script which converts LaTex projects into arxiv-format. Suggestions are welcome.", 
  "README.md": "# arXiv converter\nA tiny python script which tries to convert LaTex projects into arXiv-format. Any suggestions are welcome. \n\n## Usage:\n```\npython arxiv_converter.py -i main_tex_file.tex\n```\n### Optional parameters:\n    -o foldername\n        Specify output folder. Default: subfolder of input file called \"arxiv_version\"\n    --remove-comments\n        Flag. Do not include comments. Default: unset\n    --folder-cleanup\n        Flag. Remove output folder if it exists. Default: unset\n\n## What's new:\n   * python3 compatibility\n   * the script now supports dynamically generated figures. For example:\n```\n\\begin{figure}\n   \\newcommand{\\FigureRow}[1]{\n      \\subfloat[#1]{\\includegraphics[width=.48\\linewidth]{figures/#1/result_one.pdf}}\n      \\subfloat[#1]{\\includegraphics[width=.48\\linewidth]{figures/#1/result_two.pdf}}\n   }\n   \\FigureRow{first_dataset}\n   \\FigureRow{second_dataset}\n   \\FigureRow{third_dataset}\n   ...\n\\end{figure}\n```\n   * experimental PLOS-ONE converter\n   * comment cmd generator for latex\n\n## How the converter works:\n* The script creates an output folder,\n* parses the input file and generates a new one in the output folder where it:\n    * inserts the content of all imports (e.g., \\import{foo}),\n    * copies all graphics (e.g., \\includegraphics{graphic}) source files into the same folder (enumerate them if two or more have the same name) and replaces the filename in the LaTex file with the new one.\n    * Finally, it inserts the content of the .bbl file as bibliography (if the .bbl does not exist, it tries to compile it)\n\n", 
  "id": 40362326
}