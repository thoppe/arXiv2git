{
  "read_at": 1462553701, 
  "description": "A CHerednik Algebra Magma Package", 
  "Readme.md": "# CHAMP\n**A CHerednik Algebra Magma Package**\n\nby Ulrich Thiel (<thiel@mathematik.uni-stuttgart.de>, [http://www.mathematik.uni-stuttgart.de/~thiel](http://tinyurl.com/psubtwr))\n\n***\nCHAMP is a computer algebra package based on [Magma](http://magma.maths.usyd.edu.au/magma/) for performing basic computations in rational Cherednik algebras at arbitrary parameters and in Verma modules for restricted rational Cherednik algebras. Part of this package is a new Las Vegas algorithm for computing the head and the constituents of a local module in characteristic zero. We used this method to compute the Calogero-Moser families, the decomposition matrices of the Verma modules, and the structure of the simple modules as graded G-modules for generic restricted rational Cherednik algebras for around half of the exceptional complex reflection groups (see the complementary article <http://arxiv.org/abs/1403.6686>, to appear in LMS J. Comput. Math. (2015)).\n***\n\n###Downloading and running CHAMP\nYou can either download a [zip archive](https://github.com/thielul/CHAMP/zipball/master) or a [tar archive](https://github.com/thielul/CHAMP/tarball/master) of CHAMP. Once you downloaded this (the file will usually be called *master*) you do the following in a terminal:\n\n1. Unpack the archive either with *unzip master* or *tar xvfz master*.\n2. Change to the directory of the unpacked archive (it will be something like *thielul-CHAMP-X* with some *X*).\n3. Run *./configure* (needed only for the first time).\n4. You can then start CHAMP with *./champ*.\n\nMake sure you have [Magma](http://magma.maths.usyd.edu.au/magma/) installed and that it can be called with *magma* from the terminal. \nDue to some operating system functions, CHAMP will not work on Windows systems, just on Linux and Mac OS X systems. Moreover, a MAGMA version of at least **2.19** (December 2012) is necessary as we make use of user-defined types which did not exist in earlier versions. CHAMP was tested with MAGMA versions 2.19 and 2.20. The very basic functions of CHAMP (excluding Cherednik algebra parts) will also work with Magma versions down to 2.17 (December 2010).\n\n###Wiki###\nThe [Wiki](https://github.com/thielul/CHAMP/wiki) contains information and examples about the usage of CHAMP. **You should start from here**. You can of course also always contact me.\n\n###News\n**Mar 27, 2015:** The **explicit results** are now available on [this website](http://tinyurl.com/p5zmnyo) in **HTML format**, which is much easier to skim through than the PDF file.\n\n**Feb 25, 2015:** Added information to the Wiki about [exceptional complex reflection groups](https://github.com/thielul/CHAMP/wiki/Exceptionals) and the realizations we have chosen. \n\n**Feb 25, 2015 (v.1.5-67):** Added compatibility down to Magma 2.17 for the core package of CHAMP. All higher level parts (like the one for Cherednik algebras) still need at least 2.19.\n\n**May 26, 2014 (v1.5):** **Massive performance improvements** for computations in rational Cherednik algebras, and support for **Poisson brackets**. Internally we switched from the tensor algebra to the group algebra for represententing the Cherednik algebra (this was suggested and already used by Cedric Bonnafe!) and make use of some commutator formulas in combination with a database of commutators which is automatically extended while performing operations. Although mathematically the same, this substantially reduces the complexity of elements created during multiplications and makes it possible to perform much more complex computations than before. \n\nThe graph below illustrates a simple but ill-behaved example (for the old algorithm). Here we compute the product (y2^k)*(x2^k) in the generic rational Cherednik algebra for B2 at t=0. We see that the runtime of our old algorithm explodes for k=6 already, whereas with the new algorithm we can even compute k=100--in less time.\n\n![](https://raw.githubusercontent.com/thielul/CHAMP/master/Performance/champ_v14_v15_b2_y2x2.png)\n\nWe see that the complexity of the new algorithm is much better. Although the above is a simple (but actually already quite complex) example, our new algorithm of course also performs much better in serious examples illustrated by the following graph. Here we compute powers eu^k of the Euler element in the same situation as above. \n\n![](https://raw.githubusercontent.com/thielul/CHAMP/master/Performance/champ_v14_v15_b2_eu.png)\n\nThe difference is even more visible when moving to more complicated groups than B2.\n\n**Note**: In the new representation of elements of the Cherednik algebra we use the PBW-basis of the form xyg with x in K[V] and y in K[V^\\star], so we do not put the group algebra in the middle any more. And as we are working in the **opposite** algebra in Magma--as usual--this means we represent elements as linear combinations of the gyx. \n\n**May 11, 2014 (v1.4):**  Many usability improvements. The answers to Gordon's questions are now automatically computed by the command *Gordon* which can be applied to a complex reflection group, a Cherednik parameter, and an Euler family for the parameter. Furthermore, all results we computed so far are stored in a database which can be accessed via the command *Gordon* (see [below](#results)). A similar database is available for the Rouquier families computed by Chlouveraki. These can be accessed via *RouquierFamilies*.\n\n**Mar 25, 2014 (v1.3):** First public release.\n\n\n###Results\nAll results about the representation theory of restricted rational Cherednik algebras computed so far is available on [this website](http://tinyurl.com/p5zmnyo). They are also included in CHAMP's database (see the [Wiki](https://github.com/thielul/CHAMP/wiki) on how to access it).\n\n\n###Acknowledegents\nThe realizations, character tables and representations for the exceptional \ncomplex reflection groups stored in the database are all taken from CHEVIE, so \nI would like to thank everyone who contributed to the CHEVIE project. Furthermore, I would like to thank Cedric Bonnafe for many hints and suggestions.", 
  "id": 18113395
}