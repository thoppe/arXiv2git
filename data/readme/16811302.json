{
  "read_at": 1462543234, 
  "description": "Routines for carrying out a 2d Fourier decomposition for Heavy Ion Events", 
  "README.md": "2dfourier {#mainpage}\n=========\nC.Coleman-Smith (cec24@phy.duke.edu)\n\nRoutines for carrying out a 2d Fourier decomposition for Heavy Ion events  and computing associated measures of event roughness. \n\n### Citation details\n\"Classification of initial state granularity via 2d Fourier Expansion\" [1]\n\nChristopher E. Coleman-Smith (Duke U.), Hannah Petersen (Duke U. & Frankfurt U., FIAS), Robert L. Wolpert (Duke U.). Apr 2012. 9 pp.\n\nPublished in J.Phys. G40 (2013) 095103 \n\nPlease use the following citation if you use this code\n\n    \\bibitem{ColemanSmith:2012ka} \n    C.~E.~Coleman-Smith, H.~Petersen and R.~L.~Wolpert,\n    %``Classification of initial state granularity via 2d Fourier Expansion,''\n    J.\\ Phys.\\ G {\\bf 40}, 095103 (2013)\n    [arXiv:1204.5774 [hep-ph]].\n\n# Getting Started\n\n## Requires:\n\n* CMAKE [2]\n* A C compiler\n* libGSL\n\n## Building & Installing\n\nThis project uses CMAKE to generate Makefiles, it is canonical to do out of place builds using cmake. An \"out of place\" builds puts all the temporary files and compiler junk into a directory that is outside the source tree.\n\nFrom the project root do:\n\n    mkdir ./build\n    cd ./build\n    cmake ..\n    make && make install\n\nCmake defaults to installing things in /usr/local, if you don't want that you should set invoke cmake as\n\n    cmake -DCMAKE_INSTALL_PREFIX:PATH=/your/install/path ..\n\nSome automatic documentation can be generated by running\n\n    doxygen Doxyfile \n\nA shared library `libdecompf2d` is built and installed along with headers `decompf2d.h`. Consult the file\n`example-driver.c` to see how to use the library fns.\n\n## Running the example\n\n`example_driver.c` shows how to read a file and compute the coefficients Amn. A file in the input format\nrequired is provide in `example/example-event.dat`, this event is based on a 200 x 200 pt grid. \n\nTo run the example analysis and compute up to the 8th order moments do, supposing you have installed the driver somewhere in your path\n\n    f2d-driver-example ./example/example-event.dat 200 8 8\n\nYou should see an output like this:\n\n     # reading from: ./example/example-event.dat\n     # input grid size: (200 x 200)\n     # moments computed up to: 8 8\n     # com: -0.199229 -0.002554 (79 99)\n     (-8 0)[1.326949 -0.100377] (-8 1)[-1.714913 0.082701] ...\n     ...\n     L2: 44.168916\n     M1: 376.742586\n     H1: 480.405883\n     Rsq: 117.299565\n\nThe code prints out a grid of values: `(M, N) [ Re[A_MN], Im[A_MN]]`, and then lists the values of the various\nnorms for the event. The example event is one element of the ensemble of N_a=1 URQMD events discussed in the\narticle [1], after consulting fig.4 and fig.5 we se that the printed out values are fairly representative\n\n\n[1]: http://arxiv.org/abs/arXiv:1204.5774\n[2]: http://www.cmake.org/\n\n\n[![githalytics.com alpha](https://cruel-carlota.pagodabox.com/5b97c786bf37b481c44a987285473615 \"githalytics.com\")](http://githalytics.com/jackdawjackdaw/2dfourier)\n", 
  "id": 16811302
}