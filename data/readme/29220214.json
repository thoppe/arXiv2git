{
  "id": 29220214, 
  "read_at": 1462551620, 
  "README_MODS": "### VERSION 1.6.4.7 ###\n# see MODS*.diff for full patch (against 1.6.4)\n# made these functional changes\n - ...TBD...\n\n# made these \"build\" changes\n - edited pp*py to have version = '1.6.4.7'\n - ...TBD...\n\n\n\n### VERSION 1.6.4.6 ###\n# see MODS*.diff for full patch (against 1.6.4)\n# made these functional changes\n - ...TBD...\n\n# made these \"build\" changes\n - edited pp*py to have version = '1.6.4.6'\n - ...TBD...\n\n\n\n### VERSION 1.6.4.5 ###\n# see MODS*.diff for full patch (against 1.6.4)\n# made these \"build\" changes\n - edited pp*py to have version = '1.6.4.5'\n - redistribute package as 'ppft'\n\n\n\n### VERSION 1.6.4.4 ###\n# see MODS*.diff for full patch (against 1.6.4)\n# made these functional changes\n - every file has __version__\n\n# made these \"build\" changes\n - edited pp*py to have version = '1.6.4.4'\n - python2-only code in python2 (ported from 1.6.4.1)\n - python2/python3 code in python3 (split, due to minor functional bugs)\n\n\n\n### VERSION 1.6.4.3 ###\n# see MODS.diff for full patch (against 1.6.4)\n# made these \"build\" changes\n - edited pp*py to have version = '1.6.4.3'\n - build with setuptools if available\n\n\n\n### VERSION 1.6.4.2 ###\n# see MODS.diff for full patch (against 1.6.4)\n# made these functional changes\n - picks a random port instead of default port '60000'\n\n# made these \"build\" changes\n - edited pp*py to have version = '1.6.4.2'\n - added dependency 'six' (for python3.x support)\n - added python 3.x support\n\n\n\n### VERSION 1.6.4.1 ###\n# see MODS.diff for full patch (against 1.6.4)\n# made these functional changes\n - provide dill as alternate install to cPickle in pp.py and ppworker.py\n   . (this allows pp to unpickle with dill)\n - provide dill.source.importable as alternate to code using inspect in pp.py\n   . (this allows pp to pickle interactively-defined functions and lambdas)\n - modify all references in pp.py to dill.source.getname instead of func_name\n   . (this allows pp to interactively pickle builtin and imported functions)\n\n# made these \"build\" changes\n - edited pp*py to have version = '1.6.4.1'\n - edited setup.py to use 'pathos' download_url & version number\n - edited ppserver.py to be python2.5 compliant\n\n", 
  "README.md": "ppft\n====\na friendly fork of pp\n\nAbout Ppft\n----------\nppft is a fork of Parallel Python, and is developed as part of pathos: https://github.com/uqfoundation/pathos\n\nParallel Python module (PP) provides an easy and efficient way to create parallel-enabled applications for SMP computers and clusters. PP module features cross-platform portability and dynamic load balancing. Thus application written with PP will parallelize efficiently even on heterogeneous and multi-platform clusters (including clusters running other application with variable CPU loads). Visit http://www.parallelpython.com for further information.\n\nPathos is a python framework for heterogeneous computing.\nPathos is in active development, so any user feedback, bug reports, comments,\nor suggestions are highly appreciated.  A list of known issues is maintained\nat http://trac.mystic.cacr.caltech.edu/project/pathos/query, with a public\nticket list at https://github.com/uqfoundation/pathos/issues.\n\nNOTE: ppft installs as pp. If pp is installed, it should be uninstalled before ppft is installed -- otherwise, \"import pp\" will likely not find the ppft fork.\n\n\nMajor Changes\n-------------\n* pip and setuptools support\n* support for python 3\n* enhanced serialization, using dill.source\n\n\nCurrent Release\n---------------\nThis version is a fork of pp-1.6.4.\n\nThe latest stable release of ppft is available from::\n    https://github.com/uqfoundation/ppft/releases\n\nor::\n    https://pypi.python.org/pypi/ppft\n\n\nPP and ppft are distributed under a BSD-like license.\n\n\nDevelopment Version\n-------------------\nYou can get the latest development version with all the shiny new features at::\n    https://github.com/uqfoundation\n\nIf you have a new contribution, please submit a pull request.\n\n\nMore Information\n----------------\nProbably the best way to get started is to look at the examples that are\nprovided within PP.  See pp.examples for a set of scripts.  Please feel\nfree to submit a ticket on github, or ask a question on stackoverflow\n(@Mike McKerns).\n\nPathos is an active research tool. There are a growing number of publications\nand presentations that discuss real-world examples and new features of pathos\nin greater detail than presented in the user's guide.  If you would like to\nshare how you use pathos in your work, please post a link or send an email\n(to mmckerns at caltech dot edu).\n\n\nCitation\n--------\nIf you use pathos to do research that leads to publication, we ask that you\nacknowledge use of pathos by citing the following in your publication::\n\n    M.M. McKerns, L. Strand, T. Sullivan, A. Fang, M.A.G. Aivazis,\n    \"Building a framework for predictive science\", Proceedings of\n    the 10th Python in Science Conference, 2011;\n    http://arxiv.org/pdf/1202.1056\n\n    Michael McKerns and Michael Aivazis,\n    \"pathos: a framework for heterogeneous computing\", 2010- ;\n    http://trac.mystic.cacr.caltech.edu/project/pathos\n\nPlease see http://trac.mystic.cacr.caltech.edu/project/pathos or\nhttp://arxiv.org/pdf/1202.1056 for further information.\n", 
  "description": "distributed and parallel python"
}