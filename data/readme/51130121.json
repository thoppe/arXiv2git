{
  "README": "=====================================================================================\n                      MRS3D - MultiResolution in Spherical 3D            \n                                Library and tools                          \n                                  v1.0b  09/2013                           \n=====================================================================================\n\n\nMRS3D is a C++ package providing a library and a set of tools allowing the manipulation\nof Spherical Fourier-Bessel Coefficients and the implementation of MultiResolution\nalgorithms adapted to 3D data in spherical coordinates.\nIn particular, MRS3D implements a Spherical 3D Isotropic Wavelet Decomposition. \n\nAs a part of MRS3D, this package also contains the FastDSBT C++ library wich implements\na Discrete Spherical Bessel Transform based on a matrix formalism.\n\nMRS3D is distributed under the CeCILL License (see LICENSE.CeCILL) in the hope that it \nwill be usefull but without any warranty. \n\nThe following softwares are used in MRS3D:\n    - HEALPix (http://healpix.jpl.nasa.gov/) distributed under the GNU GPL\n    - 3DEX (https://github.com/ixkael/3DEX) developed by Boris Leistedt and released\nunder the CeCiLL License. See the ArXiV paper http://arxiv.org/abs/1111.3591.\n\nAuthor: Francois Lanusse (francois.lanusse@gmail.com)\n\nCopyright CEA 2013\n\n===================\n   Requirements\n===================\n\nIn order to be able to compile the MRS3D package, the following softwares are required:\n\n    - cmake \t     (http://cmake.org/cmake/resources/software.html)\n    - HEALPix \t     (http://sourceforge.net/projects/healpix/files/)\n    - cfitsio        (http://heasarc.gsfc.nasa.gov/fitsio/)\n    - OpenMPI or other MPI implementation\n    - gfortran and gcc\n    \n\nThe following softwares are optional:\n    - Doxygen\n    - IDL     \n\n===================\n     Building\n===================\n\nBefore building the MRS3D package, it is necessary to build and install the HEALPix \npackage (Fortran AND CXX versions).\n\nFirst, unpack the tar.gz archive:\n  \n    $ tar -xvzf MRS3D.tar.gz\n    $ cd MRS3D\n    \nSet the CFITSIO_DIR environment variable to the directory containing libcfitsio.a:\n\n    $ export CFITSIO_DIR=/usr/lib\n\nIf IDL is installed on your system, you can build the MRS3D IDL interface by setting\nthe environment variable IDL_DIR to the IDL root directory:\n\n    $ export IDL_DIR=/Applications/itt/idl\n\nBy default, the binary tools, headers and libraries will be installed in the MRS3D \ndirectory. To install them elsewhere on your sytem (e.g. /usr/local), you can set \nthe INSTALL_DIR environment variable:\n\n    $ export INSTALL_DIR=/usr/local        [ Optional ]\n\nCompile the package:\n\n    $ mkdir build\n    $ cd build\n    $ cmake ..\n    $ make all\n    $ make install  \n\nTo build the documentation:\n    \n    $ make doc\n\nThe html documentation will be available at doc/html/index.html.\n\nIf LaTeX is installed on your system, you can also build the pdf documentation by\ngoing to the doc/latex subdirectory and typing make.\n\n\n===================\n Running the code\n===================\n\nThe transformations implemented in MRS3D require the values of zeros of Bessel functions.\nInstead of behing calculated each time, these values are tabulated inside a binary FITS\nfile. This file, referred to as qlnTable, must be provided as first argument of all MRS3D\ncommands.\nA precomputed qlnTable is provided with MRS3D and contains the first 3000 zeros of Bessel\nfunctions up to the order 2000. This file should be sufficient for most applications.\nTo compute a larger qlnTable, the gen_qln tool is provided. The following command will\ngenerate a table containing the first 2000 zeros of Bessel functions up to order 4000.\n\n    $ gen_qln qlnTable.fits 4000 2000\n\n\nMRS3D provides two main binary tools almn2wavelet and waveletThresholding:\n\n  > almn2wavelet : Computes an Isotropic Undecimated Spherical 3D Wavelet decomposition \nfrom an almn .fits file.\n\n  > waveletThresholding : Applies wavelet hard thresholding to the input almn .fits file.\n\n\nThese tools work on Spherical Fourier-Bessel coefficients stored in \"almn\" FITS files.\nIn order to compute almn coefficients to test these functions, two additional tools are\nprovided field2almn and almn2field:\n  \n  > field2almn : Computes the Discrete Spherical Fourier-Bessel Transform from a 3D \ncartesian field .fits file.\n\n  > almn2field : Reconstructs a cartesian 3D field from an almn .fits file.\n\n\nAs an example, to decompose a field into wavelet scales from the MRS3D root directory run:\n\n    $ bin/field2almn test/qlnTable.fits test/VirgoField256.fits test/VirgoAlmn.fits 512 250.0 256 256 256\nWill store in \"VirgoAlmn.fits\" coefficients computed from the field \"VirgoField256.fits\" \nusing a HEALPix resolution of nside=512, a boundary condition rmax=250.0 Mpc/h, up to \nthe orders lmax=256, mmax=256 and nmax=256.\n\n    $ bin/almn2wavelet test/qlnTable.fits test/VirgoAlmn.fits wavelet 512 4 3.5\nThis command will produce 5 FITS files (wavelet_0.fits wavelet_1.fits...), one for each\nwavelet scale, plus one for the smoothed density. The cutoff frequency of the low pass \nfilter is set to 3.5\n\n    $ bin/almn2field test/qlnTable.fits test/wavelet_0.fits test/waveletField_0.fits 256 479.0 512\nReconstructs the density field of the first wavelet scale inside a cube of size\n256x256x256 and physical size 479.0 Mpc/h using a Healpix resolution of nside=512.\n\n\nNow, to visualize the density fields, the IDL interface can be used, see the next section.\n\n\n===================\n  IDL Interface\n===================\n\nTo work on spherical Fourier-Bessel coefficients and 3D fields from IDL, MRS3D comes with\nan IDL interface. The IDL procedures are in src/IDL. In order to work these procedures\nload libMRS3DIDL and by default expect the library to be in the same directory.\nTo setup the IDL procedures, go to src/IDL and create a symlink to the libMRS3DIDL library:\n\n    $ ln -s ../../lib/libmrs3d_IDL.dylib ./libmrs3d_IDL.dylib\n\nTo setup the FastDSBT IDL interface use as well:\n\n    $ ln -s ../../lib/libfastDSBT_IDL.dylib ./libfastDSBT_IDL.dylib\n\n(under linux, the libraries in /lib will be .so and not .dylib but keep the name in .dylib\nfor the symlinks)\n\nIn the /src/IDL directory, launch IDL.\n\nAvailable features: \n    - Compute power spectrum from almn\n    - Save/Load power spectrum to/from FITS files\n    - Save/Load almn to/from FITS files\n    - Save/Load cartesian density fiels to/from FITS files\n    - Convert almn to field and field to almn (The use of the binary tools is prefered)\n\nExample of how to visualize the wavelet scale computed at the previous section:\n\n    IDL> fieldWavelet = mrs3d_load_field('/path-to-MRS3D/test/waveletField_0.fits')\n    IDL> ivolume, fieldWavelet\n\nTo get help on the mrs3d_* commands, set the help keyword (e.g. mrs3d_save_field,/help)\n\n\n===================\n Parallel execution\n===================\n\nMRS3D is designed to take full advantage of OpenMP and MPI. \n\nAll the tools provided with MRS3D are parallelized using OpenMP and will by default run using a thread by processor core.\nTo manually set the number of threads used by the command set the environment variable OMP_NUM_THREADS:\n    export OMP_NUM_THREADS=4   (bash)\nor  setenv OMP_NUM_THREADS 4   (tcsh)\n\n\nTo launch a command using several MPI processes:\n  mpirun -np 4 [command followed by arguments]\n\n!!!!!!!!!!!!!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!!!!!!!\nWhen using MPI, be sure to use powers of 2 for the number\nof l,m and n coefficients.\nSince l goes from 0 to lmax, you must set l=2^i -1 !!!!\nThe same goes for m.\nSince n varies from 1 to nmax you can directly set nmax= 2^l\n\nA valid set of (lmax,mmax,nmax) is : 1023 1023 512\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n \n\nAn example of a PBS script to run a command on a computer cluster is provided below:\n\n-----------------------------------waveletThresholding.job----------------------------------\n#!/bin/sh\n#PBS -l pmem=15G\n#PBS -l pvmem=16G\n#PBS -l mem=120G\n#PBS -l vmem=128G\n#PBS -l nodes=8:ppn=1\n#PBS -W x=NACCESSPOLICY:SINGLEJOB\n#PBS -l walltime=100:00:00\n\n#PBS -M [your email address]\n#PBS -m abe\n\nexport OMP_NUM_THREADS=8\ncd [path to working directory]\ncat $PBS_NODEFILE | sort | uniq > machinefile.txt\n\necho \"----Begining job----\" > log\ndate >> log\necho \"--------------------\" >> log\n\nmpiexec -machinefile machinefile.txt -np 8 ./waveletThresholding qlnTable_2000_3000.fits Almn.fits ThresholdedAlmn.fits 2048 250.0 5 5 9.0 0.75 >> log\n\necho \"----Job done--------\" >> log\ndate >> log\n\n----------------------------------------------------------------------------------------------\n\nTo launch the job : qsub waveletThresholding.job\n", 
  "read_at": 1462558004, 
  "description": "Spherical 3D Isotropic Wavelet Transform on the Ball", 
  "id": 51130121
}