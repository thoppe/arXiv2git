{
  "id": 52033073, 
  "read_at": 1462558020, 
  "README.rst": "About\n=====\n\nImplementation of the HMEANT evaluation metric for Polish and other West-Slavic languages.\n\nWith GUI. Easily adaptable for other languages.\n\nCalculated as presented in prec-rec-eq.png.\n\n\nInstallation\n=====\n\nApplication requires wish application (CLI frontend for tk library). It is commonly installed on Linux systems. Binary is built for Linux. No special installation is required, just run pre-compiled HMEANT file either from console or directly with file manager.\n\nUsage - Main GUI\n=====\n\nMain window has a few elements:\n     \n\"Available corpuses\" list:\n          Each corpus's entry contains information about it's name,\n          annotation state and number of sentences. Additionally, meant\n          score (0.0 before computation) and reference corpus name are\n          printed (NIL by default).\n\"Annotate\" button:\n          Opens annotation window for a selected corpus. If none is\n          selected, then nothing happens. If corpus was annotated,\n          then predicates are present in the annotation window, so\n          this is also a convenient way to verify the\n          annotation. After annotating first sentence window for the\n          second one appears etc.\n\"Align corpuses\" button:\n          Aligning corpuses requires setting the reference corpus with\n          the \"Set reference corpus\" button. Alignment is performed\n          for each predicate in the reference corpus.\n\"Add raw corpus\" button:\n          Opens dialog window to pick a file with raw translations\n          (each sentence in a new line, so the third translation will\n          be in a third line of the file). User is asked about the\n          corpus name (if corpus of the same name is already loaded,\n          it is overwritten).\n\"Load corpus\" / \"Save corpus\" buttons:\n          Allows storing and restoring corpus from a file. The\n          reference corpus (if present) and MEANT score are also\n          stored in the file.\n\"Drop selection\" button:\n          Removes selected corpus from \"Available corpuses\" list.\n\nUsage - Annotating corpus\n=====\n\n     In order to compute metric user has to load a raw corpus, select\n     it in the list and press \"Annotate\" button. Annotation window\n     should appear.\n\n     Human annotator has to fill entries for each predicate found in\n     the sentence (on the top). When he finishes one predicate, he has\n     to press \"Add predicate\" button - created predicate should appear\n     in the list on the left. If no more predicates is present in the\n     sentence he has to press \"Sentence annotated\" - this will move\n     him to the next sentence or finish the process (if all are\n     already annotated).\n\n     We have to annotate both reference and the machine translation\n     corpuses to align them in the next step.\n\nNotes for Polish language\n=====\n\n      Polish language has somewhat complicated grammar and many\n      predicate arguments (or even a predicate!) may be absent, but\n      context clearly shows it. It is annotators responsibility to add\n      them anyway in the square brackets.\n\n      Let's consider a sample sentence:\n      \"Kupilismy wczoraj zielony gramofon, a sasiedzi czarna wieze stereo.\"\n\n      Despite having only one verb (\"kupilismy\"), we have two\n      predicates (it is indirect, that this verb applies also to the\n      second half of the sentence). Also the suffix of the verb\n      indicates, that \"agent\" of the first predicate is \"my\". So,\n      annotation should look as follows (absent arguments are ommited):\n\n      predicate           :: kupilismy\n      agent         Who?  :: [my]\n      experiencer   What? :: zielony gramofon\n      temporal      When? :: wczoraj\n\n      predicate           :: [kupic]\n      agent         Who?  :: sasiedzi\n      experiencer   What? :: czarna wieze stereo\n      temporal      When? :: [wczoraj]\n\n      As we can see, three fillers are \"guessed\" by the annotator, but\n      are obvious for polish speaker.\n\nUsage - Aligning corpuses\n=====\n\n     For more detailed usage instruction see howto.pdf.\n\n     After annotating corpuses (they should appear as\n     #<ANNOTATED-CORPUS ...> in the list of the main window) user has to\n     pick a reference corpus in the list and press \"Set reference\n     corpus\". Next he selects any translation and presses \"Align\n     corpuses\". New window should appear.\n\n     In this window user has to match the predicates, because the\n     order of them in the translation may differ. He has to select a\n     matching predicate from the list on the right and click \"Confirm\n     match\" button. If there is no match for the predicate, user\n     should select \"[no match]\" option.\n\n     This will open alignment window for two semantic frames, where\n     user has to mark each argument alignment as \"correct\", \"partial\"\n     or \"incorrect\". When finished, he has to press \"Confirm\n     alignment\". The procedure repeats for the next predicate.\n\n     When alignment is completed score is computed automatically and\n     should appear in the \"Available corpuses\" window.\n\nBuilding from sources\n=====\n\n   To build application Common Lisp implementation SBCL (tested on\n   version 1.3.0) must be present on the system with configured\n   quicklisp library manager (quicklisp.org).\n\n   Running application requires wish (CLI backend for TK library).\n\n   Standalone binary may be downloaded from here: http://prdownloads.sourceforge.net/sbcl/sbcl-1.3.2-x86-64-linux-binary.tar.bz2 (version from Ubuntu repositories is too old). Quicklisp installation is explained in detail here: https://www.quicklisp.org/beta/ .\nThe language used is Common Lisp - https://common-lisp.net/\n\nFiles:\n\namct.asd - system definition - denotes dependencies, system name as seen by runtime etc.\namct.lisp - a few helper functions for building standalone executable\npackage.lisp - defines a package\nannotations.lisp - contains definitions of\n-slr-frame - class embodying a predicate with it's arguments, number of fillers and numbers of correct/partial matches\n-tlr-frame - class embodying a sentence and all associated predicates (slr-frames)\n-corpus - class embodying a set of sentences (tlr-frames), a name, score\n\nAdditionally, there are a few utility functions and the function which computes the MEANT score. Moreover it contains definitions of generic functions implemented by graphical-user-interface.lisp (https://en.wikipedia.org/wiki/Generic_function).\n\n- graphical-user-interface.lisp - implementations of the generic functions from the previous file. Basically this implements GUI for the application performed through wish program (command line interface to tk). So here are defined windows and their behavior.\n\n- text-user-interface.lisp - currently inactive (commented out in asd file). Contains implementation of the generic functions from the annotations.lisp in a terminal manner (I gave you an application utilizing this on the previous iteration).\n\nWhen all is ready just run ./build.sh\n\nSample annotations\n=====\n\nNOTE:\nYou must remember about the context of entire text. In following example agent in sentence 2 is take from sentence 1.\n\nmijajacy rok dwa tysiace czternasty byl bardzo szczegolny dla naszego kraju.\n[predicate]: byl\n[agent]: mijajacy rok dwa tysiace czternasty\n[experiencer]: szczegolny\n[patient]: dla naszego kraju\n[degree/extent]: bardzo\n\nTo byl czas pamieci i refleksji.\n[predicate]: byl (2)\n[agent]: [mijajacy rok dwa tysiace czternasty]\n[experiencer]: czas pamieci i refleksji\n\nObchodzilismy dwudziesta piata rocznice pierwszych wolnych wyborow i powolania rzadu Tadeusza Mazowieckiego.\n[predicate]: Obchodzilismy\n[agent]: [my]\n[experiencer]: dwudziesta piata rocznice pierwszych wolnych wyborow i powolania rzadu Tadeusza Mazowieckiego\n\nRzadu ktory polozyl fundamenty pod budowe wolnej i demokratycznej Polski.\n[predicate]: polozyl\n[agent]: rzadu\n[experiencer]: fundamenty\n[patient]: pod budowe wolnej i demokratycznej polski\n\nFinal info\n=====\n\nFeel free to use this tool if you cite: http://arxiv.org/abs/1601.02789\n\nFor more detailed usage instruction see howto.pdf.\n\nFor any questions: | Krzysztof Wolk | krzysztof@wolk.pl", 
  "description": "Implementation of the HMEANT evaluation metric for Polish and other West-Slavic languages."
}