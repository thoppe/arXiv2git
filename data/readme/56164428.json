{
  "read_at": 1462548457, 
  "description": "Spitz - Optimal edge weight reduction with targeted spectral radius", 
  "readme.md": "Spitz - Optimal edge weight reduction with targeted spectral radius\n======================\nThis code implements the Spitz method as published in XXXXX [link]\n\nCheck `example.m` for an example usage\n\nThe methods expects three variables: \n* Tthe adjacency matrix `A` \n* The spectral radius `beta`\n* An option structure `options` (optional)\n\nFirst import two folders\n```matlab\naddpath('projections/'); \naddpath('lbfgs/');\n``` \n\n### The edges problem:\nTo solve the problem using the dykstra method:\n```matlab\nX_dykstra = near_bounded_sparse(A, beta, options);\n``` \nTo solve the problem using the interior points method:\n```matlab\nX_intp = near_bounded_interior_p(A, beta, options);\n```\nTo solve the problem using the dynamical importance method:\n```matlab\nX_dynamical_importance = binary_deletion_dynamical_importance(A, beta, options);\n``` \nTo get the discrete soultion from continuous solution:\n```matlab\nW_binary = remove_edges_binarysearch( A, X_dykstra_v ,beta);\n``` \n\n### The vertices problem:\nFor the vertices problem you also need to create a \"vertices influence matrix\":\n```matlab\nP = createVerticesInfluenceMatrix(A, 'equal_weight');\n``` \nTo solve the problem using the dykstra method:\n```matlab\nX_dykstra_v = near_bounded_sparse_vertices(A, beta, P, options);\n``` \nTo solve the problem using the interior points method:\n```matlab\nX_intp_v = near_bounded_interior_p_vertices(A, beta, P, options);\n``` \nTo solve the problem using the dynamical importance method:\n```matlab\nX_dynamical_importance_v = binary_deletion_dynamical_importance_vertices(A, beta, options);\n``` \n\nTo get the discrete soultion from continuous solution:\n```matlab\nW_binary = remove_vertices_logsearch( A, X_dykstra_v ,beta);\n``` \n\nTo reproduce the experiment you can download the networks from koblenz network data:\nGo to the `data` folder and run the script `download_networks.m`. \nIt will create a subfolder under data called net_mat with the networks.\n\nThe `projections` folder contains projection function that are used by the methods.\n\nThe `data` folder contains data for the real world networks.\n\nThe `lbfgs` folder contains functions to run lbfgs with box constraints provided by Stephen Becker and Peter Carbonetto\nhttp://www.mathworks.com/matlabcentral/fileexchange/35104-lbfgsb--l-bfgs-b--mex-wrapper\n\nThe Dynamical importance method was implemented from the paper by Restrepo et al.\nhttp://arxiv.org/abs/cond-mat/0606122\n\nSecond order Dynamical importance by Milanese et al.\nhttp://journals.aps.org/pre/abstract/10.1103/PhysRevE.81.046112\n\n\n", 
  "id": 56164428
}