{
  "README": "==================================\nThe Rolling Hough Transform (RHT)\n==================================\n\nThis is the Rolling Hough Transform, described in Clark, Peek, & Putman 2014, ApJ 789, 82 (arXiv:1312.1338).\n\nIncluded is a modified RHT which distinguishes between pixels located at theta, and at theta+pi, in polar coordinates centered on any given image pixel. This is achieved by searching along radii with twice the dtheta of the diameters searched in the RHT. This Transform is still in development.\n\n==================================\nRequirements (Python 2.7 Only)\n==================================\nfrom __future__ import division #Must be first line of code in the file\nfrom astropy.io import fits\nimport scipy.ndimage\nimport math\nimport os\nimport sys\nimport string\nimport tempfile \nimport shutil\nimport time \nimport fnmatch\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n==================================\nInstructions For Use (Python)\n==================================\n1. Ensure your Python 2.7 Environment is as up-to-date as possible and contains the required imports. The code has been tested to run on both Windows and Mac computers successfully, without modification:\n\n>>>python --version //Currently Supports 2.7.5\n\n2. Ensure you are able to import the package:\n\n>>>import rht \n\n3. Run the RHT for individual files or directories, given a number of parameters. Output will be placed alongside the input files in the .fits format, with a record of the parametrs that created it:\n\n>>>rht.main() #Runs the RHT, after asking for user input, with default parameters\n\n>>>rht.main('filepath') #Runs the RHT for a given image or within a given directory with default parameters\n\n>>>rht.main('filepath', flag=value, param=value) #Runs with some flag set to a boolean and some param set to a number\n\n4. Explanation of rht.main() Flags and Parameters\n   Flags: \n     force=False  # If True, forcefully overwrites existing RHT data with same parameter values.\n     drht=False   # If True, runs the directional RHT, which returns output on a full, rather than half, polar domain.\n     \n   Params:\n     wlen=55.0  # Set window diameter in pixels.\n     smr=11.0   # Set smoothing radius in pixels. \n     frac=0.70  # Set theta power threshold. \n\n5. Displaying the results of previously Interpreted RHT data (#TODO_Deprecated)\n\n>>>rht.viewer('filepath') #Will first call rht.interpret('filepath') if necessary\n>>>rht.viewer('filepath', force=True) #Will ALWAYS call rht.interpret('filepath', force=True) first\n\n==================================\nInstructions For Use (Terminal)\n==================================\nCommand Line Argument Format:\n >>>python rht.py arg1 arg2 ... argn \n\nNO ARGS:\n Displays README and exits\n >>>python rht.py\n\nSINGLE ARGS:\n pathname ==> Input file or directory to run the Default RHT on\n >>>python rht.py dirname/filename.fits\n  \n 'help', '-help', 'h', '-h' ==> Displays this message\n >>>python rht.py -h\n \nMULTIPLE ARGS:\n 1st ==> Input file or directory to run the RHT on\n 2nd:nth ==> Named inputs controlling parameters and flags\n  Flags: \n  '-f', '--force'         ==> Force overwrite RHT output run with same parameters.\n  '-d', '--drht'          ==> Compute Directional RHT (full polar domain).\n  \n  Params:\n  '-w', '--wlen' =value   ==> Sets window diameter\n  '-s', '--smr' =value    ==> Sets smoothing radius\n  '-t', '--thresh' =value ==> Sets theta power threshold\n\n==================================\nDirectory Structure\n==================================\nRHT:\n|__This README\n\n|__The rht.py python module, based on fastrht.py for performing the Hough Transform\n\n|__Batches of Image files:\n\n   |__Each image and their computed _xyt??.fits outputs\n\n|__Git version control information\n\n==================================\nOther Information\n==================================\n|__input:\n\n   |__Manageable .fits, .npy, etc image files\n   |__REMEMBER THAT O(RHT) ~ wlen^3, where wlen is the kernel diameter\n\n|__output:\n   |__i,j coordinates in image space, and the theta powers at that coordinate \n   |__Backprojection of theta power onto orignal image coordinates\n\n\n==================================\nAttribution\n==================================\n# This is the Rolling Hough Transform, described in Clark, Peek, & Putman 2014, ApJ 789, 82 (arXiv:1312.1338).\n# If use of the RHT results in a publication, please cite the above.\n# Modifications to the RHT have been made by Lowell Schudel, les2185@columbia.edu, CC'16.\n", 
  "read_at": 1462546650, 
  "description": "The Rolling Hough Transform", 
  "id": 19916476
}