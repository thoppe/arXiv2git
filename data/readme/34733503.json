{
  "id": 34733503, 
  "read_at": 1462511488, 
  "README.rst": "If you use this project please give credit by citing:\n\n    Immanuel Bayer (2015): fastFM: A Library for Factorization Machines http://arxiv.org/abs/1505.00641\n\n\n\nfastFM: A Library for Factorization Machines\n============================================\n\n.. image:: https://travis-ci.org/ibayer/fastFM-core.svg?branch=master\n   :target: https://travis-ci.org/ibayer/fastFM-core\n   \n   \n.. image:: https://img.shields.io/badge/platform-OSX|Linux-lightgrey.svg\n  :target: https://travis-ci.org/ibayer/fastFM\n  \n.. image:: https://img.shields.io/pypi/l/Django.svg   \n   :target: https://travis-ci.org/ibayer/fastFM\n\nThis repository contains the source code for the fastFM C library and the stand-alone\ncomand line interface (cli). In general we recommend to use fastFM with the `Python\ninterface <https://github.com/ibayer/fastFM>`_.\n\nUsage\n-----\n\n\n.. code-block:: bash\n\n    fastFM-core/bin/bin/fastfm data/train_regression data/test_regression \\\n\t--task regression   \\\n\t--rng-seed 1234     \\\n\t--init-var=0.11     \\\n\t--n-iter=123        \\\n\t--solver='mcmc'     \\\n\t--rank 7            \\\n\t--l2-reg=.22\n\n\nExamples on how to use the other command line options options, including example data, can be found\nin ``fastFM-core/demo/Makefile``. The ``demo/`` folder contains examples showing how to use\nfastFM as C library.\n\n+----------------+------------------+-----------------------------+\n| Task           | Solver           | Loss                        |\n+================+==================+=============================+\n| Regression     | als, mcmc, sgd   | Square Loss                 |\n+----------------+------------------+-----------------------------+\n| Classification | als, mcmc, sgd   | Probit(Map), Probit, Sigmoid|\n+----------------+------------------+-----------------------------+\n| Ranking        | sgd              | BPR                         |\n+----------------+------------------+-----------------------------+\n*Supported solvers and tasks*\n\nInstallation\n------------\n\n**OS X:**\nLibrary compiles on OSX, however console interface doesn't.\n\n.. code-block:: bash\n\n    # Install cblas (Linux only).\n    $ sudo apt-get libatlas-base-dev\n\n    # Clone the repro including submodules (or clone + `git submodule update --init --recursive`)\n    $ git clone --recursive https://github.com/ibayer/fastFM-core.git\n\n    # Build library\n    $ cd fastFM-core/; make;\n\n    # Build command line interface (this works currently only on osx)\n    $ make cli\n\nTests\n-----\n\n**OS X:**\nRecommended way to manage dependencies is `Homebrew package manager <https://brew.sh>`_.\nIf you have brew installed, dependencies can be installed by running command\n``brew install glib gsl argp-standalone``.\n\n.. code-block:: bash\n\n    # The tests require the glib and gsl library (Linux, for OSX see above).\n    $ sudo apt-get libglib2.0-dev libgsl0-dev\n\n    $ cd fastFM-core/src/tests\n\n    # Build the tests\n    $ make\n\n    # Run all tests\n    $ make check\n\n\nContribution\n------------\n\n* Star this repository: keeps contributors motivated\n* Open a issue: report bugs or suggest improvements\n* Fix errors in the documentation: small changes matter\n* Contribute code\n\n**Contributions are very wellcome!** Since this project lives on github we reommend\nto open a pull request (PR) for code contributions as early as possible. This is the\nfastest way to get feedback and allows `Travis CI <https://travis-ci.org/ibayer/fastFM-core>`_ to run checks on your changes.\n\nDevelopment Guidlines\n---------------------\n\n* check coding style (google) ``lang-format-3.5 -style=google -i <YOUR_FILE.c/h>``\n* static code analysis ``clang-tidy-3.5 -fix  <YOUR_FILE.c/h> -- I.``\n* run valgrind memory check on sparse_test.c ``make mem_check``\n* run valgrind to check for errors ``valgrind -v ./a.out >& out``\n\n\n**Contributors**\n\n* takuti\n* altimin\n* ibayer\n\nLicense: BSD\n------------\n", 
  "description": "A short paper describing the library is available on arXiv."
}