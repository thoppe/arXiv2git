{
  "read_at": 1462546632, 
  "description": "Survey of program analysis research with a focus on machine code", 
  "README.md": "* Original source of list: https://github.com/REMath/literature_review\n\n\n## Mechanization of Exploits \n* https://github.com/REMath/literature_review/blob/master/mechanization_of_exploits.org \n\n## Binary Analysis \n* Moflow BAP-based tools to do post-crash graph backtaint slicing, post-crash forward symbolic emulation to look for more exploitable conditions, whitebox fuzzing based in SAGE \n - https://github.com/vrtadmin/moflow\n* https://github.com/zardus/pyvex\n* Mcsema is a rewriting and static analysis framework based on LLVM \n - https://github.com/trailofbits/mcsema\n* https://github.com/bdcht/amoco\n* A tool that exports LLVM bitcode into a Datalog workspace \n - https://github.com/plast-lab/llvm-datalog\n* Dagger is a decompilation framework based on LLVM \n - http://dagger.repzret.org/\n* http://bap.ece.cmu.edu/, https://github.com/BinaryAnalysisPlatform/bap\n* http://dynamorio.org/\n* https://bitbucket.org/simona/mltk\n* http://insight.labri.fr/trac, https://github.com/perror/insight\n* https://github.com/rose-compiler/rose/tree/master/projects/BinQ\n* https://github.com/neuromancer/SEA\n* http://bitblaze.cs.berkeley.edu/\n* http://code.google.com/p/avalanche/\n* https://bincoa.labri.fr/trac\n* https://github.com/jkinder/jakstab\n* https://code.google.com/p/tree-cbass/\n* https://github.com/bitblaze-fuzzball/fuzzball (https://nebelwelt.net/blog/20140114-having_phun_with_SE.html)\n* https://code.google.com/p/decaf-platform/\n* http://esec-lab.sogeti.com/pages/Fuzzgrind\n* http://code.google.com/p/idaocaml/\n* http://doar-e.github.io/blog/2013/09/16/breaking-kryptonites-obfuscation-with-symbolic-execution/\n* https://github.com/tosanjay/BOPFunctionRecognition\n* https://github.com/codelion/pathgrind\n* http://doar-e.github.io/blog/2013/09/16/breaking-kryptonites-obfuscation-with-symbolic-execution/\n* http://yurichev.com/writings/z3_rockey.pdf\n* http://eindbazen.net/2013/04/pctf-2013-cone-binary-250-2/\n* http://shell-storm.org/blog/Binary-analysis-Concolic-execution-with-Pin-and-z3/\n* An architecture-independent decompiler to LLVM IR\n - https://github.com/draperlaboratory/fracture\n* DECAF - https://code.google.com/p/decaf-platform/\n* Binwalk: Firmware analysis tool \n - http://binwalk.org/\n* https://code.google.com/p/miasm/\n\n\n\n## Analysis of Communication Protocols \n* Netzob is an open source tool for reverse engineering, traffic generation and fuzzing of communication protocols. It allows to infer the message format and the state machine of a protocol through passive and active processes. The model can afterward be used to simulate realistic and controllable trafic. - http://www.netzob.org/\n* Communication protocols determine how network components interact with each other. Therefore, the ability to derive a specification of a protocol can be useful in various contexts, such as to support deeper black-box testing or effective defense mechanisms. Unfortunately, it is often hard to obtain the specification because systems implement closed (i.e., undocumented) protocols, or because a time consuming translation has to be performed, from the textual description of the protocol to a format readable by the tools. To address these issues, we developed ReverX, a Java application that generates automata for the language and protocol state machine from network traces. Since our solution only resorts to interaction samples of the protocol, it is well-suited to uncover the message formats and protocol states of closed protocols and also to automate most of the process of specifying open protocols. - https://code.google.com/p/reverx/\n\n\n## Intermediate Representations\n* An Intermediate Representation for Integrating Reverse Engineering Analyses (1998) \n - http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.47.2766\n* REIL: A platform-independent intermediate representation of disassembled code for static code analys \n - http://moflow.org/ref/REIL%20-%20A%20platform-independent%20intermediate%20representation%20of%20disassembled%20code%20for%20static%20code%20analysis.pdf\n* Relational Reverse Engineering Intermediate Language \n - http://www2.in.tum.de/bib/files/sepp11precise.pdf\n* VinE Project Documentation \n - http://bitblaze.cs.berkeley.edu/papers/vine.pdf\n* BIL \n - http://bap.ece.cmu.edu/doc/bap.pdf\n* LLVM \n - http://infoscience.epfl.ch/record/149975/files/x86-llvm-translator-chipounov_2.pdf , http://eurosys2013.tudos.org/wp-content/uploads/2013/paper/Anand.pdf\n* TSL: A System for Generating Abstract Interpreters and its Application to Machine-Code Analysis \n - http://research.cs.wisc.edu/wpis/papers/toplas13-tsl-final.pdf\n* Combining Several Analyses into One OR What is a Good Intermediate Language for the Analysis of Executables? \n - http://www.dagstuhl.de/mat/Files/12/12051/12051.SimonAxel.Slides.pdf\n* Jakstab uses an IR described in chapter two \n - http://www.cs.rhul.ac.uk/home/kinder/papers/phdthesis.pdf\n* Wire - A Formal Intermediate Language for Binary Analysis \n - https://drive.google.com/file/d/0BymO5h8P3PgAakZqY1RQSldzRmM/edit?usp=sharing\n* Automated Synthesis of Symbolic Instruction Encodings from I/O Samples - http://research.microsoft.com/en-us/um/people/pg/public_psfiles/pldi2012.pdf\n* Towards A Binary Intermediate Language for Real-Time Embedded System by Jianqi Shi, Qin Li, Longfei Zhu, Xin Ye, Yanhong Huang, Huixing Fang and Fu Song \n - http://research.sei.ecnu.edu.cn/~song/publications/MPiE14.pdf\n* RockSalt: Better, Faster, Stronger SFI for the x86 \n - http://www.cse.lehigh.edu/~gtan/paper/rocksalt.pdf\n\n## Alias / Value Analysis  \n* Alias Analysis for Assembly \n - http://reports-archive.adm.cs.cmu.edu/anon/anon/usr/ftp/2006/CMU-CS-06-180R.pdf\n* Probabilistic Alias Analysis for ARM Executable Code \n - https://drive.google.com/file/d/0BymO5h8P3PgAc29nUFBleGFtTnc/edit?usp=sharing\n* WYSINWYX: What You See Is Not What You Execute \n - http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.76.637&rep=rep1&type=pdf\n* Static Analysis of x86 Executables by Johannes Kinder \n - http://www.cs.rhul.ac.uk/home/kinder/papers/phdthesis.pdf\n* BDDStab: BDD-based Value Analysis of Binaries \n - http://cs.au.dk/~amoeller/tapas2014/tapas2014_2.pdf\n* Static Analysis of x86 Assembly: Certification and Robustness Analysis \n - http://dumas.ccsd.cnrs.fr/docs/00/63/64/45/PDF/Laporte.pdf \n\n\n## Control Flow Recovery \n* Alias / Value Analysis \n - https://github.com/REMath/literature_review#alias--value-analysis\n* Alternating Control Flow Reconstruction \n - http://dslab.epfl.ch/pubs/alternatingCFR.pdf\n* Refinement-based CFG Reconstruction from Unstructured Programs by Sebastien Bardin, Philippe Herrmann, and Franck Vedrine \n - http://www.labri.fr/perso/fleury/download/papers/binary_analysis/long-final-vmcai-11.pdf\n* Control flow reconstruction from PowerPC binaries \n - http://www2.in.tum.de/bib/files/mihaila09reconstruction.pdf\n* Interprocedural Analysis of Low-Level Code \n - http://mediatum.ub.tum.de/doc/1006212/1006212.pdf\n\n\n## Binary Rewriting\n* Control Flow Integrity \n - https://github.com/REMath/literature_review#control-flow-integrity \n* Metamorphic Software for Buffer Overflow Mitigation \n - http://www.cs.sjsu.edu/faculty/stamp/students/cs298report.doc\n* Advanced Metamorphic Techniques in Computer Viruses \n - http://vxheavens.com/lib/apb01.html\n* Metamorphism in practice or \"How I made MetaPHOR and what I've learnt\" \n - http://vxheavens.com/lib/vmd01.html\n* Automated reverse engineering: Mistfall engine \n - http://vxheavens.com/lib/vzo21.html\n* Writing disassembler \n - http://vxheavens.com/lib/vmd05.html \n* Benny's Metamorphic Engine for Win32 \n - http://vxheaven.org/29a/29a-6/29a-6.316\n* \"Do polymorphism\" tutorial \n - http://vxheavens.com/lib/vwm01.html\n* Introductory Primer To Polymorphism in Theory and Practice \n - http://vxheaven.org/lib/static/vdat/tupripol.htm\n* Recompiling the metamorphism \n - http://vxheavens.com/lib/vhe11.html\n* Theme: Metamorphism \n - http://vxheaven.org/29a/29a-4/29a-4.216\n* Some ideas about metamorphism \n - http://vxheavens.com/lib/vzo20.html\n* Meta-Level Languages in Viruses \n - http://vxheavens.com/lib/vsp44.html\n* Metamorphism (part 1) \n - http://vxheavens.com/lib/vzo10.html\n* Metamorphism \n - http://vxheavens.com/lib/vlj00.html\n* The Viral Darwinism of W32.Evol \n - http://www.openrce.org/articles/full_view/27 ( http://www.openrce.org/articles/files/evol_disasm.html )\n* The Molecular Virology of Lexotan32: Metamorphism Illustrated \n - http://www.openrce.org/articles/full_view/29\n* The Design Space of Metamorphic Malware \n - http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.69.486&rep=rep1&type=pdf\n* Diablo \n - http://diablo.elis.ugent.be/\n\n## Abstract Interpretation\n* http://arxiv.org/abs/0810.2179 (code: http://hal.inria.fr/docs/00/33/23/39/ANNEX/absint.v ) \n* http://dumas.ccsd.cnrs.fr/docs/00/63/64/45/PDF/Laporte.pdf (Coq code in the paper)\n* http://pop-art.inrialpes.fr/interproc/interprocweb.cgi (code: http://pop-art.inrialpes.fr/people/bjeannet/bjeannet-forge/interproc/index.html ) \n* http://www.cs.indiana.edu/l/www/classes/b621/abiall.pdf \n* http://web.mit.edu/afs/athena.mit.edu/course/16/16.399/www/ \n* http://www.hexblog.com/?p=42 \n* https://www.openrce.org/blog/view/1672/Control_Flow_Deobfuscation_via_Abstract_Interpretation ( code: https://www.openrce.org/repositories/users/RolfRolles/BitwiseAI.ml )\n* http://www.irisa.fr/celtique/teaching/PAS/\n\n## Logical solvers\n* https://github.com/leanprover/lean/\n* http://z3.codeplex.com/ \n* http://alt-ergo.ocamlpro.com/\n* http://yices.csl.sri.com/\n* http://cvc4.cs.nyu.edu/web/\n* http://minisat.se/\n* http://fmv.jku.at/boolector/\n* http://mathsat.fbk.eu/\n\n## Probabilistic Logic\n* http://alchemy.cs.washington.edu/\n* https://github.com/opcode81/ProbCog/wiki\n* http://hazy.cs.wisc.edu/hazy/tuffy/\n* https://code.google.com/p/thebeast/\n\n## Datalog\n* Alias Analysis for Assembly - http://users.ece.cmu.edu/~dbrumley/pdf/Brumley,%20Newsome_2006_Alias%20Analysis%20for%20Assembly%20%28Revised%29.pdf\n* Dyna: Extending Datalog For Modern AI \n - http://cs.jhu.edu/~jason/papers/eisner+filardo.datalog11-long.pdf and http://www.cs.jhu.edu/~nwf/datalog20-paper.pdf \n* Using Datalog for fast and easy program analysis \n - http://cgi.di.uoa.gr/~smaragd/doop-datalog2.0.pdf\n* Implementing Dataflow Analyses for Pegasus in Datalog \n - http://www.cs.cmu.edu/~drl/course/compilers/report.pdf\n* Using Datalog and binary decision diagrams for program analysis - http://people.csail.mit.edu/mcarbin/papers/aplas05.pdf\n* Datalog for decompilation - https://media.blackhat.com/us-13/US-13-Cesare-Bugalyze.com-Detecting-Bugs-Using-Decompilation-Slides.pdf\n* On Abstraction Refinement for Program Analyses in Datalog - http://www.cs.ox.ac.uk/people/hongseok.yang/paper/pldi14c-submitted.pdf\n* Scaling Datalog for Machine Learning on Big Data \n - http://arxiv.org/pdf/1203.0160.pdf\n* Relational Representation of the LLVM Intermediate Language \n - http://cgi.di.uoa.gr/~smaragd/theses/psallida.pdf\n* http://docs.datomic.com/query.html\n* Using Datalog for Fast and Easy Program Analysis \n - http://cgi.di.uoa.gr/~smaragd/doop-datalog2.0.pdf\n* An Efficient Engine for Fixed Points with Constraints \n - http://research.microsoft.com/en-us/um/people/leonardo/muze.pdf\n* On Abstraction Refinement for Program Analyses in Datalog \n - http://www.cs.ox.ac.uk/people/hongseok.yang/paper/pldi14c-submitted.pdf\n* Efficient Top-Down Computation Of Queries Under The Well-Founded Semantics - http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=9C9550377F2C74A427FBA59818479087?doi=10.1.1.54.8690&rep=rep1&type=pdf\n* Dedalus: Datalog in Time and Space \n - http://www.eecs.berkeley.edu/Pubs/TechRpts/2009/EECS-2009-173.pdf\n* Strictly Declarative Specification of Sophisticated Points-to Analyses \n - http://cgi.di.uoa.gr/~smaragd/doop-oopsla09prelim.pdf \n* Pregelix: Big(ger) Graph Analytics on A Dataflow Engine \n - http://arxiv.org/pdf/1407.0455.pdf\n\n## String Solvers\n* http://webblaze.cs.berkeley.edu/2010/kaluza/\n* http://people.csail.mit.edu/akiezun/hampi/\n* http://www.cs.purdue.edu/homes/zheng16/str/\n* A DPLL(T) Theory Solver for a Theory of Strings and Regular Expressions \n - http://www.divms.uiowa.edu/ftp/tinelli/papers/LiaEtAl-CAV-14.pdf and http://cvc4.cs.nyu.edu/papers/CAV2014-strings/ \n\n## Datasets \n* https://svn.sosy-lab.org/software/sv-benchmarks/tags/svcomp13/\n* http://samate.nist.gov/SRD/testsuite.php \n* http://www.nec-labs.com/research/system/systems_SAV-website/benchmarks.php\n* http://www.debian.org/distrib/packages\n* https://github.com/offensive-security/exploit-database\n* 1.2k bugs discovered by Mayhem - https://bugs.debian.org/cgi-bin/pkgreport.cgi?submitter=alexandre%40cmu.edu\n\n## Ground Truth \n* http://dwarfstd.org/\n\n## Obfuscators \n* http://vxheaven.org/vx.php?id=eidx\n* http://cansecwest.com/core03/shiva.ppt\n* http://diablo.elis.ugent.be/obf_deobfuscation_byhand\n* http://blog.yurichev.com/node/58\n* https://github.com/enferex/GOAT-Plugs\n* https://github.com/0vercl0k/stuffz/blob/master/llvm-funz/kryptonite/llvm-functionpass-kryptonite-obfuscater.cpp\n* http://code.google.com/p/pescrambler/\n* http://www.phrack.org/issues.html?id=13&issue=63\n* https://github.com/obfuscator-llvm/obfuscator/wiki (https://github.com/obfuscator-llvm/obfuscator/tree/clang-425.0.24)\n* Binary code obfuscation through C++ template metaprogramming - https://www.cisuc.uc.pt/publication/showfile?fn=1357250736_metaobfv3.pdf\n* https://github.com/xoreaxeaxeax/movfuscator\n* https://github.com/xoreaxeaxeax/REpsych\n\n## Hidden Computation\n* http://mainisusuallyafunction.blogspot.com.es/2014/02/x86-is-turing-complete-with-no-registers.html\n* https://github.com/jbangert/trapcc\n* http://www.cl.cam.ac.uk/~sd601/papers/mov.pdf\n* C++ Templates are Turing Complete - http://ubietylab.net/ubigraph/content/Papers/pdf/CppTuring.pdf\n* https://github.com/elitheeli/stupid-machines\n\n## Deobfuscation\n* Using optimization algorithms for malware deobfuscation - http://os2.zemris.fer.hr/ns/malware/2010_spasojevic/diplomski_spasojevic.pdf\n* Unpacking Virtualization Obfuscators - http://static.usenix.org/event/woot09/tech/full_papers/rolles.pdf\n* https://code.google.com/p/optimice/\n\n## Disassemblers\n* http://code.google.com/p/gdsl-toolkit/wiki/Overview \n* http://www.beaengine.org/\n* http://code.google.com/p/distorm/\n* https://hex-rays.com/products/ida/index.shtml\n* http://www.gnu.org/software/binutils/\n* https://github.com/vmt/udis86\n* http://software.intel.com/en-us/articles/pintool-downloads\n* http://capstone-engine.org/\n* winSRDF https://github.com/AmrThabet/winSRDF\n* Udis86 http://udis86.sourceforge.net/\n\n## Decompilers \n* http://users.ece.cmu.edu/~ejschwar/papers/usenix13.pdf\n* http://dagger.repzret.org/\n* http://www.cl.cam.ac.uk/~mom22/thesis.pdf\n* http://code.google.com/p/arm-thumb-decompiler-plugin/\n* https://github.com/EiNSTeiN-/ida-decompiler\n* http://boomerang.sourceforge.net/ \n* Retargetable Decompiler https://retdec.com/\n* C4Decompiler http://www.c4decompiler.com\n* SmartDec decompiler http://decompilation.info/\n* REC Studio 4 http://www.backerstreet.com/rec/rec.htm\n* List of .Net Decompilers: https://code.google.com/p/facile-api/wiki/ListOfDotNetDecompilers\n* https://github.com/zneak/fcd\n\n## Virtual Machines\n* http://klee.llvm.org/\n* https://s2e.epfl.ch/\n* https://github.com/feliam/pysymemu\n* http://pages.cs.wisc.edu/~davidson/fie/\n* http://www.megalith.co.uk/8086tiny/\n\n## Videos\n* http://media.ccc.de/browse/congress/2013/30C3_-_5224_-_en_-_saal_6_-_201312271400_-_triggering_deep_vulnerabilities_using_symbolic_execution_-_gannimo.html\n* http://www.youtube.com/watch?v=CJccn9d2t5w\n* http://www.youtube.com/watch?v=YUikShiPEg8\n* http://www.youtube.com/watch?v=b8SeZTgwXEY\n* http://www.youtube.com/watch?v=_jq3swTyk_k\n* http://www.youtube.com/watch?v=1lh_DNBZBHQ \n* http://www.youtube.com/watch?v=azTVEwxN8zM\n* http://www.youtube.com/watch?v=k1qqNE1xMII\n* https://archive.org/details/Recon2012Keynote-TheCaseForSemantics-basedMethodsInReverseEngineering\n* https://archive.org/details/ApplyingTaintAnalysisAndTheoremProvingToExploitDevelopment-SeanHeelan\n* https://air.mozilla.org/verification-history/\n* http://vimeo.com/75326415\n\n## Model Checkers \n* http://nusmv.fbk.eu/ \n* http://www.cprover.org/cbmc/\n* http://mtc.epfl.ch/software-tools/blast/index-epfl.php\n* http://research.microsoft.com/en-us/projects/slam/\n* https://bitbucket.org/arieg/ufo/wiki/Home\n* http://www.cprover.org/boom/\n\n## Reasoning About Finite-state and Pushdown Automata\n* http://research.cs.wisc.edu/wpis/papers/CAV05-tool-demo.pdf\n* http://www.cs.binghamton.edu/~dima/hpca13.pdf\n* http://www2.informatik.uni-stuttgart.de/fmi/szs/tools/moped/\n* http://www2.informatik.uni-stuttgart.de/fmi/szs/tools/wpds/\n* http://research.cs.wisc.edu/wpis/wpds/opennwa-index.php\n* http://rise4fun.com/rex\n* http://www.cs.bham.ac.uk/~hxt/research/rxxr.shtml\n\n## Debuggers\n* https://bitbucket.org/khooyp/expositor \n* http://www.eresi-project.org/\n* http://redmine.corelan.be/projects/mona\n* https://github.com/BinaryAnalysisPlatform/qira\n\n## Interactive Theorem Provers\n* http://research.microsoft.com/en-us/um/people/akenn/coq/LOLA2012.pdf\n* http://research.microsoft.com/en-us/um/people/nick/coqasm.pdf\n* http://research.microsoft.com/en-us/um/people/akenn/coq/HLSL.pdf\n* http://dream.inf.ed.ac.uk/\n* http://www.cs.chalmers.se/%7Ehallgren/Alfa/\n* http://coq.inria.fr/\n* http://www.dcs.ed.ac.uk/home/lego\n* http://wiki.portal.chalmers.se/agda/pmwiki.php\n* http://www.comlab.ox.ac.uk/archive/formal-methods/hol.html\n* http://www.cl.cam.ac.uk/Research/HVG/Isabelle/\n* http://www.csl.sri.com/pvs.html\n* http://mizar.org/\n* http://www.lama.univ-savoie.fr/sitelama/Membres/pages_web/RAFFALLI/af2.html\n* http://cvs.metaprl.org:12000/metaprl/\n* http://www.cs.ru.nl/~janz/yarrow/\n\n## Control Flow Integrity\n* A Retargettable CFI implementation in LLVM. Authors: Joseph Battaglia and Oulin Yao\n - https://github.com/dbrumley/recfi\n* BinCFI: Control Flow Integrity for COTS Binaries \n - http://www.seclab.cs.sunysb.edu/seclab/bincfi/\n* https://www.usenix.org/conference/usenixsecurity13/technical-sessions/presentation/Zhang\n* http://lenx.100871.net/papers/FPGate-bluehat.pdf\n* http://lists.cs.uiuc.edu/pipermail/llvmdev/2014-February/070210.html\n* Enforcing Forward-Edge Control-Flow Integrity in GCC & LLVM by Caroline Tice, Tom Roeder, Peter Collingbourne, Stephen Checkoway, Ulfar Erlingsson, Luis Lozano, and Geoff Pike - https://www.usenix.org/system/files/conference/usenixsecurity14/sec14-paper-tice.pdf\n* Control-Flow Integrity Principles, Implementations, and Applications - http://research.microsoft.com/pubs/69217/ccs05-cfi.pdf\n\n\n## C Code / C++ Code (Need to split these at some point) \n* http://why3.lri.fr/\n* http://pp.ipd.kit.edu/firm/\n* https://code.google.com/p/tanalysis/\n* http://frama-c.com/\n* http://goto.ucsd.edu/~rjhala/papers/liquid_types.html\n* http://www.cs.umd.edu/~jfoster/cqual/\n* http://sourceforge.net/projects/cil/\n* https://github.com/kframework/c-semantics\n* http://sixgill.org\n* https://bitbucket.org/khooyp/otter \n* http://boogie.codeplex.com/\n* https://github.com/jirislaby/stanse\n* https://github.com/dsw/oink-stack/\n* http://delta.tigris.org/\n* http://embed.cs.utah.edu/csmith/\n* http://css.csail.mit.edu/stack/\n* http://embed.cs.utah.edu/creduce/\n\n## Quantitative Analysis\n* Daikon detects likely program invariants - http://plse.cs.washington.edu/daikon/\n* DIG: A Dynamic Invariant Generator for Polynomial and Array Invariants - https://bitbucket.org/nguyenthanhvuh/dig/src\n* http://www.prismmodelchecker.org/\n* http://software.imdea.org/projects/cacheaudit/\n* http://www-verimag.imag.fr/~tripakis/openkronos.html\n* http://turnersr.github.io/measurements/properties.html\n\n## Assisted Exploit Engineering\n### Return-oriented Programming\n* http://users.ece.cmu.edu/~ejschwar/papers/usenix11.pdf\n* https://github.com/programa-stic/ropc-llvm\n* https://github.com/pakt/ropc\n* https://github.com/JonathanSalwan/ROPgadget\n* https://github.com/0vercl0k/rp\n* https://github.com/trailofbits/bisc\n* Blind Return Oriented Programming (BROP) - http://www.scs.stanford.edu/~sorbo/brop/\n\n## Random Testing (Fuzzing) \n* http://embed.cs.utah.edu/csmith/\n* https://code.google.com/p/american-fuzzy-lop/\n* https://bitbucket.org/blackaura/browserfuzz\n\n## Dynamic Analysis is an interpretation of the static semantics\n* https://github.com/mrmee/heaper\n* https://github.com/neuroo/runtime-tracer\n* https://github.com/CTSRD-SOAAP/taintgrind\n* https://minemu.org/mediawiki/index.php?title=Main_Page\n* https://github.com/neuroo/runtime-tracer\n* https://github.com/wirepair/IDAPinLogger\n\n### To be categorized \n* https://github.com/pdasilva/vtrace_scripts\n* https://github.com/rapid7/metasploit-framework/tree/master/external/source/byakugan\n* https://code.google.com/p/narly/\n* https://code.google.com/p/viscope/\n* https://github.com/isislab/Catfish\n* https://github.com/aaronportnoy/toolbag\n* http://www.rise4fun.com/\n* Apimonitor http://www.rohitab.com/apimonitor\n* efl32mod http://deroko.phearless.org/rce.html\n* Insight http://www.bttr-software.de/products/insight/\n* Malwasm https://code.google.com/p/malwasm/\n* pev http://pev.sourceforge.net/\n* mona.py http://redmine.corelan.be/projects/mona\n* http://mlsec.org/\n\n## Disassemblers & Debuggers\n## x86 only\n* Ollydbg http://www.ollydbg.de/\n* Immunity Debugger https://www.immunityinc.com/products-immdbg.shtml\n* Syser http://www.sysersoft.com/\n* GDB for Windows http://www.equation.com/servlet/equation.cmd?fa=gdb\n\n## x64\n* FDBG http://fdbg.x86asm.net/\n* Nanomite https://github.com/zer0fl4g/Nanomite\n* x64_dbg https://bitbucket.org/mrexodia/x64_dbg\n* ArkDasm http://www.arkdasm.com/\n* VirtDbg https://code.google.com/p/virtdbg/\n* BugDbg http://pespin.w.interia.pl/\n* MDebug http://www.mdebug.org/\n* Visual DuxDebugger http://www.duxcore.com/index.php/prod/visual-duxdebugger/overview\n* PEBrowseDbg64 Interactive http://www.smidgeonsoft.prohosting.com/pebrowse-pro-interactive-debugger.\n\n## Multi-Architecture\n* IDA Pro https://www.hex-rays.com/products/ida/\n* Hopper http://www.hopperapp.com/\n* radare http://radare.org\n* GUI: Bokken http://inguma.eu/projects/bokken\n* VDB http://visi.kenshoto.com/viki/Vdb\n* Frida https://github.com/frida\n* Online Disassembler (ODA) http://www.onlinedisassembler.com/odaweb/\n\n\n## Java\n* Procyon https://bitbucket.org/mstrobel/procyon\n* SecureTeam Java Decompiler http://www.secureteam.net/Java-Decompiler.aspx\n* Luyten https://github.com/deathmarine/Luyten\n* Krakatau Bytecode Tools https://github.com/Storyyeller/Krakatau\n* DJ Java Decompiler http://www.neshkov.com/\n* reJ http://rejava.sourceforge.net/\n* JSwat https://code.google.com/p/jswat/\n* Dr. Garbage Tools http://www.drgarbage.com/index.html\n* JD-GUI http://jd.benow.ca/ \n* JAD http://en.wikipedia.org/wiki/JAD_(JAva_Decompiler)\n* dirtyJOE http://dirty-joe.com/\n\n\n## Type and Data Structure Recovering\n* Struct Builder: Tool commonly used in game hacking to reverse data structures. This tool is closed source. - http://www.mpcforum.com/showthread.php?128430-Release-StructBuild\n\n\n## Miscellaneous Tools\n## Binary Manipulation Frameworks\n\n## Deobfuscation/Unpacking\n* PROTECTiON iD: Detects most common application protectors. This tool is closed source. - http://pid.gamecopyworld.com/\n\n\n## Cryptography\n\n## Visualization\n* http://www2.in.tum.de/votum\n* http://worrydream.com/MediaForThinkingTheUnthinkable/\n* Cantor Dust - http://www.youtube.com/watch?v=4bM3Gut1hIk\n* GraphDice: A System for Exploring Multivariate Social Networks - http://www.aviz.fr/graphdice/\n* Gephi: Open Source Graph Visualization Platform - https://gephi.org/\n\n## Anti-Debugging / Anti-Reversing\n\n# Acknowledgements\n* https://events.ccc.de/congress/2013/wiki/Session:Binary_Analysis\n* http://www.reddit.com/r/ReverseEngineering/comments/1pvqv5/program_analysis_technology_additions_and/cd6tmor\n* Original source of list: https://github.com/REMath/literature_review\n", 
  "id": 19795519
}