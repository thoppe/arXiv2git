{
  "read_at": 1462554507, 
  "description": "Julia demo code", 
  "README.md": "\n## Simple 1D QM julia example\n\n### Introduction\n\nThe file qmbs1d.jl contains a short program to numerically calculate the bound state energies \nof a quantum particle experiencing the potential V(x) in an infinite well. The potential \nfunction V(x) need not to be known analytically, but for some potentials exact solutions are \nknown, e.g. for the harmonic potential centered in the well. In this case there is a close to \nperfect agreement between the results of the analytical and numerical results validating the \ncode and its execution. \n\nIn the code we used anonymous functions to define the basis set, unicode character in function\ndefinitions, and the simple macro interface to parallel and distributed tasks for \nworkload distribution on many-core and multi-node setups. \n\n\n### Howto run \n\nInstall julia on your local laptop, or install docker and pull the julia container \ndocker.io/julia/julia:0.4.1, or just login and use http://juliabox.org. Then just \nrun  \n\n```\njulia -p<number of cores> qmbs1d.jl \n```\n## \n\nThe julia language already contains the needed linear algebra diagonalization routines and the problem therefore \nreduces to the construction of the Hamiltonian matrix, H, with elements Hij = < i |H0 + V| j >,  which are \ncalculated by distributing the compute tasks on the available cores. \n\nFor a real and symmetric Hamiltonian only (n^2+n)/2 components need to be calculated and then mirror the remaining elements across the matrix diagonal. \n\nFor more details, e.g. see [Am. J. Phys. 77, 253 (2009)](http://scitation.aip.org/content/aapt/journal/ajp/77/3/10.1119/1.3042207), (http://arxiv.org/pdf/0806.3051) \n\n", 
  "id": 47085595
}