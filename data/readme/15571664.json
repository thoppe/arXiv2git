{
  "id": 15571664, 
  "read_at": 1462546960, 
  "README.rst": "########\npreprint\n########\n\n*Tools for preparing astrophysics papers.* Preprint lets you automatically compile, typeset document differences and package the manuscript for publication.\n\nInstallation requires `cliff <https://cliff.readthedocs.org/en/latest/>`_, the `watchdog <https://pypi.python.org/pypi/watchdog>`_ package, the `GitPython >=0.3 <https://pypi.python.org/pypi/GitPython/0.3.2.RC1>`_ package, and a recent version of setuptools.\nPreprint also works well with `latexmk <http://users.phys.psu.edu/~collins/software/latexmk-jcc/>`_ for compiling latex, and `vc <http://www.ctan.org/pkg/vc>`_ for adding version control meta data to compiled documents.\n\nTo install from PyPI::\n\n    pip install preprint\n\nOr to install from source, check the code out and run::\n\n    python setup.py install\n\nAfter installing, try ``preprint --help`` for more info.\n\nPreprint currently supports the following commands (see below for a reference):\n\n- ``preprint make`` to do a one-off compilation of the paper,\n- ``preprint watch`` to automatically compile the paper if source is changed,\n- ``preprint diff`` to run ``latexdiff`` against a commit in Git,\n- ``preprint pack`` to package the document for journals or the arXiv.\n- ``preprint init`` to setup your project with ``preprint.json`` configurations.\n\nCheck the `GitHub Issues <https://github.com/jonathansick/preprint/issues>`_ to submit additional ideas.\n\n===================\nA taste of preprint\n===================\n\nPreprint is pretty easy to use.\nHere's a few commands to give a flavour of what it can do::\n\n    preprint init  # this is all the setup you need\n    preprint make  # compiles the doc according to your compile command\n    preprint watch --diff 8a42f2b  # live-updating latex diff against git history\n    preprint pack my_paper --style arxiv  # pack it up for arXiv submission\n\n\n====================================\nConfiguration System / preprint.json\n====================================\n\n``preprint`` configurations are determined from (in order of increasing precedence): internal defaults, a project-specific JSON file, and command line arguments.\n\nTo create a ``preprint.json`` configuration file for your project, from your paper's directory simply run::\n\n    preprint init\n\nIt will automatically find the root latex file for your paper.\nYou can open ``preprint.json`` to take a look at its format and modify the configurations further.\nHere is an example of its format::\n\n    { \n        \"master\": \"paper.tex\",\n        \"exts\": [\"tex\", \"pdf\", \"eps\"],\n        \"cmd\": \"latexmk -f -pdf -bibtex-cond {master}\"\n    }\n\nIf set in ``preprint.json``, any command line setting of the same name does not need to repeated.\n\nList of Configurations\n----------------------\n\nmaster\n  (type: string) Name of latex document to be compiled (or the root latex document containing `\\documentclass`).\n  Defaults to ``'article.tex'``, but ``preprint init`` will set this for you.\n\nexts\n  (type: list of strings) List of file extensions used by the ``watch`` command.\n  If any file with this extension in changed in the project, a compile will be triggered by ``preprint watch``.\n  This setting is also used by ``preprint pack`` to figure out your preferences for figure file types.\n  For example, ``[\"tex\", \"pdf\", \"eps\"]`` will try to include ``pdf`` figures before falling back to ``eps`` files, while ``[\"tex\", \"eps\", \"pdf\"]`` will have the opposite behavior.\n  Defaults to ``[\"tex\", \"pdf\", \"eps\"]``.\n\ncmd\n  (type: string) The command to run when making a document.\n  This is used by ``preprint make`` and ``preprint watch`` (``preprint diff`` and ``preprint watch --diff`` will always use latexmk).\n  The command string can include ``{master}`` to interpolate the path of the master tex file.\n  Defaults to ``\"latexmk -f -pdf -bibtex-cond {master}\"``.\n\n=================\nCommand Reference\n=================\n\ninit\n----\n\n``preprint init`` will create a default ``preprint.json`` configuration file for your project.\n\nUsage::\n\n    preprint init\n\nAfter running, take a look at ``preprint.json`` to edit the configurations.\nSee *'Configuration System / preprint.json'* (above) for more information.\n\nmake\n----\n\n``preprint make`` will perform a one-off compilation of your paper.\n\nUsage::\n\n    preprint [--master MASTER] make [--cmd CMD]\n\n    Optional arguments:\n    --master   Name of the root LaTeX file (eg, paper.tex)\n    --cmd      Name of command to run when a change occurs\n\n\nIf ``preprint.json`` is setup, you can just run::\n\n    preprint make\n\n\nwatch\n-----\n\n``preprint watch`` will automatically compile your paper if a TeX or graphics source file is changed.\n\nUsage::\n\n    preprint [--master MASTER] watch [--exts EXT1, ..., EXTN; --cmd CMD; --diff [SHA]]\n\n    Optional arguments:\n    --master   Name of the root LaTeX file (eg, paper.tex)\n    --exts     List of file extensions (defaults to `pdf eps tex`)\n    --cmd      Name of command to run when a change occurs\n    --diff     Run a latexdiff compile against the given commit SHA from the git repository (HEAD if blank).\n\nFor example, to continuously compile the document whenever ``.tex`` or figures have changed, and assuming you've setup a ``preprint.json`` file with the name of your master document, just run::\n\n    preprint watch\n\nTo continuously run a latexdiff-based compile, showing all changes you've made against the HEAD of the git repository, run::\n\n    preprint watch --diff\n\nThe document will be saved to ``build/PAPER_NAME_diff.pdf``.\nThis is a nice way of keeping track of what you're doing.\n\nFinally, to continuously run a latexdiff-based compile against an arbitrary commit in your git history, just copy the commit SHA fragment (say, ``b91688d``) and run::\n\n    preprint watch --diff b91688d\n\n\ndiff\n----\n\n``preprint diff`` will typeset the document with revisions highlighted between the currently checked-out version, and a previous git commit.\nThis command is powered by the `latexdiff <http://latexdiff.berlios.de>`_ (which is probably installed with your tex distribution).\nThe command also requires `latexmk <http://users.phys.psu.edu/~collins/software/latexmk-jcc/>`_ to compile the difference document.\nThis command is compatible with documents that use ``\\input{}`` to combine text documents; in fact, included documents are inlined recursively.\n``preprint diff`` was inspired by `this blog post <http://astrowizici.st/blog/2013/10/04/publishing-with-git/>`_ by Andy Casey.\n\nUsage::\n\n    preprint [--master MASTER] diff PREV_SHA [-n NAME]\n\n    Arguments:\n    PREV_SHA   A SHA fragment or tag name pointing to the previous revision.\n\n    Optional arguments:\n    --master   Name of the root LaTeX file (eg, paper.tex)\n    -n         Output name of the difference document (eg. diff.tex)\n\n\npack\n----\n\n``preprint pack`` prepares a preprint for submission to a journal.\nThis pipeline includes:\n\n1. Creating a build directory and copying over just the required manuscript files,\n2. Inlining all inputted latex files (either with ``\\input{}`` or ``\\InputIfFileExists`` syntax),\n3. Copying the ``.bbl`` bibliography or inlining it into the manuscript, as necessary.\n4. Moving figures to the root directory and updating tex source,\n5. Deleting comments; don't be a tweet on @OverheardOnAph,\n6. Renaming figures to conform to AASTeX if necessary,\n7. Making JPEG versions of figures to to fulfill arXiv file size requirements, if necessary. This requires `imagemagick <http://www.imagemagick.org/script/index.php>`_.\n\nThis command is inspired by Erik Tollerud's `Astropysics package <http://pythonhosted.org/Astropysics/coremods/publication.html>`_, but is designed around regular expressions for text transformation.\nThe implementation should thus be easier.\n\nUsage::\n\n    preprint [--master MASTER] pack NAME [--style STYLE; --exts EXT1, ..., EXTN]\n\n    Arguments:\n    NAME   Name of the build. Products copied to build/NAME directory.\n\n    Optional arguments:\n    --master   Name of the root LaTeX file (eg, paper.tex)\n    --exts     File format priority for figures (e.g., ``eps, pdf``)\n    --style    Style for the build (default is ``aastex``, can also be ``arxiv``).\n    --maxsize  Maximum size of figure in MB before compressing into jpg (for\n               ``arxiv``). Default is 2.5 MB.\n\nNote that the ``--exts`` option can be used to prefer a certain file format for the build if you maintain both EPS and PDF figure sets.\nFor example, to generate a manuscript for a AAS journal, run::\n\n    preprint pack my_aas_build --style aastex --exts eps\n\nAnd to build for the arxiv, where PDF figures are preferred, run::\n\n    preprint pack my_arxiv_build --style arxiv --exts pdf\n\n=====\nAbout\n=====\n\n`Preprint is developed on GitHub <https://github.com/jonathansick/preprint>`_.\nContributions and suggestions are welcome;\nread `the CONTRIBUTING guidelines <https://github.com/jonathansick/preprint/blob/master/CONTRIBUTING.md>`_ for instructions on how to help.\n\nCopyright 2014 Jonathan Sick, @jonathansick\n\nLicensed BSD.\n", 
  "description": "Tools for preparing astrophysics manuscripts"
}