{
  "read_at": 1462558938, 
  "description": "Quantum Monte Carlo for bosons based on the Stochastic Green Function Algorithm", 
  "README.md": "# QMCSGF #\n\n## Quantum Monte Carlo for bosons based on the Stochastic Green Function Algorithm.\n\n### &copy; 2015 Dimitrios Galanakis \n\nThis program is an implementation of the Stochastic Green Function algorithm for the simulation of Bosonic Hamiltonians. \nThe Stochastic Green Function (SGF) algorithm is able to simulate any Hamiltonian that does not suffer from the so-called \"sign problem\".\n\nFor more information of the specific implementation you can read \nhttp://lanl.arxiv.org/pdf/1209.0946.pdf\nwhich is also found under doc/1209.0946.pdf.\n\n### Compilation\n\nThe easiest way to compile the program is to use ruby's rake and the included rakefile.\nIf rake is not available you can try to edit the following line:\n\n    clang++ -Ofast -std=c++11 -Wall  -Isource -Isource/QMCEngine -Isource/Library  source/qmcsgf.cpp -o qmcsgf\n\nThis will compile the program with minimal (but sufficient) options.\n\n### Compilation options\n\nThe rake file contains a list of tasks which implement configuration options. It is possible to compile in a different random number generator and also include MPI support and enable debugging options and compiler warnings. \n\n    rake -T\nshows all possible tasks. Consult the rake file more more options. A few examples about how to invoke rake\n\n    rake icc\n\nwill compile using the Intel Compiler for a release. This is also the default task.\n\n    rake gcc debug\n\nwill compile using g++ for test (it will include debugging options).\n\n    rake clang rng_well mkl debug\n\nwill compile a minimal executable using clang, it will use the WELL random number generator and include debug options.\n\n### Execution\nOnce the program is compiled it can be run as\n\n    ./qmcsgf Input.json > Output.yaml\n\nInput.json is a JSON formated file which contains running parameters which define the model, the running parameters the the desired types of measurements.\nThe program returns a YAML formated output which includes the input parameters and the results of the measurements. \n\nA few examples for the input files are included under the Test directory.\n\nNote that during execution the program will print a progress bar in stderr. If you want to suppress it you can just redirect it to /dev/null: \n\n    ./qmcsgf Input.json 2>/dev/null > Output.yaml\n\n\n### Copying\n&copy; 2015 Dimitrios Galanakis\n\nQMCSGF is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation version 3.\n\nQMCSGF is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with QMCSGF.  If not, see <http://www.gnu.org/licenses/>.\n", 
  "id": 36230612
}