{
  "read_at": 1462552846, 
  "description": "Embeddable Javascript widgets based on computational geometry objects.", 
  "README.md": "# geom-widgets\nEmbeddable Javascript widgets based on computational geometry ideas. They are:\n\n\n### Deep Point Sets. \nA _deep point set_ is a set of n points in the plane such that \nthe n(n-1)/2 distances between them have n-1 distinct distances with \none distance occurring 1 time, one distance occuring 2 times, etc. up to n-1 times[1].\n\nErdos asked whether deep point sets of size n for all positive n exist[2].  \nPrior work proved the existence of deep point sets of size up to 8, \nwith a deep point set of size 8 given by Palasti[3]. Most of the larger\nexamples found consist of points placed on a small triangular lattice.\n\nThis widget allows the user to arrange points on a triangular lattice to experiment\nwith the discovery and creation of deep point sets. Most exciting is the possibility of \nfinding a new example of 9 or more points, advancing the state of the art on this problem. \n\n[1] The points must also be in _general position_: no three collinear and no four cocircular.\n\n[2] The answer is easily seen to be \"yes\" if the requirement of general position is dropped.\n\n[3] I. Palasti, \"Lattice-point examples for a question of Erdos\", \n    Periodica Mathematica Hungarica, 20(3), 231--235, 1989.\n\n\n### Minimum Spanning Tree. \nThe _minimum spanning tree (MST)_ of a set of points is the \ngraph connecting the points together with least total edge (Euclidean) length.[1]\nThis graph is easily seen to be a tree and can be constructed greedily by \nrepeatedly taking the shortest edge that does not form a cycle. \n\nThis widget maintains the MST of a point set that the user can dynamically change.\n\n[1] https://en.wikipedia.org/wiki/Euclidean_minimum_spanning_tree \n\n\n### Spanners \nGiven a set of points, the _complete (Euclidean directed) geometric graph_ \nconsists of an edge connecting each pair of points, weighted by the \nEuclidean distance between them.\n\nThe _Yao-6 graph_[1] is a subgraph of the complete geometric graph, where the angle\naround each point is partitioned into 6 60-degree wedges and is connected \nto the closest point in each wedge via a directed edge from the point.\nSimilarly, the _YaoYao-6 graph_ is a a subgraph of the Yao-6 graph, where a point\nmay only have a single incoming edge per wedge.\n\nSimilar graphs that use other criteria for selecting the point in each wedge \nhave also been studied. For instance, the _Theta-6 graph_[2] selects the closest\npoint in the direction of the wedge's bisector. As with te YaoYao-6 graph, the \n_Theta-Theta-6_ graph is a restriction of the Theta-6 graph where only the incoming\nedge from the \"closest\" (in the bisection direction) point is kept.\n\nPrior work has studied whether YaoYao-k and Theta-Theta-k graphs for certain values\nof k are _spanners_: the distance in the graph between two points is always at most some \nfixed constant factor larger than the Euclidean distance between the points.\nIf so, the _spanning ratio_ is an upper bound on this factor.\nSee [3] for a summary of known results on the spanning properties of these graphs, \nincluding the following:\n* Theta-6 graphs have a spanning ratio of 2.\n* It is open whether Theta-Theta-6 graphs are spanners.\n* Yao-Yao-6 graphs are not spanners. \n\nThis widget maintains the Theta-6, Theta-Theta-6, and Yao-Yao-6 graphs of a set\nof points that the user maintains. Intuition about these complex graphs can be gained, \nand there is the possibility of resolving the open problem of whether Theta-Theta-6 graphs \nare spanners by construction of a family of counterexamples.\n\n[1] https://en.wikipedia.org/wiki/Yao_graph\n\n[2] https://en.wikipedia.org/wiki/Theta_graph\n\n[3] M. Damian, D. V. Voicu, \"Spanning properties of Theta-Theta Graphs\", \n    available on arXiv: http://arxiv.org/abs/1407.3507\n\n\n", 
  "id": 49908502
}