{
  "README.Rmd": "---\ntitle: \"olpsR\"\nauthor: \"ngloe\"\ndate: \"17.03.2015\"\noutput: \n  md_document:\n    variant: markdown_github\nbibliography: olpsR.bib\n---\n\n# olpsR  -  On-line Portfolio Selection with R\nThe olpsR package provides different On-line Portfolio Selection algorithms\nand functions to deal with the on-line portfolio selection problem where a portfolio is rebalanced in every period to achieve certain goals, e.g. maximizing terminal wealth. Datasets to test portfolio selection algorithms are also included.   \n\nFor a background on On-line Portfolio Selection see for example [@LH14; <http://arxiv.org/pdf/1212.2129.pdf>]. \n\n## Features\n#### On-Line Portfolio Selection algorithms:\n* Buy-and-Hold\n* Buy-and-Hold best\n* Constant Rebalanced Portfolio\n* Best Constant Rebalanced Portfolio\n* Universal Portfolio [@Cov91]\n* Exponential Gradient [@HSS98]\n* Successive Constant Rebalanced Portfolio [@GS00]\n* Anticor [@BEG04]\n* Passive Aggressive Mean Reversion [@LZH12]\n* Confidence Weighted Mean Reversion [@LHZ13]\n* Volatility Timing [@KO12]\n\n#### Functions:\n* transform asset prices into returns (price relatuives)\n* transform returns (price relatuives) into asset prices\n* calculate portfolio wealth of rebalanced portfolios\n* transform a sequence of price relatives into a Kelly market sequence\n* projection onto a simplex\n* ...\n\n#### Datasets:\nNYSE, DJIA, SP500, TSE, DAX \n\n\n## Installation\nTo install the olpsR package run:\n```{r eval=FALSE}\nif (!require(\"devtools\")) install.packages(\"devtools\")\ndevtools::install_github(\"ngloe/olpsR\")\n```\n\n## Getting started\nOnce installed, the package can be loaded using:\n```{r eval=FALSE}\nlibrary(olpsR)\n```\n\nTo test portfolio selection algorithms some return data is loaded using the NYSE dataset. We select two assets, *kinar* and *iroqu*:\n```{r eval=TRUE, echo=FALSE}\nlibrary(olpsR)\n```\n```{r eval=TRUE, echo=TRUE}\ndata(NYSE)\nx = cbind(kinar=NYSE$kinar, iroqu=NYSE$iroqu)\n```\n\nAlgorithms can be computed by applying *alg_ALG* on the selected data where *ALG* is the desired algorithm. For example, to approximate the *Universal Portfolio* algorithm (UP) type:\n```{r eval=TRUE}\nUP = alg_UP(x); UP\n```\nAccessing UP then returns a short summary of the algorithm's output. To access the calculated portfolio wealth or the portfolio weights you can type:\n```{r eval=FALSE}\nUP$Wealth\nUP$Weights\n```\nThe achieved portfolio wealth (performance) can be plotted by:\n```{r eval=FALSE}\nplot(UP)\n```\nTo easily compare different algorithms pass them to the plot function:\n```{r eval=TRUE}\nBH_Market = alg_BH( x, weights=c(0.5, 0.5) )\nBH_best   = alg_BHbest(x)\nplot(BH_Market, BH_best, UP)\n```\n\n\n## Getting Help\nFor more details and an overview of the implemented algorithms and functions please refer to the package help by typing:\n```{r eval=FALSE}\nhelp(package=\"olpsR\")\n```\n\n\n## References\n", 
  "read_at": 1462544804, 
  "description": "Functions and algorithms for On-line Portfolio Selection with R", 
  "README.md": "olpsR - On-line Portfolio Selection with R\n==========================================\n\nThe olpsR package provides different On-line Portfolio Selection algorithms and functions to deal with the on-line portfolio selection problem where a portfolio is rebalanced in every period to achieve certain goals, e.g. maximizing terminal wealth. Datasets to test portfolio selection algorithms are also included.\n\nFor a background on On-line Portfolio Selection see for example [Li and Hoi (2014); <http://arxiv.org/pdf/1212.2129.pdf>].\n\nFeatures\n--------\n\n#### On-Line Portfolio Selection algorithms:\n\n-   Buy-and-Hold\n-   Buy-and-Hold best\n-   Constant Rebalanced Portfolio\n-   Best Constant Rebalanced Portfolio\n-   Universal Portfolio (Cover 1991)\n-   Exponential Gradient (Helmbold et al. 1998)\n-   Successive Constant Rebalanced Portfolio (Gaivoronski and Stella 2000)\n-   Anticor (Borodin, El-Yaniv, and Gogan 2004)\n-   Passive Aggressive Mean Reversion (Li et al. 2012)\n-   Confidence Weighted Mean Reversion (Li et al. 2013)\n-   Volatility Timing (Kirby and Ostdiek 2012)\n\n#### Functions:\n\n-   transform asset prices into returns (price relatuives)\n-   transform returns (price relatuives) into asset prices\n-   calculate portfolio wealth of rebalanced portfolios\n-   transform a sequence of price relatives into a Kelly market sequence\n-   projection onto a simplex\n-   ...\n\n#### Datasets:\n\nNYSE, DJIA, SP500, TSE, DAX\n\nInstallation\n------------\n\nTo install the olpsR package run:\n\n``` r\nif (!require(\"devtools\")) install.packages(\"devtools\")\ndevtools::install_github(\"ngloe/olpsR\")\n```\n\nGetting started\n---------------\n\nOnce installed, the package can be loaded using:\n\n``` r\nlibrary(olpsR)\n```\n\nTo test portfolio selection algorithms some return data is loaded using the NYSE dataset. We select two assets, *kinar* and *iroqu*:\n\n``` r\ndata(NYSE)\nx = cbind(kinar=NYSE$kinar, iroqu=NYSE$iroqu)\n```\n\nAlgorithms can be computed by applying *alg\\_ALG* on the selected data where *ALG* is the desired algorithm. For example, to approximate the *Universal Portfolio* algorithm (UP) type:\n\n``` r\nUP = alg_UP(x); UP\n```\n\n    ## SUMMARY:\n    ## --------\n    ##   Algorithm   UP \n    ##   Assets      kinar iroqu \n    ## \n    ##   Terminal Wealth   40.514 \n    ## \n    ##   Return [%]   28.769              APY [%]   17.944 \n    ##   Risk   [%]   49.758              MDD [%]   82.857 \n    ## --------\n\nAccessing UP then returns a short summary of the algorithm's output. To access the calculated portfolio wealth or the portfolio weights you can type:\n\n``` r\nUP$Wealth\nUP$Weights\n```\n\nThe achieved portfolio wealth (performance) can be plotted by:\n\n``` r\nplot(UP)\n```\n\nTo easily compare different algorithms pass them to the plot function:\n\n``` r\nBH_Market = alg_BH( x, weights=c(0.5, 0.5) )\nBH_best   = alg_BHbest(x)\nplot(BH_Market, BH_best, UP)\n```\n\n![](README_files/figure-markdown_github/unnamed-chunk-8-1.png)\n\nGetting Help\n------------\n\nFor more details and an overview of the implemented algorithms and functions please refer to the package help by typing:\n\n``` r\nhelp(package=\"olpsR\")\n```\n\nReferences\n----------\n\nBorodin, Allan, Ran El-Yaniv, and Vincent Gogan. 2004. \"Can We Learn to Beat the Best Stock.\" *Journal of Artificial Intelligence Research* 21 (1). USA: AI Access Foundation: 579-94. <http://www.jair.org/papers/paper1336.html>.\n\nCover, Thomas M. 1991. \"Universal Portfolios.\" *Mathematical Finance* 1 (1). Blackwell Publishing Ltd: 1-29. doi:[10.1111/j.1467-9965.1991.tb00002.x](http://dx.doi.org/10.1111/j.1467-9965.1991.tb00002.x).\n\nGaivoronski, Alexei A., and Fabio Stella. 2000. \"Stochastic Nonstationary Optimization for Finding Universal Portfolios.\" *Annals of Operations Research* 100 (1-4). Kluwer Academic Publishers: 165-88. doi:[10.1023/A:1019271201970](http://dx.doi.org/10.1023/A:1019271201970).\n\nHelmbold, David P., Robert E. Schapire, Yoram Singer, and Manfred K. Warmuth. 1998. \"On-Line Portfolio Selection Using Multiplicative Updates.\" *Mathematical Finance* 8 (4). Blackwell Publishers Inc: 325-47. doi:[10.1111/1467-9965.00058](http://dx.doi.org/10.1111/1467-9965.00058).\n\nKirby, Chris, and Barbara Ostdiek. 2012. \"It's All in the Timing: Simple Active Portfolio Strategies That Outperform Naive Diversification.\" *Journal of Financial and Quantitative Analysis* 47 (02): 437-67. doi:[10.1017/S0022109012000117](http://dx.doi.org/10.1017/S0022109012000117).\n\nLi, Bin, and Steven C. H. Hoi. 2014. \"Online Portfolio Selection: A Survey.\" *ACM Comput. Surv.* 46 (3). New York, NY, USA: ACM: 35:1-35:36. doi:[10.1145/2512962](http://dx.doi.org/10.1145/2512962).\n\nLi, Bin, Steven C. H. Hoi, Peilin Zhao, and Vivekanand Gopalkrishnan. 2013. \"Confidence Weighted Mean Reversion Strategy for Online Portfolio Selection.\" *ACM Trans. Knowl. Discov. Data* 7 (1). New York, NY, USA: ACM: 4:1-4:38. doi:[10.1145/2435209.2435213](http://dx.doi.org/10.1145/2435209.2435213).\n\nLi, Bin, Peilin Zhao, Steven C. H. Hoi, and Vivekanand Gopalkrishnan. 2012. \"PAMR: Passive Aggressive Mean Reversion Strategy for Portfolio Selection.\" *Machine Learning* 87 (2). Springer US: 221-58. doi:[10.1007/s10994-012-5281-z](http://dx.doi.org/10.1007/s10994-012-5281-z).\n", 
  "id": 32375966
}