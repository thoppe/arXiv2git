{
  "read_at": 1462557691, 
  "description": "A CUDA-C implementation of FOFE and FSMN", 
  "README.md": "# iNCML-DNNLM\nA CUDA-C implementation of FOFE and FSMN\n\n================================================================================\n\nFor technical details on:\n\ni) FOFE: refer to\n\n[1] S. Zhang, H. Jiang, M. Xu, J. Hou, L. Dai, \"The Fixed-Size Ordinally-Forgetting Encoding Method for Neural Network Language Models,\" Proc. of Annual Meeting of the Association for Computational Linguistics (ACL 2015), July 2015.  (http://anthology.aclweb.org/P/P15/P15-2081.pdf)\n\nii) FSMN: refer to\n\n[2] S. Zhang, H. Jiang, S. Wei, L. Dai, \"Feedforward Sequential Memory Neural Networks without Recurrent Feedback,\" arXiv:1510.02693. (http://arxiv.org/abs/1510.02693)\n\n[3] S. Zhang, C. Liu, H. Jiang, S. Wei, L. Dai and Y. Hu, \"Feedforward Sequential Memory Networks: A New Structure to Learn Long-term Dependency,\" arXiv:1512.08301. (http://arxiv.org/abs/1512.08301)\n\n\n================================================================================\n\nAll files must following the naming convention of basename.{extension}. \nExamples are shown with PTB (Penn TreeBank) which is shipped with the code.\nThat is, the basename in the provided example is ptb.\n\nThe following sub-directory of the current directory is assumed:\n\n\n1. config -- containing user-defined configuration file \n\t\n\tAn example of ptb's configration is in config. Each line describes a\n\tlayer of the neural network. The first token is surrounded with angel \n\tbrackets. The rest are (option, parameter) pairs. See \n\t./source/network.cpp for details of what options are supported.\n\n2. log -- containing execution logging\n\n\tIt's strongly recommended to put the logging here and name them according\n\tto the configuration name, e.g. ptb.config.log\n\n3. numeric-data\n\n  \tThe numeric data set returned by \"numericize\". It will be the input\n  \tto \"trainer\". The naming must follow\n        basename.{train, valid, test}.numeric. For PTB, there should be \n        ptb.train.numeric, ptb.valid.numeric and ptb.test.numeric\n\n4. raw-data\n\n   \tEach file is a text file, one sentence per line. The naming must follow\n        basename.{train, valid, test}.txt. For PTB, there should be \n        ptb.train.txt, ptb.valid.txt and ptb.test.txt\n\n5. source\n\n\tbatch-constructor.cpp  \n\tbatch-constructor.h    \n\tlayer.h \n\tlayer.cpp   \n\tmatrix.h   \n\tmatrix.cu      \n\tnetwork.h     \n\tnetwork.cpp    \n\tstacktrace.h  \n\tnumericize.cpp  \n\ttrainer.cpp           \n\tvocabulary.cpp     \n\tevaluator.cpp  \n\n6. model-archive\n\n\tDuring training, for example, ptb.config.epoch{i}, the model at the \n\tbeginning of the ith epoch is dumped on the disk. It's named with the \n\tconfiguration file, followed by \".epoch{i}\".\n\n\n\n================================================================================\n\nUsing PTB as example:\n\n1. compose your own network configuration and save it in ./config/ptb.config\n\n2. run \"prepare.sh ptb 1 10001\"\n\n3. run \"trainer ptb.config ptb 0.4096 256 2 | tee log/ptb.config.log\"\n\n    learning-rate  0.4096    \n    mini-batch     256    \n    context window 2    \n\n\n", 
  "id": 51028017
}