{
  "read_at": 1462553638, 
  "description": "MATLAB implementation of the time-dependent AMEn algorithm in the tensor train format with the cell array storage.", 
  "README.md": "tAMEn\n=======\n\nTime-dependent AMEn algorithm for solution of the ordinary differential equations\nin the tensor train format.\nSee the paper \"Alternating minimal energy approach to ODEs and \nconservation laws in tensor product formats\", [[arXiv:1403.8085](http://arxiv.org/abs/1403.8085)].\n\n\nContents\n-----\n `tamen.m`          Algorithm 1 (tAMEn) from the above paper, time-dependent propagator in the TT format.\n\n `amen_solve.m`     AMEn for the linear system solution in the TT format. \n                  See [[arXiv:1304.1222](http://arxiv.org/abs/1304.1222)], [[arXiv:1301.6068](http://arxiv.org/abs/1301.6068)], and also \n                  [[TT-Toolbox/amen_solve2](http://github.com/oseledets/TT-Toolbox/blob/master/solve/amen_solve2.m)]\n\n `ttdR.m`           An Introduction to the {d,R} cell array storage of tensor trains and tensor chains.\n\n `test_conv.m`      Test file for the convection example (small space and time grids), TT-Toolbox interface.\n\n `test_conv_cell.m` Test file for the convection example, cell array storage for compatibility.\n\n `test_lyap.m`      Test file for the Lyapunov equation, a 10000^2 Poisson problem.\n\n `amenany_sweep.m`  Technical routine with a broad range of inputs and outputs. \n                  The AMEn iteration is actually performed here.\n                  The reason for a separate file is to shorten the interface routines tamen and amen_solve\n\n `dat_conv.mat`     Precomputed TT data in cell arrays for `test_conv_cell.m`\n\t\t\n\nUsage\n-----\n\nI. Minimal variant\n 1. Download this code (using either GIT or \"Download ZIP\").\n 2. Run the MATLAB.\n 3. Change to the tamen directory.\n 4. Invoke `test_conv_cell.m` and/or `test_lyap.m`\n\nII. Maximal variant\n 1. Download the [[TT-Toolbox](http://github.com/oseledets/TT-Toolbox)] (using either GIT or \"Download ZIP\").\n 2. Download this code (using either GIT or \"Download ZIP\").\n 3. Run the MATLAB.\n 4. Change to the TT-Toolbox directory, invoke `setup.m` to initialize paths.\n 5. Change to the tamen directory.\n 6. Invoke `test_conv.m`\n\nIII. Grand maximal variant\n 1. Go through the steps in II. Maximal variant.\n 2. Compile MEX files in the TT-Toolbox.\n 3. Compare `amen_solve.m` from this code and `solve/amen_solve2.m` from the TT-Toolbox, \n    with and without MEX plug-ins in the latter.\n 4. Read `ttdR.m`.\n 5. Try to refactor `test_lyap.m` for the TT-Toolbox and run it on a laptop.\n    Feel the necessity of the {d,R} format when the MATLAB exhausts the memory.\n\n\nMore details\n-----\n\nMore specific information is located in particular .m files.\nType e.g. `help tamen` in MATLAB.\n\n", 
  "id": 18300863
}