{
  "read_at": 1462510018, 
  "description": "Fast approximate statistical tools for discovery and limits.", 
  "README.md": "# Fast Asimov Utils\n\n*Kyle Cranmer & Glen Cowan*\n\n*License LGPL v2.1 (for ROOT compatibility, happy to make it BSD for other purposes)*\n\n\nThis code quickly calculates expected discovery significance and upper limits \nbased on an expected signal `sExp`, expected background, `bExp`, and uncertainty on the \nbackground estimate, `deltaB`. In this situation, most of the problem can be done\nanalytically, and no minimization algorithms are necessary. Observed versions and \n+/- 1,2 sigma bands on the expected limit are in the works.\n\n\n### Expected Limit\n\nThe expected 95% CLs upper limit on the number of\nsignal events, `s`, given an expected background, `bExp`, and \nuncertainty on the background estimate, `deltaB`. The background uncertainty is absolute (not relative) and is uncertainty\non the mean background (so you don't include sqrt(bExp) Poisson fluctuations in this number).\n\nExample Usage: \n\n  * you expect 50 +/- 7 background events\n  * `ExpectedLimit(50,7)`\n  * returns s_95 = 19.7 events\n\n### Expected Significance\n\nSimilar code for expected discovery significance is also included.\n\nExample Usage:\n\n   * you expect 50 signal events, 100 +/- 7 background events\n   * `ExpectedSignificance(50,100,7)`\n   * returns 3.72 sigma\n\n## Details\n\nThe derivations of these formulae are based on a statistical model:\n\n\tPois(n | s+b ) * Pois(m | tau * b)\n\nThe first term is the standard \"number counting\" signal region.\nThe second term is a idealized auxiliary measurement used to \nconstrain the background resulting in some characteristic relative uncertainty.\nThe tau quantity is calculated from `tau=bExp/deltaB/deltaB`.\nSee [arXiv:physics/0702156](http://arxiv.org/abs/physics/0702156) \nfor motivation of this model.\nThe maximum likelihood estimate and conditional maximum likelihood estimate\nwere solved analytically and coded here.\nThe log-likelihood ratio and the profile log likelihood ratio follow immediately.\nThe b-only and s+b p-values needed for CLs are calculated using the \nasymptotic distributions in \n>\tCowan, Cranmer, Gross, Vitells,\tEur. Phys. J. C 71 (2011) 1554.  \n[arXiv:1007.1727](http://arxiv.org/abs/1007.1727)\n\nThe ExpectedSignificance formulae was derived by Cowan and the numerical solution \nfor the Expected upper limit was written by Cranmer as correlaries to that paper.\n\nNote, the ExpectedSignificance equation is the same as Eq.(17) of\n> Tipei Li and Yuqian Ma, Astrophysical Journal 272 (1983) 317\u2013324.\n\nand Eq.(25) of \n>  Robert D. Cousins, James T. Linnemann and Jordan Tucker, NIM A 595 (2008) 480\u2013 501; [arXiv:physics/0702156](http://arxiv.org/abs/physics/0702156).\n\nafter making the replacements `n=bExp` and `m=bExp*tau`. \n\n## Validation\n\nThis code could use more validation, but there are a series of tests that run that check against results from the mathematica notebook and the equivalent HistFactory example.\nThe HistFactory validation is in the directory `validation` and includes:\n   * A HistFactory model in xml that defines the statistical model above\n   * The top-level script `makeHists.C` that writes histograms to file `data/histograms.root` based on the values of `bExp` and `deltaB`, then runs HistFactory's `hist2workspace` + `RooStats/StandardHypoTestInvDemo.C` with the `AsymptoticCalculator` using the 1-sided profile likelihood ratio test statistic and CLs=True.\n\n\n## To Do\n\nThis is a work in progress!\n   * C++ to be updated to use Brent q root finding instead of simple scan\n   * remove ROOT dependency in C++ verison entirely?\n   * add +/- 1,2 sigma bands for the expected upper limit\n   * could do same for observed upper limit.\n   * add a Mathematica version\n\nExtension:\n   * Include uncertainty on signal efficiency for upper limit. Those equations are big! (See ExpectedLimitWithSignalUncert.nb)\n", 
  "id": 25477302
}