{
  "README": "To build OTOO test code, you need:\n\n * g++ or icpc\n * rake\n * netcdf\n * GSL\n * Eigen  : http://eigen.tuxfamily.org/index.php?title=Main_Page \n * OpenCL SDK and C++ interface\n\nWe have tested this code on Ubuntu 10.04 LTS.\nExcept Eigen and OpenCL SDK, you can install the required packages with the command such as:\n\n$ sudo aptitude install rake libnetcdf-dev gfortran g++ libgsl0-dev \n\nEigen\n\n  We have tested this code with Eigen 3.1.0-alpha2.\n\nOpenCL SDK\n  \n  We have tested this code with SDKs from AMD, Apple, Intel and Nvidia.\n  To build this code, you need \"cl.hpp\" header file.\n  It is available at http://www.khronos.org/registry/cl/\n  We have tested the code with OpenCL 1.1.\n\nGSL\n  \n  We use a random number generator in GSL for generating initial N-body models.\n--------------------------------------------------------------------------------------\nTesting\n\n0. edit \"conf.rb\" for setting the path to OpenCL SDK\n  You will need \"CL/cl.hpp\".\n\n1. build\n $ rake\n\n2. generate initial models\n $ cd NBODYMODEL/Plummer\n $ rake\n $ ./gen/zsh\n\n3. test models\n $ cd NBODYMODEL\n $ ../run Plummer/model_100.cdf 0 0\n   This tests the run with 100K particles.\n   Edit \"NBODY.conf\" for changing time duration of the run.\n\n--------------------------------------------------------------------------------------\nReference\n  http://dx.doi.org/10.1016/j.jocs.2011.01.006\n  http://arxiv.org/abs/1206.1199\n", 
  "read_at": 1462551200, 
  "description": "OcTree On OpenCL Test Code", 
  "id": 4893034
}