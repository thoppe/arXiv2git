{
  "read_at": 1462548365, 
  "description": "A Fortran Library for Quantum Information Science", 
  "readme.txt": "LibForQ: A Fortran Library for Quantum Information Science\n\nIn this library we will continuously add and improve Fortran code to perform several numerical tasks one frequently \nneeds when working in quantum information science. Among the functionalities already implemented, some examples are:\n- Trace, partial trace, and partial transpose;\n- Entanglement, discord, and coherence quantifiers;\n- Pauli group (PG), Generalized Gell Mann Matrices (GGMM), and Bloch vector and correlation matrix with GGMM;\n- Some other matrix functions are also included, some examples are:\n  > Norms, inner products, and distance and distinguishability measures;\n  > Purity, entropies, information measures, and mutual information;\n  > Some popular, and not so popular, quantum states;\n  > Array display, Ginibre and identity matrices, adjoint, Kronecker product (KP), KP of n elements of the PG,\n    Gram-Schmidt orthogonalization, projector, outer product, etc.\nI think it is better to take a look at the code and see all functions included. The variables used and needed are \nexplained there.\n\nOne can use this library simply by copying all the files to the main program folder and compiling them with:\n$ gfortran -lblas -llapack *.f90\nTo run the executable file a.out generated just use:\n$ ./a.out\n\nAnother, perhaps more convenient, manner of using the code is by creating a library. \nFor that purpose you may follow the simple steps below:\n1) Download the code\n2) Go to the associated folder\n3) Create a library with the commands:\n$ gfortran -O3 -c *.f90\nand\n$ ar cr libforq.a *.o\nTo compile your main program using this library, copy libforq.a to your program's folder and use the command: \n$ gfortran -lblas -llapack libforq.a main.f90\nEven better, you can also copy the library to your computer's libraries folder, e.g. with:\n$ sudo cp libforq.a /usr/local/lib\nand use it, anywhere in your computer, via\n$ gfortran -lblas -llapack -lforq main.f90\n\n\nREMARK: As seen above, this library depends on BLAS and Lapack. If you need random objects, see LibForro.\n\nRelated references:\n- J. Maziero, Random sampling of quantum states: A survey of methods, Braz. J. Phys. 45, 575 (2015), [arXiv:1502.03644].\n- J. Maziero, Generating pseudo-random discrete probability distributions, Braz. J. Phys. 45, 377 (2015), [arXiv:1502.02128].\n- J. Maziero, Fortran code for generating random probability vectors, unitaries, and quantum states,\n  Frontiers in ICT 3, 4 (2016).\n", 
  "id": 57159619
}