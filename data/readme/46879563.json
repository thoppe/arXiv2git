{
  "read_at": 1462554207, 
  "description": "Bidirectional Helmholtz Machines", 
  "README.md": "\nBidirectional Helmholtz Machines\n================================\n\nThis repository contains the source code and additional results for the \nexperiments described in \n\n http://arxiv.org/abs/1506.03877\n\nOverview\n--------\n\n![concept](/doc/bihm-concept.png)\n\nThe basic idea is to create a deep generative model for unsupervised learning\nby combining a top-down directed model P and a bottom up directed model Q into\na joint model P\\*. We show that we can train P\\* such that P and Q are useful\napproximate inference distributions when we want to sample from the model, or\nwhen we want to perform inference.\n\nWe generally observe that BiHMs prefer deep architectures with many layers of\nlatent variables. I.e., our best model for the binarized MNIST dataset has 12\nlayers with 300,200,100,75,50,35,30,25,20,15,10,10 binary latent units. This\nmodel reaches a test set LL of 84.8 nats.\n\n \n### Samples from the model ###\n\n![bmnist-samples](/doc/bmnist-bihm-samples000.png)\n![bmnist-samples](/doc/bmnist-bihm-samples.gif)\n\nThe left image shows 100 random samples from the top-down model P; the right\nimage shows that starting from this point and running 250 Gibbs MCMC steps to\napproximately sample from P\\* results in higher quality, crisp digits. \n(we visualize the Bernoulli probability per pixel instead of sampling from it)\n\n### Inpainting ###\n\n![bmnist-inpainting](/doc/bmnist-bihm-inpaint000.png)\n![bmnist-inpainting](/doc/bmnist-bihm-inpaint-sampled.gif)\n\nThe left image shows 10 different digits that have been partially occluded. For each digit, \nwe sample 10 different starting configurations from Q and subsequently run a Markov chain \nthat produces approx. samples from P\\* which are consistent with the initial digits.\n\n\nDependencies\n------------\n\nThis code depends on [Fuel](https://github.com/mila-udem/fuel), \n[Theano](https://github.com/Theano/Theano), [Blocks](https://github.com/mila-udem/blocks) \nand various other libraries from the scientific python universe.\n\n", 
  "id": 46879563
}