{
  "read_at": 1462556650, 
  "description": "", 
  "readme.txt": "**************************** \r\nOverview   \r\ntest mod\r\n****************************\r\nThis package of Mathematica programs numerically constructs matched\r\nsolutions to the KV envelope equations describing a charged particle beam\r\nin a linear, periodic transport lattice using the \"Iterative Matching\" \r\n(IM) method.  The IM formulation is described in:\r\n\r\n  \"Efficient computation of matched solutions of the KV envelope equations\r\n   for periodic focusing lattices\" \r\n\r\n  S.M. Lund^1, S.H. Chilton^2, and E.P. Lee^2\r\n\r\n  1. Lawrence Livermore National Laboratory, Livermore, CA 94550 \r\n  2. Lawrence Berkeley  National Laboratory, Berkeley,  CA 94720   \r\n\r\n  Physical Review Special Topics -- Accelerators and Beams \r\n  Vol. 9, 064201 (2006) \r\n\r\n  Paper can be downloaded for free at:\r\n  http://prst-ab.aps.org/\r\n\r\n  http://prst-ab.aps.org/abstract/PRSTAB/v9/i6/e064201\r\n\r\nThe programs both demonstrate the method described in the paper and \r\nalso provide a useful and efficient program for generation of matched \r\nenvelope solutions and analyzing the properties of the solutions.  \r\nVariable names in the programs reflect the notation used in the \r\npaper.  The paper serves as documentation and should be \r\nreferred to for a detailed understanding of the program.  The program works \r\nwith various common parameterizations of the system that are employed in \r\naccelerator physics including the common perveance + emittance parameterization\r\nor parameterizations where either the perveance or emittances are replaced \r\nby phase advance parameters.  The primary limitation of the program is that \r\nit does not work in the limit of full space-charge depression.  This \r\nlimitation could be removed through simple code extensions, but the authors\r\ndecided against implementing this to keep the program relatively clean as is\r\nand this limit is not possible in the laboratory anyway.  \r\nLinear focusing functions corresponding to the piecewise constant lattices \r\nusing in the paper (continuous, solenoidal, and quadrupole doublet) are \r\nincluded as options.  Options also allow the user to input any \r\nx- and y-plane lattice focusing functions desired by simply defining the\r\ndesired lattice focusing functions over one lattice period and setting a flag\r\nto tell the program to use them.  An example included \r\nfor a simple quadrupole lattice with sinusoidally varying focusing \r\nfunctions is defined in the input file as a representative example which can\r\nbe easily modified.  \r\n\r\nPlease cite the final, published paper if this work/program is \r\nreferenced.  Users are welcome to modify this program for their own \r\npurposes.  But the authors request that some citation be made on the source \r\nof material. \r\n\r\nFor further information, please contact the primary author:\r\n\r\nSteven M. Lund\r\nFacility for Rare Isotope Beams \r\nMichigan State University \r\n640 South Shaw Lane \r\nEast Lansing, MI 48824 \r\n \r\nlund@frib.msu.edu \r\n517-908-7291 \r\n\r\nComments on improvements are welcome! \r\n\r\n**************************** \r\nObtaining the Code   \r\n****************************\r\n\r\nThe authors originally posted the code arXiv.org linked with a draft of the\r\nPRSTAB manuscript in 2006. This code has been updated to work with version\r\nchanges in Mathematica and numerous improvements have been made. It can be \r\nobtained most easily one of two ways: 1) using git  2) from a course web \r\nsite. Both of these are detailed below.   \r\n\r\n1) Using git  \r\nThis is the best way to obtain the latest version with corrections since \r\nthe software is being maintained under git:\r\n\r\nTo initialize a git repository, \r\n\r\n   % git clone git@github.com:smlund/iterative_match.git\r\n\r\nThis will create a directory \"iterative_match\" where the git clone \r\ncommand was run containing the latest version of the code.    \r\n\r\nTo update the code, descend into directory iterative_match and run:\r\n\r\n  % git pull \r\n\r\nWhen modifying the repository (for those with edit privilege: please contact \r\nme for that if you wish to make and share improvements) \r\n\r\n  ... edit readme.txt file, for example\r\n  % git add readme.txt  \r\n  % git commit -m \"SML: updated instructions in readme.txt\" \r\n  % git push \r\n\r\n\r\n2) From Course Web Site\r\nThe code is posted on the US Particle Accelerator School (USPAS)\r\ncourse web site for \"Beam Physics with Intense Space-Charge\" taught\r\nby Lund and Barnard. See:\r\n\r\n  https://people.nscl.msu.edu/~lund/uspas/bpisc_2015/\r\n\r\nIn particular, under lund lectures on \"Transverse Centroid and Envelope\r\nDescriptions of Beam Evolution\":\r\n\r\n  https://people.nscl.msu.edu/~lund/uspas/bpisc_2015/lec_set_07/\r\n      tce.pdf        ... lecture notes\r\n      tce_ho.pdf     ... lecture notes handout formatted (4 slides/page)\r\n      env_match_code ... directory containing program files \r\n\r\nThe authors intend to post updates and/or extensions of the code as prove\r\nnecessary. If there are problems, you are encouraged to first check for\r\nthe most up to date version and then contact us (see info above) if there\r\nare problems.  \r\n\r\n\r\n**************************** \r\nRunning the Code   \r\n****************************\r\nThe program can be executed from a Mathematica notebook in \r\nLinux/Unix by placing all the needed im_*.m files in the directory \r\nthat the notebook is run from, opening a Mathematica notebook, \r\nand then executing the command:\r\n\r\n   << im_solver.m [shift-return]\r\n\r\nfrom within the notebook. The problem setup is defined in:\r\n\r\n   im_inputs.m\r\n\r\nwhich is a simple ascii text file containing parameters and flags (Mathematica\r\nsyntax) that can be edited with any standard text editors. On some\r\nMAC OSX installations or MS windows, it may be necessary to first execute\r\nthe command \r\n\r\nSetDirectory[\"directory\"] \r\n\r\nbefore executing im_solver.m in the notebook.  Here, \"directory\" is the \r\nfull path name of the directory containing the *.m program files.    \r\n\r\nThe file im_inputs.m contains input parameters needed to \r\ndescribe the beam, focusing lattice, envelope solution method, and \r\nnumerical and output control parameters. Numerical parameters may need \r\nto be reset for high precision and special applications. Comments\r\nin im_inputs.m provide guidance on how the numerical parameters \r\ncan be set. Other than to change and update the program, no modifications \r\nother than to im_inputs.m should be necessary. All the im_*.m files can \r\nbe modified with a simple text editor. Notebooks \r\nneed not be saved since the programs are compact and can be easily \r\nrerun.  The programs are written to work with the common cases of \r\nparameterizations of the matched envelope solution as explained in the \r\npaper (Section II). This results in more elaborate case structures \r\nbeing required in the programs.  Various parts of the program such \r\nas the principal orbit calculations are written for general initial conditions \r\nto enable simple generalization for other applications.  If desired, a \r\nshorter version of the program can be constructed for a single \r\nparameterization case of interest with a specific coordinate system etc, by \r\nstraightforward simplifications of the functions defined.  \r\n\r\nEfforts have been made to employ basic programming structures that should \r\nremain backward compatible when Mathematica is updated. Unfortunately,\r\nMathematica code is fragile and has had many changes to fairly \r\nbasic syntax and default modes of operation which have impacted \r\nthe code in subtle ways as the software has changed version-to-version. \r\nIn an effort to help\r\ntrack down issues that may develop with future version changes, the authors\r\nhave included debugging provisions. To use these, set in:\r\n\r\n  im_solver.m    =>   DeBug = True;   near top of file \r\n  im_inputs.m    =>   IterationPrint = True; \r\n                      IterationPlot  = False;\r\n\r\nand diagnostic outputs will be made that may assist in identifying problems.   \r\n\r\n**************************** \r\nProgram Files    \r\n****************************\r\n\r\nim_solver.tar  .... tar archive file of the full distribution of files listed\r\n                      below.  \r\n\r\nreadme.txt     .... This file\r\n\r\nexamples       .... Directory of example runs with output.  Contains\r\n                      sub-directories:\r\n\t\t         sol   ... hard-edge solenoid   lattice example \r\n\t\t\t quad  ... hard-edge quadrupole lattice example\r\n\t\t\t user  ... user input lattice example \r\n\r\nim_solver.m    .... Main control program.  This script reads in problem and \r\n                      description and numerical control parameters contained \r\n                      in im_inputs.m, then reads in various function \r\n                      definition files that follow, and then \r\n                      makes calls to appropriate functions to generate the \r\n                      matched envelope solution with the IM method.  After\r\n\t\t      generating the solution the \r\n                      script im_diag.m is run to generate output plots and \r\n                      information on the matched solution.  If set, optional \r\n                      particle orbit and envelope stability programs are \r\n                      executed with more diagnostics.  \r\n\r\nim_inputs.m    .... Input parameters for beam description, linear focusing \r\n                      lattice, and numerical and output control.  All user \r\n                      inputs are contained in this file.  Arbitrary linear \r\n                      focusing lattices can be described using Mathematica \r\n                      functions.  Depending on the run mode, some inputs are \r\n                      not used and will be reset consistently with the \r\n                      parameters employed on generation of the matched \r\n                      envelope.  \r\n\r\nim_lattice.m   .... Defines periodic applied focusing lattices, calculates\r\n                       undepressed betatron functions, and calculates \r\n                       undepressed single particle phase advance inputs\r\n\t\t       (if necessary) for consistency with the lattice.  \r\n\r\nim_utilities.m .... Defines various utilities used in parts of the program.  \r\n\r\nim_err_chk.m   .... Partial error checks for program inputs.   \r\n\r\nim_cont.m      .... Function definitions for the continuous limit which \r\n                      is used to generate a seed iteration.   \r\n\r\nim_seed.m      .... Function definitions to generate a seed (initial) iteration.\r\n\r\nim_iterate.m   .... Function definitions to carry out method iterations and \r\n                      matched envelope solutions under various parameterization\r\n                      cases. This is the main core of the algorithm.   \r\n                   \r\nim_diag.m      .... Generates formatted output information and plots on \r\n                      the lattice and the matched envelope solution.  Average, \r\n                      max, and min values of the envelope radii and angles \r\n                      are calculated.  Output is displayed in the Mathematica \r\n                      notebook and can be printed from the notebook.  Plots \r\n                      generated (if turned on in some cases) are also\r\n\t\t      exported as eps files:\r\n\t\t      \r\n                        im_plt_lat_kappa.eps ... lattice focusing functions\r\n\t\t\t\r\n\t\t\tim_plt_lat_beta.eps  ... lattice undep betatron funcs\r\n                        im_plt_lat_alpha.eps ... lattice undep alpha funcs\r\n\t\t\tim_plt_lat_gamma.eps ... lattice undep gamma funcs\r\n\r\n                            (beta,alpha,gamma) are the usual Twiss functions\r\n\t\t\t    specifiying the orientation of the\r\n\t\t\t    Courant-Snyder invariant ellipse. With beta being\r\n\t\t\t    the usual undepressed betatron function.   \r\n\r\n                        im_plt_env_coord.eps ... matched envelope\r\n                        im_plt_env_ang.eps   ... matched envelope angles\r\n\r\n\r\nim_orbit.m \r\n               .... Optional: Calculates depressed and undepressed principal \r\n                      orbits within the matched beam envelope and outputs \r\n                      a formated plot. Initial conditions can be set in\r\n\t\t      im_inputs.m and provisions are given to choose initial\r\n\t\t      conditions that remain in the envelope and choose a\r\n\t\t      full oscillation period.  If run, this outputs the\r\n\t\t      plots:\r\n\r\n                        im_plt_orbit_x.eps  ... x-plane particle orbit \r\n\t\t\tim_plt_orbit_y.eps  ... y-plane particle orbit\r\n\r\n                        im_plt_orbit_xp.eps ... x'particle orbit\r\n\t\t\tim_plt_orbit_yp.eps ... y'particle orbit \r\n\r\n                      Note: if solenoidal focusing is used, these orbits are\r\n\t\t      implicitly in the rotating Larmor frame.  \r\n\r\nim_env_stability.m  \r\n               .... Optional: Calculates stability properties of envelope \r\n                      modes on the matched envelope and outputs formatted \r\n                      information on the results and a plot of the envelope \r\n                      eigenvalues to help interpret stability properties.\r\n\t\t      This relies heavily on treatments presented in:\r\n\t\t       Lund and Bukh, \"Stability properties of the\r\n\t\t       transverse envelope equations describing intense\r\n\t\t       ion beam transport,\" Phys. Rev. Special Topics -- \r\n                       Accelerators and Beams 7, 024801 (2004).  If run, this\r\n\t\t       outputs the plots:\r\n\r\n                         im_plt_env_stab_evals.eps  ... envelope eigenvalues\r\n\r\n**************************** \r\nExamples in the distribution  \r\n****************************\r\n\r\nExample versions of runs are stored with the source distribution on the USPAS\r\nweb site (see above) in a directory \"examples\" with sub-directories:\r\n\r\n  \"sol\"  solenoid             piecewise continuous focusing lattice \r\n  \"quad\" fodo quadrupole      piecewise continuous focusing lattice\r\n  \"user\" user input focusing with sinusoidally varying kappa functions\r\n\r\nIn each case, the code (various im_*.m files) used to generate the output, the\r\nMathematica notebook generated when these are read in, output eps files, and\r\na pdf export of the notebook are stored. These cases can be rerun to verify\r\nthat the code is working correctly.  \r\n\r\nAll have lattices with 1/2 meter period, sigma0 = 80 degrees undepressed phase\r\nadvance per period, are run with SolCase = 1, perveance Q = 1.*10^(-4),\r\nand space-charge tune depression sigma/sigma0 = TuneDep = 0.2\r\n(emittances are adjusted for consistency and output). The focusing\r\nstrength (kappa) of the user input quadrupole lattice is input such that\r\nsigma0 = 80 degrees/period. The piecewise constant lattices all have occupancy\r\neta = 1/2 (period 50% filled with solenoid or quadrupoles respectively). These\r\nexamples can be easily modified to run other solution cases (SolCase) for other\r\nparameterizations.   \r\n\r\n**************************** \r\nHistory  \r\n****************************\r\nThe programs were originally written and debugged under Mathematica \r\n5.1 and 5.2 running on linux/unix platforms during the late 2005 and \r\nearly 2006 calendar years.  A significant update to the program was made \r\nin 2012 using Mathematica 8.0.  Syntax changes in function argument passing\r\nwere made in 2015 so the program would work with Mathematica 10.0 and other\r\nimprovements were made. These modifications should be backward compatible.\r\n\r\nA full version of this program is implemented in the Warp code for intense\r\nbeam simulation. Information on Warp can be found on:\r\n\r\n   http://warp.lbl.gov/\r\n\r\nInformation on this implementation is covered in the Mater's thesis:\r\n\r\n  \"Implementation of an iterative matching scheme for the\r\n   Kapchinskij-Vladimirskij equations in the WARP code\"\r\n   Sven Chilton\r\n   University of California at Berkeley\r\n   Department of Nuclear Engineering\r\n   Spring 2008\r\n\r\n", 
  "id": 44817361
}