{
  "read_at": 1462544843, 
  "description": "A collection of links on topics from data science", 
  "README.md": "Assorted links on data science topics\n=====================================\n\nA collection of links and references on various topics from data science, which I have found useful.\n\n\n### Scientific computing and programming practices\n\n- [Best Practices for Scientific Computing](http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.1001745), by Greg Wilson *et al.* (2014), *PLoS Biology*. Greg Wilson started the [Software Carpentry](http://software-carpentry.org/) project, which runs intensive workshops around the world to teach skills for scientific computing.\n\n- [Ten recommendations for software engineering in research](http://www.gigasciencejournal.com/content/3/1/31), by Janna Hastings *et al.* (2014), *GigaScience*. Concise list of recommendations for writing scientific software.\n\n- [A Quick Guide to Organizing Computational Biology Projects](http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1000424), by William Stafford Noble (2009), *PLoS Computational Biology*. This is now slightly out of date, for example online lab notebooks can be written more easily with [IPython/Jupyter](http://ipython.org/) or in R Markdown than by writing an HTML file by hand; and I prefer Git to SVN for version control since it integrates so easily with GitHub.\n\n\n### Data science tools and workflows\n\n- Jenny Bryan's slides from a talk on [\"New tools and workflows for data analysis\"](https://github.com/jennybc/2015-02-23_bryan-fields-talk) (click on the PDF or Speaker Deck link). Excellent overview of new tools for data science such as RStudio, R Markdown, and Git/GitHub.\n\n\n### Docker\n\n- [Using Docker for reproducible computational publications](http://melissagymrek.com/science/2014/08/29/docker-reproducible-research.html) -- blog post by Melissa Gymrek giving an introduction to [Docker](https://www.docker.com/) and how to use it.\n\n- [An introduction to Docker for reproducible research, with examples from the R environment](http://arxiv.org/abs/1410.0846), by Carl Boettiger (2014), *arXiv preprint*. Paper describing how to use [Docker](https://www.docker.com/) and [Docker Hub](https://hub.docker.com/) to set up and share reproducible system environments (\"Docker containers\") for running scientific software pipelines.\n\n\n### The pipe operator `%>%` in R\n\n- This blog post -- [The Grammar of Data Science](http://technology.stitchfix.com/blog/2015/03/17/grammar-of-data-science/) -- gives several examples showing how to use the new pipe operator `%>%` in R. The pipe operator `%>%` was introduced in the [magrittr](https://github.com/smbache/magrittr) package by Stefan Milton in 2014, and although it is still very new, I believe it has the potential to fundamentally change the way R code is written. With the pipe operator you can write much more human-readable code, which reads more logically from \"left to right\" and does not require as many temporary variables.\n\n\n### R packages for data analysis: ggplot2, dplyr\n\n- The examples in the blog post above -- [The Grammar of Data Science](http://technology.stitchfix.com/blog/2015/03/17/grammar-of-data-science/) -- also illustrate some key features of the [ggplot2](http://ggplot2.org/) and [dplyr](https://github.com/hadley/dplyr) packages by Hadley Wickham, which are extremely useful for creating plots and data manipulation respectively. There are many tutorials on the internet with more detailed introductions to these packages.\n\n\n### Travis CI for package testing\n\n- [Travis CI](https://travis-ci.org/) is a framework for continuous testing of packages hosted in a GitHub repository, with [native support for R](https://github.com/craigcitro/r-travis) and many other programming languages. A green/red indicator can be added to the repository README file to show whether the current build passes. Note that R packages can be installed directly from GitHub with `devtools::install_github`.\n\n\n### Tutorials and workflows\n\n- [How to map whole genome bisulfite sequencing (WGBS) data](https://github.com/genomicsclass/colonCancerWGBS/blob/master/scripts/createObject.Rmd), by [Stephanie Hicks](http://www.stephaniehicks.com/). This tutorial also contains several examples of very efficient shell code to streamline the workflow -- including piping with `|` and parallelizing with `parallel`.\n\n\n", 
  "id": 31716234
}