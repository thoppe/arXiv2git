{
  "read_at": 1462545737, 
  "description": "KeYmaera X: An Axiomatic Tactical Theorem Prover for Hybrid Systems (release)", 
  "README.md": "KeYmaera X\n==========\n\nKeYmaera X is a theorem prover for differential dynamic logic (dL), a logic for specifying and verifying properties of hybrid systems with mixed discrete and continuous dynamics. Reasoning about complicated hybrid systems requires support for sophisticated proof techniques, efficient computation, and a user interface that crystallizes salient properties of the system. KeYmaera X allows users to specify custom proof search techniques as tactics, execute tactics in parallel, and interface with partial proofs via an extensible user interface.\n\nKeYmaera X is built up from a small trusted core. The core contains a finite list of locally sound dL axioms that are instantiated using a uniform substitution proof rule. Isolating all soundness-critical reasoning in this axiomatic core obviates the otherwise intractable task of ensuring that proof search algorithms are implemented correctly. This enables advanced proof search features---such as aggressive, speculative proof search and user-defined tactics built using a flexible tactic language---without correctness concerns that could undermine the usefulness of automated analysis.\n\n  http://keymaeraX.org/\n\nBranches\n========\n\n- `release` is the stable branch for KeYmaera X releases.\n- `master` is the branch for active ongoing developments of KeYmaera X.\n\nDependencies\n============\n- [Wolfram Mathematica](https://www.wolfram.com/mathematica/)\n  (version 9.0 or greater recommended. Other versions may work. The Mathematica J/Link library that comes with Mathematica is needed during compilation. Mathematica needs to be activated to use it also at runtime.)\n- [Java Development Kit JDK](https://java.com/download)\n  (Mathematica 9.0 is only compatible with Java 1.6 and 1.7. Mathematica 10.0 is also compatible with Java 1.8)\n- [Scala Build Tool sbt](http://www.scala-sbt.org)\n  (Version 0.13 or greater recommended. Other versions may work). If you are using IntelliJ, this comes with the Scala plugin.\n- [Scala 2.11.7](http://www.scala-lang.org)\n  (sbt will download scala this automatically)\n\nInstallation\n============\n\nThe easiest way to run KeYmaera X is to download the `keymaerax.jar` binary file from\n\n  http://keymaeraX.org/\n\nand run it via\n\n    java -Xss20M -jar keymaerax.jar\n\nIf this results in the error `Invalid or corrupt jarfile` then update to Java 1.8 or run it via\n\n    java -Xss20M -cp keymaerax.jar KeYmaeraX\n\nThe easiest way to run KeYmaera X from source is to install its dependencies and build it via SBT:\n\n    * Install the dependencies (see Dependencies section)\n    * Point the JLINK_JAR_LOCATION environment variable to Mathematic's JLink.jar file (see FAQ)\n    * Follow the build instructions in the Building section\n\nBuilding\n========\n\nKeYmaera X uses the Scala Build Tool (sbt). Installation instructions are available\nat the link following:\n\nhttp://www.scala-sbt.org/release/docs/Getting-Started/Setup.html\n\nDetailed instructions are available at that website as well. Briefly, type\n\n    sbt compile\n\nto compile the source code. First-time compilation may take a while, since it downloads all necessary libraries, including Scala itself. \n\nTo run the regression test case suite, type\n\n    sbt test -l edu.cmu.cs.ls.keymaerax.tags.ObsoleteTest\n\nFAQ: Build Problems\n===================\nThe build file uses default paths to the Mathematica JLink JAR for MacOS and Mathematica 10 (see default.properties).\nIf those are not suitable for your setup, create a file 'local.properties' in the same directory as default.properties\n(project root) and provide the location of JLink.jar with a property mathematica.jlink.path=YOUR_LOCAL_PATH_TO_JLINKJAR\n\nIf, at any time, you run into problems during the compilation process, use `sbt clean` for a fresh start to remove stale files. If the problems persist, use `sbt clean` followed by `sbt reload`. On a few computers you may have to edit your environment variables, e.g., `~/.bashrc` or  `~/.profile` to include something like\n\n    export SBT_OPTS=\"-Xss20M -Xms8000M\"\n\nThe Wiki contains extended build instructions and solutions to other\ncommon sbt problems:\n\nhttps://github.com/LS-Lab/KeYmaera4/wiki/Building-Instructions\n\nFAQ: Run Problems\n=================\n\nIf KeYmaera X acts weird after an update, you should clean your local cache of lemmas by removing (or renaming) the directory `~/.keymaerax/cache` or even the whole `~/.keymaerax/` directory.\nYou could also try removing or renaming keymaerax.sqlite (if this file has become corrupt, it may prevent KeYmaera from working).\n\n\nGenerating API Documentation\n============================\n\nKeYmaera X API Documentation is generated via Scaladoc.\n  \n   http://www.keymaerax.org/scaladoc\n\nTo generate KeYmaera X API documentation files locally, run:\n\n    sbt doc\n\nDocumentation will be generated for each subproject in the \n`target/scala-x.xx/api` directory of the subproject. \nFor instance, `keymaerax-core/target/scala-2.11/api` for the core subproject.\n\nTo generate unified scaladoc for all subprojects, run:\n\n    sbt unidoc\n\nDocumentation will be generated for the whole project in the `target/scala-x.xx/unidoc` directory.\nFor instance `target/scala-2.11/api`.\n\nMain documentation to read for KeYmaera X API:\n\n    http://keymaerax.org/doc/dL-grammar.md - concrete syntax for input language Differential Dynamic Logic\n    edu.cmu.cs.ls.keymaerax.core.package   - KeYmaera X kernel, proof certificates, main data structures\n    edu.cmu.cs.ls.keymaerax.parser.package - Parser and pretty printer with concrete syntax and notation\n    edu.cmu.cs.ls.keymaerax.btactics.package - Tactic library\n    edu.cmu.cs.ls.keymaerax.btactics.TactixLibrary - Main tactic library for most common cases\n    edu.cmu.cs.ls.keymaerax.launcher.KeYmaeraX - command-line launcher for KeYmaera X\n\nIntelliJ IDEA Development Environment\n=====================================\n\nIf you choose to use the IntelliJ IDEA development environment, install it:\n- Install IntelliJ IDEA\n- Install the Scala plugin for IntelliJ (the IntelliJ installer will ask you if you want to do this)\n\nProject Setup\n- Make sure you have defined the JLINK_JAR_LOCATION environment variable (see FAQ).\n- Create a new Scala project, backed by SBT\n- Select a JDK as your project SDK, add a new one if not previously added\n- Check `update automatically` (not checked by default), so that updates to build.sbt are reflected automatically in the project. You may also want to check the \"Download and compile sources\" options.\n- If the bundled version of sbt is not working for you, you can specify your own version here.\n\nCreate a new run configuration of type Application for the KeYmaera X Web UI.\n- Main class: `edu.cmu.cs.ls.keymaerax.hydra.Boot`\n- Set the working directory to the project path\n- Use the classpath of your project module\n- Check \"Single instance only\"\n\nTest Cases:\n- Right click on project folder `keymaerax-webui/src/test` to mark this directory as Test Sources Root.\n- Make sure the JVM option `-Xss20M` is included in the run configuration.\n- Right click on the test folder to run all its ScalaTests.\n\nTagged Test Suite:\nRun Configurations Drop-down in Toolbar\n -> Edit Configurations\n -> Add Configuration (ScalaTest)\n -> Select \"All in package\" for Test Kind\n -> Under \"Test options\" enter:\n      `-n edu.cmu.cs.ls.keymaerax.tags.CheckinTest -n edu.cmu.cs.ls.keymaerax.tags.SummaryTest -l edu.cmu.cs.ls.keymaerax.tags.ObsoleteTest`\n      (or any other string from `TestTags.scala`)\n -> Select \"keymaerax\" as SDK and classpath of module\n -> Apply/OK\n\nIntelliJ FAQ\n============\nIf, at any time, you run into problems during the compilation process in IntelliJ, check the `File->Project Structure->Modules->core->Dependencies` to make sure the appropriate files such as `SBT: unmanaged-jars` are checked. This is necessary for IntelliJ to find JLink.jar. IntelliJ keeps forgetting about it, so you may have to check repeatedly. If the problems persist, do `File->Invalidate Caches / Restart`.\n\nFront End\n=========\n\nThe Web UI web user interface front end of KeYmaera X can be started as follows:\n\n    sbt assembly\n    java -jar keymaerax-webui/target/scala-2.11/keymaerax-4.2b1.jar -ui\n    open http://127.0.0.1:8090/\n\nThe first command builds a .JAR, and the second command runs the built .jar. If the jar won't start because of an error `no manifest found` you may have to run `sbt clean` first.\nIn case of errors about `invalid or corrupt jarfile`, please update Java to a newer version.\n\nFor development purposes, the Web UI can be run from an IDE by selecting as the Main class if you pass its JVM the option `-Xss20M`:\n\n    keymaerax-webui/src/main/scala/edu/cmu/cs/ls/keymaerax/hydra/Boot.scala\n\nNote that using the launcher/Main class won't work in IntelliJ but Boot.scala must be used instead.\n\nErrors related to JLinkNative Library are caused by incompatibilities of Java 1.8 in combination with Mathematica 9.\nIt is recommended to use Mathematica 10.\n\nKeYmaera X is successfully started when you see the following console output\n\n    Bound to 127.0.0.1:8090\n\nTo find out how to use KeYmaera X from command line, do `sbt clean assembly` and run\n\n    java -Xss20M -jar keymaerax-webui/target/scala-2.11/keymaerax-4.0b1.jar -help\n\nMake sure you have Java 1.8 for using command line. Java 1.7 and earlier versions may not work.\n\nSource Code Layout\n==================\n\n`build.sbt` - SBT configuration file.\n\nThe project is split into two subprojects, `keymaerax-core` for the core functionalities of the prover and `keymaerax-webui` for everything else.\n\n    keymaerax-core/src/ - Source code directory\n    keymaerax-core/src/main/scala - source code (edu.cmu.cs.ls.keymaerax)\n    keymaerax-webui/src/ - Source code directory for Web UI etc.\n    keymaerax-webui/src/test/scala - tests run by `sbt test`\n    keymaerax-core/target/scala-2.11/api/ - Target directory for sbt doc documentation.\n    target/ - Generated files directory created by sbt on first compilation.\n    target/scala-2.11/classes/ - Target directory for sbt compilation.    \n    target/scala-2.11/unidoc/ - Target directory for sbt unidoc documentation.    \n\nWithin the `edu.cmu.cs.ls.keymaerax` namespace, source code is separated according to functionality:\n\n    .core        - KeYmaera X Kernel: Soundness-critical core\n    .lemma       - Lemma mechanism (non-critical)\n    .bellerophon - Tactic language, framework and tactic interpreter\n    .btactics    - Tactic library\n    .parser      - Parsing and pretty printing\n    .pt          - Proof checker for proof terms\n    .tactics     - Older scheduled tactic framework, including tactic implementations and the scheduler\n    .tools       - Arithmetic back-ends\n\nThe additional packages in the directory `keymaerax-webui/src/main/scala` are separated into:\n\n    .api     - Scala API for proof and tactics management etc.\n    .codegen - Code generation tools to generate C-Code etc.\n    .hydra   - HyDRA Hybrid Distributed Reasoning Architecture server with REST API and database\n    .launcher - KeYmaera X command line launcher with main program\n    .tacticsinterface - Interface to the actics exposed to the web UI and REST API. Tactic combinator parser.\n\nScalaDoc is available at: http://keymaerax.org/scaladoc\n\nTest Cases\n==========\n\nThe full test suite can be run from command line by\n\n    sbt test\n\nSelectively running individual test cases within sbt:\n\n    sbt\n    sbt>  test-only *USubst*\n\nOr, run on a more fine-grained level within a class use\nobject MyTest extends Tag(\"MyTest\")\n\n    object MyTest extends Tag(\"MyTest\")\n    it should \"do something useful\" taggedAs(MyTest) in {....}\n    it should \"do anything useful\" taggedAs(MyTest) in {....}\n    it should \"do more good\" taggedAs(MoreTest) in {....}\n\nThen in sbt interactive mode run   \n\n    sbt>  test-only -- -n \"MyTest MoreTest\"\n\nTo inline scala console output alongside the test suite information, first do:\n\n    sbt>  set logBuffered in Test := false\n\nIntelliJ IDEA can also run the test suite (see #IntelliJ IDEA).\n\nThe Wiki contains an introduction to the testing framework:\nhttps://github.com/LS-Lab/KeYmaera4/wiki/How-to-Add-Tests\nhttp://www.scalatest.org/user_guide\n\n\nSpecification\n=============\n\nThe goal of KeYmaera X is to implement the proof calculus of differential dynamic logic in a way that is amenable to soundness ensurance by way of a small trusted LCF-style core while still being amenable to automatic theorem proving.\nDifferential dynamic logic and its Hilbert-type and sequent proof calculi have been described and specified in more detail in:\n\n1. Andre Platzer. \n[A complete uniform substitution calculus for differential dynamic logic](ttp://arxiv.org/abs/1601.06183). \n[arXiv 1601.06183](http://arxiv.org/abs/1601.06183)\n\n2. Andre Platzer. \n[A uniform substitution calculus for differential dynamic logic](http://dx.doi.org/10.1007/978-3-319-21401-6_32). \nIn Amy P. Felty and Aart Middeldorp, editors, International Conference on Automated Deduction, CADE'15, Berlin, Germany, Proceedings, LNCS. Springer, 2015.\nExtended version at [arXiv 1503.01981](http://arxiv.org/abs/1503.01981)\n\n3. Andre Platzer.\n[Logics of dynamical systems](http://dx.doi.org/10.1109/LICS.2012.13).\nACM/IEEE Symposium on Logic in Computer Science, LICS 2012, June 25-28, 2012, Dubrovnik, Croatia, pages 13-24. IEEE 2012.\n\n4. Andre Platzer.\n[Differential dynamic logic for hybrid systems](http://dx.doi.org/10.1007/s10817-008-9103-8).\nJournal of Automated Reasoning, 41(2), pages 143-189, 2008.\n\n5. Andre Platzer.\n[Logical Analysis of Hybrid Systems: Proving Theorems for Complex Dynamics](http://dx.doi.org/10.1007/978-3-642-14509-4).\nSpringer, 2010. 426 p. ISBN 978-3-642-14508-7. \n\n6. Andre Platzer.\n[Differential dynamic logic for verifying parametric hybrid systems](http://dx.doi.org/10.1007/978-3-540-73099-6_17).\nIn Nicola Olivetti, editor, Automated Reasoning with Analytic Tableaux and Related Methods, International Conference, TABLEAUX 2007, Aix en Provence, France, July 3-6, 2007, Proceedings, volume 4548 of LNCS, pages 216-232. Springer, 2007. \n\nThe prover KeYmaera X itself is described in\n\n7. Nathan Fulton, Stefan Mitsch, Jan-David Quesel, Marcus Volp and Andre Platzer. \n[KeYmaera X: An axiomatic tactical theorem prover for hybrid systems](http://dx.doi.org/10.1007/978-3-319-21401-6_36). \nIn Amy P. Felty and Aart Middeldorp, editors, International Conference on Automated Deduction, CADE'15, Berlin, Germany, Proceedings, LNCS. Springer, 2015. \n\nThe advanced proof techniques of differential invariants, differential cuts, and differential ghosts are described and specified in\n\n8. Andre Platzer.\n[The structure of differential invariants and differential cut elimination](http://dx.doi.org/10.2168/LMCS-8(4:16)2012).\nLogical Methods in Computer Science, 8(4), pages 1-38, 2012. \n\nA secondary goal of KeYmaera X is to also make it possible to implement extensions of differential dynamic logic, such as differential game logic for hybrid games as well as quantified differential dynamic logic for distributed hybrid systems, which, along with its proof calculus, are described and specified in\n\n9. Andre Platzer. \n[Differential game logic](http://arxiv.org/abs/1408.1980). \nACM Trans. Comput. Log., 17(1), 2015.\n[arXiv:1408.1980](http://arxiv.org/abs/1408.1980)\n\n10. Andre Platzer.\n[A complete axiomatization of quantified differential dynamic logic for distributed hybrid systems](http://dx.doi.org/10.2168/LMCS-8(4:17)2012).\nLogical Methods in Computer Science, 8(4), pages 1-44, 2012.\nSpecial issue for selected papers from CSL'10. \n\n11. Andre Platzer.\n[Dynamic logics of dynamical systems](http://arxiv.org/abs/1205.4788).\nMay 2012.\narXiv:1205.4788\n\nCopyright and Licenses\n======================\n\nCopyright (C) 2014-2016 Carnegie Mellon University. See COPYRIGHT.txt for details.\nDeveloped by Andre Platzer, Stefan Mitsch, Nathan Fulton, Jan-David Quesel, Brandon Bohrer, Marcus Voelp, Ran Ji.\n\nSee LICENSE.txt for the conditions of using this software.\n\nThe KeYmaera X distribution contains external tools. A list of tools and their licenses can be found in\n\n    keymaerax-webui/src/main/resources/license/tools_licenses\n\nBackground & References\n=======================\n\nBackground material and more material can be found at\n\nhttp://keymaeraX.org/\n\nhttp://www.cs.cmu.edu/~aplatzer/pub/\n\nhttp://symbolaris.com/info/KeYmaera.html\n\n\nContact\n=======\n\nKeYmaera X developers: keymaerax@keymaerax.org\n", 
  "id": 41432826
}