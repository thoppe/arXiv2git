{
  "README": "This program computes Lempel Ziv(LZ77) factorization from input text,\nwhich was made by Keisuke Goto, Hideo Bannai.\nThe original algorithm is proposed by Keisuke Goto and Hideo Bannai.\nDetails of the algorithm are available in http://arxiv.org/abs/1310.1448.\nThe souce code is hosted at http://code.google.com/p/bgone/ .\n\nAll source codes are licensed by MIT License.\nYou can read the details in LICENSE file.\n\nWe partly use souce codes made by G. Nong and J. Karkkainen et.al,\nsaca-k.cpp by G. Nong,\nthe reading_text function within bgCommon.cpp by J. Karkkainen et.al.\nTheir source codes are available at http://code.google.com/p/ge-nong/\nand https://www.cs.helsinki.fi/group/pads/lz77.html respectively.\n\n\nScons (http://www.scons.org/) is used for the building process.\nJust type \"scons\" if you have it installed.\n\n-- Description\n\nThis package contains implementations of linear time algorithms computing\nthe Lempel Ziv(LZ77) factorization (also known as LZ77 parsing) from the paper\n\nKeisuke Goto, Hideo Bannai:\nSpace Efficient Linear Time Lempel-Ziv Factorization for Small Alphabets. DCC 2014: 163-172\nhttp://dx.doi.org/10.1109/DCC.2014.62\nhttp://arxiv.org/abs/1310.1448\n\nImplemented algorithms:\n\n  BGone  - uses 5n bytes of space (assuming 32-bit integers and byte alphabet),\n          This is the most space efficient algorithm.\n  BGtwo  - uses 9n bytes of space. \n\nGiven space requirements include the input text of n bytes but exclude the\noutput factorization.\n\n\n-- Terms of use\n\nIf you use this code for experiments in a research paper, please cite the\npaper mentioned above and publish the URL from which you downloaded the code.\n\n\n-- How to use\nSee the help option, BGone -h or BGtwo -h.\n", 
  "read_at": 1462544745, 
  "description": "Automatically exported from code.google.com/p/bgone", 
  "id": 32389560
}