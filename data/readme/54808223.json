{
  "read_at": 1462554938, 
  "description": "Tensorflow Implementation of Spatial Transformer Networks ", 
  "README.md": "# Spatial Transformer Network\n\nA more recent and maintained version can be found in [Tensorflow/models](https://github.com/tensorflow/models/tree/master/transformer).\n\nSpatial Transformer Networks [1] allow us to attend specific regions of interest of an image while, at the same time, provide invariance to shapes and sizes of the resulting image patches. This can improve the accuracy of the CNN and discover meaningful discriminative regions of an image. \n\n<div align=\"center\">\n  <img width=\"600px\" src=\"http://i.imgur.com/ExGDVul.png\"><br><br>\n</div>\n\n### API \n\nA Spatial Transformer Network based on [2] and implemented in Tensorflow.\n\n#### How to use\n\n<div align=\"center\">\n  <img src=\"http://i.imgur.com/gfqLV3f.png\"><br><br>\n</div>\n\n```python\ntransformer(U, theta, downsample_factor=1)\n```\n    \n#### Parameters\n\n    U : float \n        The output of a convolutional net should have the\n        shape [num_batch, height, width, num_channels]. \n    theta: float   \n        The output of the\n        localisation network should be [num_batch, 6].\n    downsample_factor : float\n        A value of 1 will keep the original size of the image\n        Values larger than 1 will downsample the image. \n        Values below 1 will upsample the image\n        example image: height = 100, width = 200\n        downsample_factor = 2\n        output image will then be 50, 100\n        \n    \n#### Notes\nTo initialize the network to the identity transform init ``theta`` to :\n\n```python\nidentity = np.array([[1., 0., 0.],\n                    [0., 1., 0.]]) \nidentity = identity.flatten()\ntheta = tf.Variable(initial_value=identity)\n```        \n\n#### Experiments\n\n<div align=\"center\">\n  <img width=\"600px\" src=\"./cluttered_mnist.png\"><br><br>\n</div>\n\nWe used cluttered MNIST. Left columns are the input images, right columns are the attended parts of the image by an STN.\n\n### References\n\n[1] Jaderberg, Max, et al. \"Spatial Transformer Networks.\" arXiv preprint arXiv:1506.02025 (2015)\n\n[2] https://github.com/skaae/transformer_network/blob/master/transformerlayer.py\n", 
  "id": 54808223
}