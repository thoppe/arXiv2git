{
  "read_at": 1462559160, 
  "description": "An alternative grammar for parsing mathematical expressions for LaTeXML, implemented in Marpa::R2", 
  "README.md": "LaTeXML::MathSyntax\n===================\n\nAn alternative grammar for parsing mathematical expressions for LaTeXML, implemented in Marpa::R2\n\n\n  ```\n  perl Makefile.PL ; make \n  make test # Tests LaTeXML::MathSyntax\n  make test_classic # Tests LaTeXML::MathGrammar\n  ```\n\nAims to also provide:\n * A comprehensive test suite for parsing mathematical expressions into content MathML\n * An automated test harness for developing math grammars for LaTeXML\n * Convenient domain-specific languages for writing down tests (e.g. a write-efficient serialization for Content MathML)\n\n### Dataset\n\n * Gradually formalising all of DLMF's ~10,000 equations.\n * Intending to formalize ~1,000 or more formulas from arXiv.org\n\n### Annotations\n * Each item in the test suite consists of a ```<TeX formula, Content MathML tree>``` tuple.\n * The TeX can be any input written in a real-world mathematical document.\n * The Content MathML tree must be written in the strict CMML syntax, complying with existing content dictionaries.\n * The CMML tree must **avoid** large semantic rewrites of the input expression.\n   \n  **Example:** In the case of an ellipssis (...) the annotation should ideally preserve the ellipsis explicitly\n  via a special underspecified symbol, such as ```:underspecified:ellipsis```.\n  Full formalization is not only difficult, but also not always possible, for ellided content.\n  The rule of thumb should always be to consider whether a math grammar should realistically be expected to perform \n  the analysis necessary for the rewrite.\n", 
  "id": 12497120
}