{
  "read_at": 1462554354, 
  "description": "Bayesian boundary detection for images", 
  "README.md": "# BayesBD\nBayesian boundary detection for images. \n\n### Reference\nLi, M. and Ghosal, S. (2015). Bayesian Detection of Image Boundaries. _arXiv preprint_.  (http://arxiv.org/abs/1508.05847)\n\n### Install\nThe package can be installed on Linux and Mac using `devtools`:\n\n```S\ninstall.packages('devtools')\nlibrary('devtools')\ndevtools::install_github('BayesBD', 'xylimeng')\nlibrary(BayesBD)\n```\n\n### Example\n\n```S\nset.seed(2015)\n% ellipse boundary\ngamma.fun = ellipse(a = 0.35, b = 0.25)\nobs = par2obs(m = 100, pi.in = 0.5, pi.out = 0.2, design = 'J', gamma.fun)\n\n# Bayes Estimation:\n# it takes around 7min if runs 10000 iterations: saved in 'data.Rdata'\n# BayesEst = BayesBD.binary(obs, n.run = 10000, n.burn = 1000)\ndata(data)\n\n# visualize the estimates\ntheta.plot = seq(from = 0, to = 2*pi, length.out = 200)\ngamma.hat.theta = BayesEst$gamma.hat(theta.plot)\n\n## plotting utilities\nrequire(plotrix)\nmy.radial <- function(r, theta, ...){\n  radial.plot(c(r[order(theta)]), c(theta[order(theta)]),\n              rp.type = \"p\", show.grid.label = TRUE, radial.lim = c(0, 0.5),\n              ...)\n}\n# rotate a matrix\nrotate <- function(x) t(apply(x, 2, rev))  # rotate closewise by 90 degrees\n\npar(mfrow = c(1, 2))\n# rotate & image it - square (asp = 1)\nimage(rotate(obs$intensity), axes = FALSE, asp = 1, main = 'observation')\nmy.radial(gamma.fun(theta.plot), theta.plot, line.col = 1, lty = 2, lwd = 2,\n          main = 'Estimated boundary vs. True', show.grid = FALSE)\nmy.radial(gamma.hat.theta, theta.plot, add = TRUE,\n         line.col = 'red', lty = 2, lwd = 2, show.grid = FALSE)\n```\n", 
  "id": 45480605
}