{
  "read_at": 1462549387, 
  "description": "", 
  "README.md": "# CompositionalLM\nSource code for \n\nKushal Arora and Anand Rangarajan. \"*A Compositional Approach to  Language Modeling.*\" arXiv:1604.00100 [cs.CL], 2016.\n\n## Dependencies:\n* Java 1.8\n* Maven 3.3 (3.3.9 to be exact)\n\n## Build\n\nWe use maven to build the model. Make sure the version of maven is 3.3+. To build the model run\n\n> mvn assembly:assembly\n\n## Train\n\nTo train the model, run `train.sh`. \n\n## Test\n\nTo test the model, run `test.sh`\n\n### Configuration\n\nTraining, testing configuration are in configs/ folder. The config folder contains six config files. The important configs in these files are:\n\n* config/train.config\n    >This the the most important and longest config file as it deals with training configurations. The important properties to notice here are:\n  \n \t- maxOptimizerEpochs: numer of M step optimization epochs.\n \t- maxEMEpochs: number of EM epochs.\n \t- batchSize \n \t- validationBatchSize\n \t- learningRate\n \t- l2term: l2 regularization coefficient.\n\n* config/model.config\n\t> Model config contains model related configuration. Most important of which is the size of the latent space.\n\t\n\t- dimensions: The dimension of the latent space.\n\t- outFile: The place to save the model file after training.\n\t- inFile: Input model file while testing. \n* config/test.config\n\t> This controls the testing configuration. Important thing to note while testing is to ensure that the dimension in model config is same as the one used while training. \n\n\t- testBatchSize: Size of the test batch.\n", 
  "id": 37962436
}