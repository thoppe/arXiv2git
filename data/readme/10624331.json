{
  "id": 10624331, 
  "read_at": 1462551162, 
  "README.rst": "Project Description\n===================\n\n``hep-mc`` is a C++11 template library for Monte Carlo integration. The\nfollowing integration algorithms are available:\n\n- PLAIN,\n- VEGAS [1]_ [2]_, and a\n- MULTI CHANNEL integrator with adaptive weight optimization [3]_.\n\nFeatures\n========\n\n- For each integrator a function prefixed with ``mpi_`` is available that uses\n  the `Message Passing Interface (MPI) <http://www.mpi-forum.org/>`_ to run the\n  integration in parallel. The parallel integration is designed in such a way\n  that it returns the numerically same result as its non-parallel counterpart.\n  In particular this means that the result is independent from the number of\n  processors used and only dependent on the seed of the random number generator.\n- Arbitrary many differential distributions can be generated during the\n  integration.\n- Callback functions can be used to print intermediate results as soon as they\n  are available.\n- For random number generation the classes of the C++ standard library are used.\n  This enables one to quickly change the number generators or even use custom\n  ones.\n- All functions are templatized in order to support all floating point types of\n  C++, i.e. ``float``, ``double``, and ``long double``. Kahan summation is used\n  to prevent a loss of numerical accuracy.\n\nUsage\n=====\n\nThis library uses features from the C++11 standard which need to be enabled with\nyour compiler. For the GCC and clang compilers this can be done by passing an\nadditional parameter to the compiler, e.g.::\n\n    g++ -std=c++0x my_program.cpp\n\nThe inclusion of the main header,::\n\n    #include <hep/mc.hpp>\n\nis sufficient to use it; you do not need to link against a library. If you\nintend to use the MPI variants of the integrators include::\n\n    #include <hep/mc-mpi.hpp>\n\ninstead. To see the library in action take a look at the example programs in the\n`examples directory`_.\n\nDocumentation and Examples\n==========================\n\nDocumentation is available online at http://cschwan.github.io/hep-mc and can be\ngenerated from sources (see Installation_). The examples can be viewed from\nwithin the documentation.\n\nInstallation\n============\n\nThe easiest way to use this library is to just download it from the `releases\npage`_ and point your compiler to the `include directory`_ - there is no library\nthat needs to be compiled.\n\nIf you want to automatically compile the example programs, generate the\ndocumentation, and/or install the headers you can also use the usual sequence\nfor autotools-based projects, i.e.::\n\n    ./configure --prefix=/usr/local\n    make\n    make install\n\nwhich installs the headers into ``/usr/local/include``. To generate the\ndocumentation pass ``--enable-doxygen`` to ``./configure``. Example programs are\ncompiled when you add ``--enable-examples``. For more options type ``./configure\n--help``.\n\nIf you downloaded the sources with ``git`` or got them as a ZIP file, you will\nnotice that the configure script is missing. In that case run::\n\n    autoreconf -fiv\n\ninside the project's top-level directory. This will generate the missing files.\n\nReferences\n==========\n\n.. [1] G. P. Lepage. \"A New Algorithm for Adaptive Multidimensional\n       Integration\". J. of Comp. Phys. 27 (1978), pp. 192-203. DOI:\n       `10.1016/0021-9991(78)90004-9\n       <http://dx.doi.org/10.1016/0021-9991(78)90004-9>`_.\n\n.. [2] G.P. Lepage. \"VEGAS: An Adaptive Multi-dimensional Integration Program\".\n       Cornell preprint CLNS 80-447 (1980).\n\n.. [3] R. Kleiss, R. Pittau. \"Weight optimization in multichannel Monte Carlo\".\n       Comp. Phys. Commun. 83 (1994), pp. 141-146. DOI:\n       `10.1016/0010-4655(94)90043-4\n       <http://dx.doi.org/10.1016/0010-4655(94)90043-4>`_. arXiv:\n       `hep-ph/9405257 <http://arxiv.org/abs/hep-ph/9405257>`_.\n\n.. _releases page: http://github.com/cschwan/hep-mc/releases\n.. _include directory: http://github.com/cschwan/hep-mc/tree/master/include\n.. _examples directory: http://github.com/cschwan/hep-mc/tree/master/examples\n", 
  "description": "A C++11 Template Library for Monte Carlo Integration"
}