{
  "read_at": 1462552025, 
  "description": "Experimental Design for Gaussian Process Regression in Python", 
  "README.md": "# GPEXP\nExperimental Design for Gaussian Process Regression  \nA python package for performing experimental design for Gaussian Process Regression\n\n###General Information\n\nAuthor: Alex Gorodetsky\n\nContact: goroda@mit.edu\n\nCopyright (c) 2013-2015, Massachusetts Institute of Technology  \nLicense: GPL2\n\n### Software Dependencies\n\n* python2.7\n* numpy\n* scipy\n* matplotlib (not absolutely necessary but demos require it)\n* nlopt: http://ab-initio.mit.edu/wiki/index.php/NLopt\n\n# Overview\nExperimental design deals with the issue of determining where to obtain new data in order to build accurate models.\nGaussian process regression is a useful method to build models of raw data or to build surrogate models for complex computational simulations. \n\nThis software is different from most other GP software because it focuses on combining experimental design and Gaussian process regression. It was developed for performing the studies provided in the paper detailing the integrated variance experimental design function (link arxiv paper). The current software contains the following options for kernels and experimental design cost functions (though adding new kernels and cost functions is fairly trivial).\n\n(Multidimensional) Kernels\n---------------------------\n  * Squared exponential\n    * isotropic \n    * automatic relevance determination \n  * Isotropic Matern kernel\n  * Mehler Kernel\n\nExperimental Design Cost Functions\n----------------------------------\n  * Integrated Variance\n  * Conditional Entropy\n  * Mutual Information\n  \n", 
  "id": 31031640
}