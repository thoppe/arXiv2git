{
  "read_at": 1462549092, 
  "description": "Search arXiv from the command line. Easily open as URL, PDF or output a generated BibTex entry. Integration with BibDesk to automatically insert references. Naive keyword scoring system to filter results to those likely to be relevant.", 
  "README.md": "## Tested ##\n\nOnly tested on OSX 10.8 with the following dependent packages:\n\n* requests v0.14.1\n* feedparser v5.1.3\n* docopt v0.6.1\n* nltk v2.0.4\n\n## Dependencies ##\n\n    pip install requests\n    pip install feedparser\n    pip install docopt\n    pip install nltk\n\n## Installation ##\n\n* Update the options at the top of config.py to suit your preferences (See: Options)\n\n## Usage ##\n\n    arXiv Search\n\n    Usage:\n    arxiv.py id <arxiv_id> [--abstract] [--bib | --url | --pdf]\n    arxiv.py search <query> [--author=<author>] [--category=<category>] [--period=<period>] [--limit=<limit>] [--score=<score>] [--abstract] [--bib | --url | --pdf]\n    arxiv.py new [--author=<author>] [--category=<category>] [--period=<period>] [--limit=<limit>] [--score=<score>] [--abstract] [--bib | --url | --pdf]\n    arxiv.py bib <arxiv_id>\n    arxiv.py url <arxiv_id>\n    arxiv.py pdf <arxiv_id>\n\n    Options:\n    arxiv_id                      The ID of an arXiv paper \n    query                         A query string to search arXiv\n    url, --url                    Opens the following arXiv id as a URL\n    pdf, --pdf                    Opens the following arXiv id as a PDF\n    bib, --bib                    Will print out bibtex entry for each matching result\n    --category=<category>         The category to restrict searches to\n    --author=<author>             The author to restrict searches to\n    --limit=<limit>               The maximum number of results to retrieve\n    --score=<score>               The score cutoff for the display of papers [default: 0]\n    --period=<period>             The days into the past to retrieve results for \n    --abstract                    Will print out the abstract for each matching result\n\n## Options (config.py) ##\n\n    # Whether or not you use BibDesk to handle your references (will automatically\n    # export BibTex references into the currently open BibDesk bilbiography)\n    USE_BIBDESK = True\n\n    # The default categories to search if no other categories are specified\n    DEFAULT_CATEGORIES = ['quant-ph']\n\n    # Whether or not to include the abstract in exported BibTex references\n    INC_ABSTRACT = True\n\n    # The number of results to return if no number is specified\n    DEFAULT_LIMIT = 100\n\n    # The software to use to 'open' a URL. Try \"open\" for OSX, \"gnome-open\" for\n    # Linux or \"cmd /c start\" for Windows. Commands for your specific setup may\n    # need to be determined.\n    OPEN_SOFTWARE = \"open\"\n\n    # A Python .format() string representing how results will be formatted\n    OUTPUT_FORMAT = \"{i:<6} {date} ({arxiv_id}) | {score} | {cate} | {mark}{title}{mark}\"\n\n    # Keywords for scoring purposes. Keyword/Phrase: Score.\n    KEYWORDS = {\n        'topological': 10, \n        'qubit': 5, \n        'qec': 20,\n        'fault tolerant': 25,\n        'error correction': 20,\n        'error': 5,\n    }\n\n## Future Prospects ##\n\n* Automatically generate scoring keywords and weights based on a provided .bib file of references. \n* Improve and de-hackify the arXiv journal_ref parsing\n", 
  "id": 8829036
}